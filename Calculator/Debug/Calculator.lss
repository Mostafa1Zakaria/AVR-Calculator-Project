
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003b34  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000142  00800060  00003b34  00003ba8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002e74  00000000  00000000  00003cec  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000018fe  00000000  00000000  00006b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  0000845e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000232  00000000  00000000  0000863e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002891  00000000  00000000  00008870  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001628  00000000  00000000  0000b101  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013de  00000000  00000000  0000c729  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000db08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000030f  00000000  00000000  0000dd08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a56  00000000  00000000  0000e017  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ea6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e3       	ldi	r30, 0x34	; 52
      68:	fb e3       	ldi	r31, 0x3B	; 59
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3a       	cpi	r26, 0xA2	; 162
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 2a 1b 	call	0x3654	; 0x3654 <main>
      7a:	0c 94 98 1d 	jmp	0x3b30	; 0x3b30 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 1d 04 	call	0x83a	; 0x83a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 61 1d 	jmp	0x3ac2	; 0x3ac2 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	af e7       	ldi	r26, 0x7F	; 127
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 7d 1d 	jmp	0x3afa	; 0x3afa <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 61 1d 	jmp	0x3ac2	; 0x3ac2 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8f e7       	ldi	r24, 0x7F	; 127
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 7d 1d 	jmp	0x3afa	; 0x3afa <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	6f e7       	ldi	r22, 0x7F	; 127
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 85 1d 	jmp	0x3b0a	; 0x3b0a <__epilogue_restores__+0x10>

0000077a <__eqsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__eqsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__eqsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__eqsf2+0x58>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

000007da <__gtsf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gtsf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gtsf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gtsf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

0000083a <__gesf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	8f ef       	ldi	r24, 0xFF	; 255
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

0000089a <__ltsf2>:
     89a:	a8 e1       	ldi	r26, 0x18	; 24
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__+0x18>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	2d 83       	std	Y+5, r18	; 0x05
     8b0:	3e 83       	std	Y+6, r19	; 0x06
     8b2:	4f 83       	std	Y+7, r20	; 0x07
     8b4:	58 87       	std	Y+8, r21	; 0x08
     8b6:	89 e0       	ldi	r24, 0x09	; 9
     8b8:	e8 2e       	mov	r14, r24
     8ba:	f1 2c       	mov	r15, r1
     8bc:	ec 0e       	add	r14, r28
     8be:	fd 1e       	adc	r15, r29
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8ca:	8e 01       	movw	r16, r28
     8cc:	0f 5e       	subi	r16, 0xEF	; 239
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	ce 01       	movw	r24, r28
     8d2:	05 96       	adiw	r24, 0x05	; 5
     8d4:	b8 01       	movw	r22, r16
     8d6:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     8da:	89 85       	ldd	r24, Y+9	; 0x09
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	40 f0       	brcs	.+16     	; 0x8f0 <__ltsf2+0x56>
     8e0:	89 89       	ldd	r24, Y+17	; 0x11
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	28 f0       	brcs	.+10     	; 0x8f0 <__ltsf2+0x56>
     8e6:	c7 01       	movw	r24, r14
     8e8:	b8 01       	movw	r22, r16
     8ea:	0e 94 44 07 	call	0xe88	; 0xe88 <__fpcmp_parts_f>
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <__ltsf2+0x58>
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	68 96       	adiw	r28, 0x18	; 24
     8f4:	e6 e0       	ldi	r30, 0x06	; 6
     8f6:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__+0x18>

000008fa <__floatsisf>:
     8fa:	a8 e0       	ldi	r26, 0x08	; 8
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 6a 1d 	jmp	0x3ad4	; 0x3ad4 <__prologue_saves__+0x12>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	83 e0       	ldi	r24, 0x03	; 3
     90c:	89 83       	std	Y+1, r24	; 0x01
     90e:	da 01       	movw	r26, r20
     910:	c9 01       	movw	r24, r18
     912:	88 27       	eor	r24, r24
     914:	b7 fd       	sbrc	r27, 7
     916:	83 95       	inc	r24
     918:	99 27       	eor	r25, r25
     91a:	aa 27       	eor	r26, r26
     91c:	bb 27       	eor	r27, r27
     91e:	b8 2e       	mov	r11, r24
     920:	21 15       	cp	r18, r1
     922:	31 05       	cpc	r19, r1
     924:	41 05       	cpc	r20, r1
     926:	51 05       	cpc	r21, r1
     928:	19 f4       	brne	.+6      	; 0x930 <__floatsisf+0x36>
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	3a c0       	rjmp	.+116    	; 0x9a4 <__floatsisf+0xaa>
     930:	88 23       	and	r24, r24
     932:	a9 f0       	breq	.+42     	; 0x95e <__floatsisf+0x64>
     934:	20 30       	cpi	r18, 0x00	; 0
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	38 07       	cpc	r19, r24
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	48 07       	cpc	r20, r24
     93e:	80 e8       	ldi	r24, 0x80	; 128
     940:	58 07       	cpc	r21, r24
     942:	29 f4       	brne	.+10     	; 0x94e <__floatsisf+0x54>
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	9f ec       	ldi	r25, 0xCF	; 207
     94c:	30 c0       	rjmp	.+96     	; 0x9ae <__floatsisf+0xb4>
     94e:	ee 24       	eor	r14, r14
     950:	ff 24       	eor	r15, r15
     952:	87 01       	movw	r16, r14
     954:	e2 1a       	sub	r14, r18
     956:	f3 0a       	sbc	r15, r19
     958:	04 0b       	sbc	r16, r20
     95a:	15 0b       	sbc	r17, r21
     95c:	02 c0       	rjmp	.+4      	; 0x962 <__floatsisf+0x68>
     95e:	79 01       	movw	r14, r18
     960:	8a 01       	movw	r16, r20
     962:	8e e1       	ldi	r24, 0x1E	; 30
     964:	c8 2e       	mov	r12, r24
     966:	d1 2c       	mov	r13, r1
     968:	dc 82       	std	Y+4, r13	; 0x04
     96a:	cb 82       	std	Y+3, r12	; 0x03
     96c:	ed 82       	std	Y+5, r14	; 0x05
     96e:	fe 82       	std	Y+6, r15	; 0x06
     970:	0f 83       	std	Y+7, r16	; 0x07
     972:	18 87       	std	Y+8, r17	; 0x08
     974:	c8 01       	movw	r24, r16
     976:	b7 01       	movw	r22, r14
     978:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     97c:	01 97       	sbiw	r24, 0x01	; 1
     97e:	18 16       	cp	r1, r24
     980:	19 06       	cpc	r1, r25
     982:	84 f4       	brge	.+32     	; 0x9a4 <__floatsisf+0xaa>
     984:	08 2e       	mov	r0, r24
     986:	04 c0       	rjmp	.+8      	; 0x990 <__floatsisf+0x96>
     988:	ee 0c       	add	r14, r14
     98a:	ff 1c       	adc	r15, r15
     98c:	00 1f       	adc	r16, r16
     98e:	11 1f       	adc	r17, r17
     990:	0a 94       	dec	r0
     992:	d2 f7       	brpl	.-12     	; 0x988 <__floatsisf+0x8e>
     994:	ed 82       	std	Y+5, r14	; 0x05
     996:	fe 82       	std	Y+6, r15	; 0x06
     998:	0f 83       	std	Y+7, r16	; 0x07
     99a:	18 87       	std	Y+8, r17	; 0x08
     99c:	c8 1a       	sub	r12, r24
     99e:	d9 0a       	sbc	r13, r25
     9a0:	dc 82       	std	Y+4, r13	; 0x04
     9a2:	cb 82       	std	Y+3, r12	; 0x03
     9a4:	ba 82       	std	Y+2, r11	; 0x02
     9a6:	ce 01       	movw	r24, r28
     9a8:	01 96       	adiw	r24, 0x01	; 1
     9aa:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     9ae:	28 96       	adiw	r28, 0x08	; 8
     9b0:	e9 e0       	ldi	r30, 0x09	; 9
     9b2:	0c 94 86 1d 	jmp	0x3b0c	; 0x3b0c <__epilogue_restores__+0x12>

000009b6 <__fixsfsi>:
     9b6:	ac e0       	ldi	r26, 0x0C	; 12
     9b8:	b0 e0       	ldi	r27, 0x00	; 0
     9ba:	e1 ee       	ldi	r30, 0xE1	; 225
     9bc:	f4 e0       	ldi	r31, 0x04	; 4
     9be:	0c 94 71 1d 	jmp	0x3ae2	; 0x3ae2 <__prologue_saves__+0x20>
     9c2:	69 83       	std	Y+1, r22	; 0x01
     9c4:	7a 83       	std	Y+2, r23	; 0x02
     9c6:	8b 83       	std	Y+3, r24	; 0x03
     9c8:	9c 83       	std	Y+4, r25	; 0x04
     9ca:	ce 01       	movw	r24, r28
     9cc:	01 96       	adiw	r24, 0x01	; 1
     9ce:	be 01       	movw	r22, r28
     9d0:	6b 5f       	subi	r22, 0xFB	; 251
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	0e 94 cc 06 	call	0xd98	; 0xd98 <__unpack_f>
     9d8:	8d 81       	ldd	r24, Y+5	; 0x05
     9da:	82 30       	cpi	r24, 0x02	; 2
     9dc:	61 f1       	breq	.+88     	; 0xa36 <__fixsfsi+0x80>
     9de:	82 30       	cpi	r24, 0x02	; 2
     9e0:	50 f1       	brcs	.+84     	; 0xa36 <__fixsfsi+0x80>
     9e2:	84 30       	cpi	r24, 0x04	; 4
     9e4:	21 f4       	brne	.+8      	; 0x9ee <__fixsfsi+0x38>
     9e6:	8e 81       	ldd	r24, Y+6	; 0x06
     9e8:	88 23       	and	r24, r24
     9ea:	51 f1       	breq	.+84     	; 0xa40 <__fixsfsi+0x8a>
     9ec:	2e c0       	rjmp	.+92     	; 0xa4a <__fixsfsi+0x94>
     9ee:	2f 81       	ldd	r18, Y+7	; 0x07
     9f0:	38 85       	ldd	r19, Y+8	; 0x08
     9f2:	37 fd       	sbrc	r19, 7
     9f4:	20 c0       	rjmp	.+64     	; 0xa36 <__fixsfsi+0x80>
     9f6:	6e 81       	ldd	r22, Y+6	; 0x06
     9f8:	2f 31       	cpi	r18, 0x1F	; 31
     9fa:	31 05       	cpc	r19, r1
     9fc:	1c f0       	brlt	.+6      	; 0xa04 <__fixsfsi+0x4e>
     9fe:	66 23       	and	r22, r22
     a00:	f9 f0       	breq	.+62     	; 0xa40 <__fixsfsi+0x8a>
     a02:	23 c0       	rjmp	.+70     	; 0xa4a <__fixsfsi+0x94>
     a04:	8e e1       	ldi	r24, 0x1E	; 30
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	82 1b       	sub	r24, r18
     a0a:	93 0b       	sbc	r25, r19
     a0c:	29 85       	ldd	r18, Y+9	; 0x09
     a0e:	3a 85       	ldd	r19, Y+10	; 0x0a
     a10:	4b 85       	ldd	r20, Y+11	; 0x0b
     a12:	5c 85       	ldd	r21, Y+12	; 0x0c
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__fixsfsi+0x68>
     a16:	56 95       	lsr	r21
     a18:	47 95       	ror	r20
     a1a:	37 95       	ror	r19
     a1c:	27 95       	ror	r18
     a1e:	8a 95       	dec	r24
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__fixsfsi+0x60>
     a22:	66 23       	and	r22, r22
     a24:	b1 f0       	breq	.+44     	; 0xa52 <__fixsfsi+0x9c>
     a26:	50 95       	com	r21
     a28:	40 95       	com	r20
     a2a:	30 95       	com	r19
     a2c:	21 95       	neg	r18
     a2e:	3f 4f       	sbci	r19, 0xFF	; 255
     a30:	4f 4f       	sbci	r20, 0xFF	; 255
     a32:	5f 4f       	sbci	r21, 0xFF	; 255
     a34:	0e c0       	rjmp	.+28     	; 0xa52 <__fixsfsi+0x9c>
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 e0       	ldi	r20, 0x00	; 0
     a3c:	50 e0       	ldi	r21, 0x00	; 0
     a3e:	09 c0       	rjmp	.+18     	; 0xa52 <__fixsfsi+0x9c>
     a40:	2f ef       	ldi	r18, 0xFF	; 255
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	4f ef       	ldi	r20, 0xFF	; 255
     a46:	5f e7       	ldi	r21, 0x7F	; 127
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <__fixsfsi+0x9c>
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e0       	ldi	r20, 0x00	; 0
     a50:	50 e8       	ldi	r21, 0x80	; 128
     a52:	b9 01       	movw	r22, r18
     a54:	ca 01       	movw	r24, r20
     a56:	2c 96       	adiw	r28, 0x0c	; 12
     a58:	e2 e0       	ldi	r30, 0x02	; 2
     a5a:	0c 94 8d 1d 	jmp	0x3b1a	; 0x3b1a <__epilogue_restores__+0x20>

00000a5e <__floatunsisf>:
     a5e:	a8 e0       	ldi	r26, 0x08	; 8
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	e5 e3       	ldi	r30, 0x35	; 53
     a64:	f5 e0       	ldi	r31, 0x05	; 5
     a66:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__prologue_saves__+0x10>
     a6a:	7b 01       	movw	r14, r22
     a6c:	8c 01       	movw	r16, r24
     a6e:	61 15       	cp	r22, r1
     a70:	71 05       	cpc	r23, r1
     a72:	81 05       	cpc	r24, r1
     a74:	91 05       	cpc	r25, r1
     a76:	19 f4       	brne	.+6      	; 0xa7e <__floatunsisf+0x20>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	89 83       	std	Y+1, r24	; 0x01
     a7c:	60 c0       	rjmp	.+192    	; 0xb3e <__floatunsisf+0xe0>
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	8e e1       	ldi	r24, 0x1E	; 30
     a84:	c8 2e       	mov	r12, r24
     a86:	d1 2c       	mov	r13, r1
     a88:	dc 82       	std	Y+4, r13	; 0x04
     a8a:	cb 82       	std	Y+3, r12	; 0x03
     a8c:	ed 82       	std	Y+5, r14	; 0x05
     a8e:	fe 82       	std	Y+6, r15	; 0x06
     a90:	0f 83       	std	Y+7, r16	; 0x07
     a92:	18 87       	std	Y+8, r17	; 0x08
     a94:	c8 01       	movw	r24, r16
     a96:	b7 01       	movw	r22, r14
     a98:	0e 94 a8 05 	call	0xb50	; 0xb50 <__clzsi2>
     a9c:	fc 01       	movw	r30, r24
     a9e:	31 97       	sbiw	r30, 0x01	; 1
     aa0:	f7 ff       	sbrs	r31, 7
     aa2:	3b c0       	rjmp	.+118    	; 0xb1a <__floatunsisf+0xbc>
     aa4:	22 27       	eor	r18, r18
     aa6:	33 27       	eor	r19, r19
     aa8:	2e 1b       	sub	r18, r30
     aaa:	3f 0b       	sbc	r19, r31
     aac:	57 01       	movw	r10, r14
     aae:	68 01       	movw	r12, r16
     ab0:	02 2e       	mov	r0, r18
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__floatunsisf+0x5e>
     ab4:	d6 94       	lsr	r13
     ab6:	c7 94       	ror	r12
     ab8:	b7 94       	ror	r11
     aba:	a7 94       	ror	r10
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <__floatunsisf+0x56>
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e0       	ldi	r26, 0x00	; 0
     ace:	b0 e0       	ldi	r27, 0x00	; 0
     ad0:	04 c0       	rjmp	.+8      	; 0xada <__floatunsisf+0x7c>
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	2a 95       	dec	r18
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <__floatunsisf+0x74>
     ade:	01 97       	sbiw	r24, 0x01	; 1
     ae0:	a1 09       	sbc	r26, r1
     ae2:	b1 09       	sbc	r27, r1
     ae4:	8e 21       	and	r24, r14
     ae6:	9f 21       	and	r25, r15
     ae8:	a0 23       	and	r26, r16
     aea:	b1 23       	and	r27, r17
     aec:	00 97       	sbiw	r24, 0x00	; 0
     aee:	a1 05       	cpc	r26, r1
     af0:	b1 05       	cpc	r27, r1
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatunsisf+0x9e>
     af4:	41 e0       	ldi	r20, 0x01	; 1
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	4a 29       	or	r20, r10
     afe:	5b 29       	or	r21, r11
     b00:	6c 29       	or	r22, r12
     b02:	7d 29       	or	r23, r13
     b04:	4d 83       	std	Y+5, r20	; 0x05
     b06:	5e 83       	std	Y+6, r21	; 0x06
     b08:	6f 83       	std	Y+7, r22	; 0x07
     b0a:	78 87       	std	Y+8, r23	; 0x08
     b0c:	8e e1       	ldi	r24, 0x1E	; 30
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	8e 1b       	sub	r24, r30
     b12:	9f 0b       	sbc	r25, r31
     b14:	9c 83       	std	Y+4, r25	; 0x04
     b16:	8b 83       	std	Y+3, r24	; 0x03
     b18:	12 c0       	rjmp	.+36     	; 0xb3e <__floatunsisf+0xe0>
     b1a:	30 97       	sbiw	r30, 0x00	; 0
     b1c:	81 f0       	breq	.+32     	; 0xb3e <__floatunsisf+0xe0>
     b1e:	0e 2e       	mov	r0, r30
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__floatunsisf+0xcc>
     b22:	ee 0c       	add	r14, r14
     b24:	ff 1c       	adc	r15, r15
     b26:	00 1f       	adc	r16, r16
     b28:	11 1f       	adc	r17, r17
     b2a:	0a 94       	dec	r0
     b2c:	d2 f7       	brpl	.-12     	; 0xb22 <__floatunsisf+0xc4>
     b2e:	ed 82       	std	Y+5, r14	; 0x05
     b30:	fe 82       	std	Y+6, r15	; 0x06
     b32:	0f 83       	std	Y+7, r16	; 0x07
     b34:	18 87       	std	Y+8, r17	; 0x08
     b36:	ce 1a       	sub	r12, r30
     b38:	df 0a       	sbc	r13, r31
     b3a:	dc 82       	std	Y+4, r13	; 0x04
     b3c:	cb 82       	std	Y+3, r12	; 0x03
     b3e:	1a 82       	std	Y+2, r1	; 0x02
     b40:	ce 01       	movw	r24, r28
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	0e 94 f7 05 	call	0xbee	; 0xbee <__pack_f>
     b48:	28 96       	adiw	r28, 0x08	; 8
     b4a:	ea e0       	ldi	r30, 0x0A	; 10
     b4c:	0c 94 85 1d 	jmp	0x3b0a	; 0x3b0a <__epilogue_restores__+0x10>

00000b50 <__clzsi2>:
     b50:	ef 92       	push	r14
     b52:	ff 92       	push	r15
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	7b 01       	movw	r14, r22
     b5a:	8c 01       	movw	r16, r24
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	e8 16       	cp	r14, r24
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	f8 06       	cpc	r15, r24
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	08 07       	cpc	r16, r24
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	18 07       	cpc	r17, r24
     b6c:	88 f4       	brcc	.+34     	; 0xb90 <__clzsi2+0x40>
     b6e:	8f ef       	ldi	r24, 0xFF	; 255
     b70:	e8 16       	cp	r14, r24
     b72:	f1 04       	cpc	r15, r1
     b74:	01 05       	cpc	r16, r1
     b76:	11 05       	cpc	r17, r1
     b78:	31 f0       	breq	.+12     	; 0xb86 <__clzsi2+0x36>
     b7a:	28 f0       	brcs	.+10     	; 0xb86 <__clzsi2+0x36>
     b7c:	88 e0       	ldi	r24, 0x08	; 8
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	a0 e0       	ldi	r26, 0x00	; 0
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	17 c0       	rjmp	.+46     	; 0xbb4 <__clzsi2+0x64>
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	a0 e0       	ldi	r26, 0x00	; 0
     b8c:	b0 e0       	ldi	r27, 0x00	; 0
     b8e:	12 c0       	rjmp	.+36     	; 0xbb4 <__clzsi2+0x64>
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	e8 16       	cp	r14, r24
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	f8 06       	cpc	r15, r24
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	08 07       	cpc	r16, r24
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	18 07       	cpc	r17, r24
     ba0:	28 f0       	brcs	.+10     	; 0xbac <__clzsi2+0x5c>
     ba2:	88 e1       	ldi	r24, 0x18	; 24
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	a0 e0       	ldi	r26, 0x00	; 0
     ba8:	b0 e0       	ldi	r27, 0x00	; 0
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__clzsi2+0x64>
     bac:	80 e1       	ldi	r24, 0x10	; 16
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	20 e2       	ldi	r18, 0x20	; 32
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	40 e0       	ldi	r20, 0x00	; 0
     bba:	50 e0       	ldi	r21, 0x00	; 0
     bbc:	28 1b       	sub	r18, r24
     bbe:	39 0b       	sbc	r19, r25
     bc0:	4a 0b       	sbc	r20, r26
     bc2:	5b 0b       	sbc	r21, r27
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__clzsi2+0x7e>
     bc6:	16 95       	lsr	r17
     bc8:	07 95       	ror	r16
     bca:	f7 94       	ror	r15
     bcc:	e7 94       	ror	r14
     bce:	8a 95       	dec	r24
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__clzsi2+0x76>
     bd2:	f7 01       	movw	r30, r14
     bd4:	e9 57       	subi	r30, 0x79	; 121
     bd6:	ff 4f       	sbci	r31, 0xFF	; 255
     bd8:	80 81       	ld	r24, Z
     bda:	28 1b       	sub	r18, r24
     bdc:	31 09       	sbc	r19, r1
     bde:	41 09       	sbc	r20, r1
     be0:	51 09       	sbc	r21, r1
     be2:	c9 01       	movw	r24, r18
     be4:	1f 91       	pop	r17
     be6:	0f 91       	pop	r16
     be8:	ff 90       	pop	r15
     bea:	ef 90       	pop	r14
     bec:	08 95       	ret

00000bee <__pack_f>:
     bee:	df 92       	push	r13
     bf0:	ef 92       	push	r14
     bf2:	ff 92       	push	r15
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	fc 01       	movw	r30, r24
     bfa:	e4 80       	ldd	r14, Z+4	; 0x04
     bfc:	f5 80       	ldd	r15, Z+5	; 0x05
     bfe:	06 81       	ldd	r16, Z+6	; 0x06
     c00:	17 81       	ldd	r17, Z+7	; 0x07
     c02:	d1 80       	ldd	r13, Z+1	; 0x01
     c04:	80 81       	ld	r24, Z
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	48 f4       	brcc	.+18     	; 0xc1c <__pack_f+0x2e>
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	a0 e1       	ldi	r26, 0x10	; 16
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	e8 2a       	or	r14, r24
     c14:	f9 2a       	or	r15, r25
     c16:	0a 2b       	or	r16, r26
     c18:	1b 2b       	or	r17, r27
     c1a:	a5 c0       	rjmp	.+330    	; 0xd66 <__pack_f+0x178>
     c1c:	84 30       	cpi	r24, 0x04	; 4
     c1e:	09 f4       	brne	.+2      	; 0xc22 <__pack_f+0x34>
     c20:	9f c0       	rjmp	.+318    	; 0xd60 <__pack_f+0x172>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	21 f4       	brne	.+8      	; 0xc2e <__pack_f+0x40>
     c26:	ee 24       	eor	r14, r14
     c28:	ff 24       	eor	r15, r15
     c2a:	87 01       	movw	r16, r14
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <__pack_f+0x4a>
     c2e:	e1 14       	cp	r14, r1
     c30:	f1 04       	cpc	r15, r1
     c32:	01 05       	cpc	r16, r1
     c34:	11 05       	cpc	r17, r1
     c36:	19 f4       	brne	.+6      	; 0xc3e <__pack_f+0x50>
     c38:	e0 e0       	ldi	r30, 0x00	; 0
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	96 c0       	rjmp	.+300    	; 0xd6a <__pack_f+0x17c>
     c3e:	62 81       	ldd	r22, Z+2	; 0x02
     c40:	73 81       	ldd	r23, Z+3	; 0x03
     c42:	9f ef       	ldi	r25, 0xFF	; 255
     c44:	62 38       	cpi	r22, 0x82	; 130
     c46:	79 07       	cpc	r23, r25
     c48:	0c f0       	brlt	.+2      	; 0xc4c <__pack_f+0x5e>
     c4a:	5b c0       	rjmp	.+182    	; 0xd02 <__pack_f+0x114>
     c4c:	22 e8       	ldi	r18, 0x82	; 130
     c4e:	3f ef       	ldi	r19, 0xFF	; 255
     c50:	26 1b       	sub	r18, r22
     c52:	37 0b       	sbc	r19, r23
     c54:	2a 31       	cpi	r18, 0x1A	; 26
     c56:	31 05       	cpc	r19, r1
     c58:	2c f0       	brlt	.+10     	; 0xc64 <__pack_f+0x76>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	40 e0       	ldi	r20, 0x00	; 0
     c60:	50 e0       	ldi	r21, 0x00	; 0
     c62:	2a c0       	rjmp	.+84     	; 0xcb8 <__pack_f+0xca>
     c64:	b8 01       	movw	r22, r16
     c66:	a7 01       	movw	r20, r14
     c68:	02 2e       	mov	r0, r18
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <__pack_f+0x86>
     c6c:	76 95       	lsr	r23
     c6e:	67 95       	ror	r22
     c70:	57 95       	ror	r21
     c72:	47 95       	ror	r20
     c74:	0a 94       	dec	r0
     c76:	d2 f7       	brpl	.-12     	; 0xc6c <__pack_f+0x7e>
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	04 c0       	rjmp	.+8      	; 0xc8a <__pack_f+0x9c>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	aa 1f       	adc	r26, r26
     c88:	bb 1f       	adc	r27, r27
     c8a:	2a 95       	dec	r18
     c8c:	d2 f7       	brpl	.-12     	; 0xc82 <__pack_f+0x94>
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	a1 09       	sbc	r26, r1
     c92:	b1 09       	sbc	r27, r1
     c94:	8e 21       	and	r24, r14
     c96:	9f 21       	and	r25, r15
     c98:	a0 23       	and	r26, r16
     c9a:	b1 23       	and	r27, r17
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	a1 05       	cpc	r26, r1
     ca0:	b1 05       	cpc	r27, r1
     ca2:	21 f0       	breq	.+8      	; 0xcac <__pack_f+0xbe>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	9a 01       	movw	r18, r20
     cae:	ab 01       	movw	r20, r22
     cb0:	28 2b       	or	r18, r24
     cb2:	39 2b       	or	r19, r25
     cb4:	4a 2b       	or	r20, r26
     cb6:	5b 2b       	or	r21, r27
     cb8:	da 01       	movw	r26, r20
     cba:	c9 01       	movw	r24, r18
     cbc:	8f 77       	andi	r24, 0x7F	; 127
     cbe:	90 70       	andi	r25, 0x00	; 0
     cc0:	a0 70       	andi	r26, 0x00	; 0
     cc2:	b0 70       	andi	r27, 0x00	; 0
     cc4:	80 34       	cpi	r24, 0x40	; 64
     cc6:	91 05       	cpc	r25, r1
     cc8:	a1 05       	cpc	r26, r1
     cca:	b1 05       	cpc	r27, r1
     ccc:	39 f4       	brne	.+14     	; 0xcdc <__pack_f+0xee>
     cce:	27 ff       	sbrs	r18, 7
     cd0:	09 c0       	rjmp	.+18     	; 0xce4 <__pack_f+0xf6>
     cd2:	20 5c       	subi	r18, 0xC0	; 192
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4f 4f       	sbci	r20, 0xFF	; 255
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	04 c0       	rjmp	.+8      	; 0xce4 <__pack_f+0xf6>
     cdc:	21 5c       	subi	r18, 0xC1	; 193
     cde:	3f 4f       	sbci	r19, 0xFF	; 255
     ce0:	4f 4f       	sbci	r20, 0xFF	; 255
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	e0 e0       	ldi	r30, 0x00	; 0
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	20 30       	cpi	r18, 0x00	; 0
     cea:	a0 e0       	ldi	r26, 0x00	; 0
     cec:	3a 07       	cpc	r19, r26
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	4a 07       	cpc	r20, r26
     cf2:	a0 e4       	ldi	r26, 0x40	; 64
     cf4:	5a 07       	cpc	r21, r26
     cf6:	10 f0       	brcs	.+4      	; 0xcfc <__pack_f+0x10e>
     cf8:	e1 e0       	ldi	r30, 0x01	; 1
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	79 01       	movw	r14, r18
     cfe:	8a 01       	movw	r16, r20
     d00:	27 c0       	rjmp	.+78     	; 0xd50 <__pack_f+0x162>
     d02:	60 38       	cpi	r22, 0x80	; 128
     d04:	71 05       	cpc	r23, r1
     d06:	64 f5       	brge	.+88     	; 0xd60 <__pack_f+0x172>
     d08:	fb 01       	movw	r30, r22
     d0a:	e1 58       	subi	r30, 0x81	; 129
     d0c:	ff 4f       	sbci	r31, 0xFF	; 255
     d0e:	d8 01       	movw	r26, r16
     d10:	c7 01       	movw	r24, r14
     d12:	8f 77       	andi	r24, 0x7F	; 127
     d14:	90 70       	andi	r25, 0x00	; 0
     d16:	a0 70       	andi	r26, 0x00	; 0
     d18:	b0 70       	andi	r27, 0x00	; 0
     d1a:	80 34       	cpi	r24, 0x40	; 64
     d1c:	91 05       	cpc	r25, r1
     d1e:	a1 05       	cpc	r26, r1
     d20:	b1 05       	cpc	r27, r1
     d22:	39 f4       	brne	.+14     	; 0xd32 <__pack_f+0x144>
     d24:	e7 fe       	sbrs	r14, 7
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <__pack_f+0x154>
     d28:	80 e4       	ldi	r24, 0x40	; 64
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	a0 e0       	ldi	r26, 0x00	; 0
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	04 c0       	rjmp	.+8      	; 0xd3a <__pack_f+0x14c>
     d32:	8f e3       	ldi	r24, 0x3F	; 63
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e0       	ldi	r26, 0x00	; 0
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e8 0e       	add	r14, r24
     d3c:	f9 1e       	adc	r15, r25
     d3e:	0a 1f       	adc	r16, r26
     d40:	1b 1f       	adc	r17, r27
     d42:	17 ff       	sbrs	r17, 7
     d44:	05 c0       	rjmp	.+10     	; 0xd50 <__pack_f+0x162>
     d46:	16 95       	lsr	r17
     d48:	07 95       	ror	r16
     d4a:	f7 94       	ror	r15
     d4c:	e7 94       	ror	r14
     d4e:	31 96       	adiw	r30, 0x01	; 1
     d50:	87 e0       	ldi	r24, 0x07	; 7
     d52:	16 95       	lsr	r17
     d54:	07 95       	ror	r16
     d56:	f7 94       	ror	r15
     d58:	e7 94       	ror	r14
     d5a:	8a 95       	dec	r24
     d5c:	d1 f7       	brne	.-12     	; 0xd52 <__pack_f+0x164>
     d5e:	05 c0       	rjmp	.+10     	; 0xd6a <__pack_f+0x17c>
     d60:	ee 24       	eor	r14, r14
     d62:	ff 24       	eor	r15, r15
     d64:	87 01       	movw	r16, r14
     d66:	ef ef       	ldi	r30, 0xFF	; 255
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	6e 2f       	mov	r22, r30
     d6c:	67 95       	ror	r22
     d6e:	66 27       	eor	r22, r22
     d70:	67 95       	ror	r22
     d72:	90 2f       	mov	r25, r16
     d74:	9f 77       	andi	r25, 0x7F	; 127
     d76:	d7 94       	ror	r13
     d78:	dd 24       	eor	r13, r13
     d7a:	d7 94       	ror	r13
     d7c:	8e 2f       	mov	r24, r30
     d7e:	86 95       	lsr	r24
     d80:	49 2f       	mov	r20, r25
     d82:	46 2b       	or	r20, r22
     d84:	58 2f       	mov	r21, r24
     d86:	5d 29       	or	r21, r13
     d88:	b7 01       	movw	r22, r14
     d8a:	ca 01       	movw	r24, r20
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	ff 90       	pop	r15
     d92:	ef 90       	pop	r14
     d94:	df 90       	pop	r13
     d96:	08 95       	ret

00000d98 <__unpack_f>:
     d98:	fc 01       	movw	r30, r24
     d9a:	db 01       	movw	r26, r22
     d9c:	40 81       	ld	r20, Z
     d9e:	51 81       	ldd	r21, Z+1	; 0x01
     da0:	22 81       	ldd	r18, Z+2	; 0x02
     da2:	62 2f       	mov	r22, r18
     da4:	6f 77       	andi	r22, 0x7F	; 127
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	22 1f       	adc	r18, r18
     daa:	22 27       	eor	r18, r18
     dac:	22 1f       	adc	r18, r18
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	89 2f       	mov	r24, r25
     db2:	88 0f       	add	r24, r24
     db4:	82 2b       	or	r24, r18
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	99 1f       	adc	r25, r25
     dbc:	99 27       	eor	r25, r25
     dbe:	99 1f       	adc	r25, r25
     dc0:	11 96       	adiw	r26, 0x01	; 1
     dc2:	9c 93       	st	X, r25
     dc4:	11 97       	sbiw	r26, 0x01	; 1
     dc6:	21 15       	cp	r18, r1
     dc8:	31 05       	cpc	r19, r1
     dca:	a9 f5       	brne	.+106    	; 0xe36 <__unpack_f+0x9e>
     dcc:	41 15       	cp	r20, r1
     dce:	51 05       	cpc	r21, r1
     dd0:	61 05       	cpc	r22, r1
     dd2:	71 05       	cpc	r23, r1
     dd4:	11 f4       	brne	.+4      	; 0xdda <__unpack_f+0x42>
     dd6:	82 e0       	ldi	r24, 0x02	; 2
     dd8:	37 c0       	rjmp	.+110    	; 0xe48 <__unpack_f+0xb0>
     dda:	82 e8       	ldi	r24, 0x82	; 130
     ddc:	9f ef       	ldi	r25, 0xFF	; 255
     dde:	13 96       	adiw	r26, 0x03	; 3
     de0:	9c 93       	st	X, r25
     de2:	8e 93       	st	-X, r24
     de4:	12 97       	sbiw	r26, 0x02	; 2
     de6:	9a 01       	movw	r18, r20
     de8:	ab 01       	movw	r20, r22
     dea:	67 e0       	ldi	r22, 0x07	; 7
     dec:	22 0f       	add	r18, r18
     dee:	33 1f       	adc	r19, r19
     df0:	44 1f       	adc	r20, r20
     df2:	55 1f       	adc	r21, r21
     df4:	6a 95       	dec	r22
     df6:	d1 f7       	brne	.-12     	; 0xdec <__unpack_f+0x54>
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	8c 93       	st	X, r24
     dfc:	0d c0       	rjmp	.+26     	; 0xe18 <__unpack_f+0x80>
     dfe:	22 0f       	add	r18, r18
     e00:	33 1f       	adc	r19, r19
     e02:	44 1f       	adc	r20, r20
     e04:	55 1f       	adc	r21, r21
     e06:	12 96       	adiw	r26, 0x02	; 2
     e08:	8d 91       	ld	r24, X+
     e0a:	9c 91       	ld	r25, X
     e0c:	13 97       	sbiw	r26, 0x03	; 3
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	13 96       	adiw	r26, 0x03	; 3
     e12:	9c 93       	st	X, r25
     e14:	8e 93       	st	-X, r24
     e16:	12 97       	sbiw	r26, 0x02	; 2
     e18:	20 30       	cpi	r18, 0x00	; 0
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	38 07       	cpc	r19, r24
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	48 07       	cpc	r20, r24
     e22:	80 e4       	ldi	r24, 0x40	; 64
     e24:	58 07       	cpc	r21, r24
     e26:	58 f3       	brcs	.-42     	; 0xdfe <__unpack_f+0x66>
     e28:	14 96       	adiw	r26, 0x04	; 4
     e2a:	2d 93       	st	X+, r18
     e2c:	3d 93       	st	X+, r19
     e2e:	4d 93       	st	X+, r20
     e30:	5c 93       	st	X, r21
     e32:	17 97       	sbiw	r26, 0x07	; 7
     e34:	08 95       	ret
     e36:	2f 3f       	cpi	r18, 0xFF	; 255
     e38:	31 05       	cpc	r19, r1
     e3a:	79 f4       	brne	.+30     	; 0xe5a <__unpack_f+0xc2>
     e3c:	41 15       	cp	r20, r1
     e3e:	51 05       	cpc	r21, r1
     e40:	61 05       	cpc	r22, r1
     e42:	71 05       	cpc	r23, r1
     e44:	19 f4       	brne	.+6      	; 0xe4c <__unpack_f+0xb4>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	8c 93       	st	X, r24
     e4a:	08 95       	ret
     e4c:	64 ff       	sbrs	r22, 4
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <__unpack_f+0xbe>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	8c 93       	st	X, r24
     e54:	12 c0       	rjmp	.+36     	; 0xe7a <__unpack_f+0xe2>
     e56:	1c 92       	st	X, r1
     e58:	10 c0       	rjmp	.+32     	; 0xe7a <__unpack_f+0xe2>
     e5a:	2f 57       	subi	r18, 0x7F	; 127
     e5c:	30 40       	sbci	r19, 0x00	; 0
     e5e:	13 96       	adiw	r26, 0x03	; 3
     e60:	3c 93       	st	X, r19
     e62:	2e 93       	st	-X, r18
     e64:	12 97       	sbiw	r26, 0x02	; 2
     e66:	83 e0       	ldi	r24, 0x03	; 3
     e68:	8c 93       	st	X, r24
     e6a:	87 e0       	ldi	r24, 0x07	; 7
     e6c:	44 0f       	add	r20, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	66 1f       	adc	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	8a 95       	dec	r24
     e76:	d1 f7       	brne	.-12     	; 0xe6c <__unpack_f+0xd4>
     e78:	70 64       	ori	r23, 0x40	; 64
     e7a:	14 96       	adiw	r26, 0x04	; 4
     e7c:	4d 93       	st	X+, r20
     e7e:	5d 93       	st	X+, r21
     e80:	6d 93       	st	X+, r22
     e82:	7c 93       	st	X, r23
     e84:	17 97       	sbiw	r26, 0x07	; 7
     e86:	08 95       	ret

00000e88 <__fpcmp_parts_f>:
     e88:	1f 93       	push	r17
     e8a:	dc 01       	movw	r26, r24
     e8c:	fb 01       	movw	r30, r22
     e8e:	9c 91       	ld	r25, X
     e90:	92 30       	cpi	r25, 0x02	; 2
     e92:	08 f4       	brcc	.+2      	; 0xe96 <__fpcmp_parts_f+0xe>
     e94:	47 c0       	rjmp	.+142    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e96:	80 81       	ld	r24, Z
     e98:	82 30       	cpi	r24, 0x02	; 2
     e9a:	08 f4       	brcc	.+2      	; 0xe9e <__fpcmp_parts_f+0x16>
     e9c:	43 c0       	rjmp	.+134    	; 0xf24 <__fpcmp_parts_f+0x9c>
     e9e:	94 30       	cpi	r25, 0x04	; 4
     ea0:	51 f4       	brne	.+20     	; 0xeb6 <__fpcmp_parts_f+0x2e>
     ea2:	11 96       	adiw	r26, 0x01	; 1
     ea4:	1c 91       	ld	r17, X
     ea6:	84 30       	cpi	r24, 0x04	; 4
     ea8:	99 f5       	brne	.+102    	; 0xf10 <__fpcmp_parts_f+0x88>
     eaa:	81 81       	ldd	r24, Z+1	; 0x01
     eac:	68 2f       	mov	r22, r24
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	61 1b       	sub	r22, r17
     eb2:	71 09       	sbc	r23, r1
     eb4:	3f c0       	rjmp	.+126    	; 0xf34 <__fpcmp_parts_f+0xac>
     eb6:	84 30       	cpi	r24, 0x04	; 4
     eb8:	21 f0       	breq	.+8      	; 0xec2 <__fpcmp_parts_f+0x3a>
     eba:	92 30       	cpi	r25, 0x02	; 2
     ebc:	31 f4       	brne	.+12     	; 0xeca <__fpcmp_parts_f+0x42>
     ebe:	82 30       	cpi	r24, 0x02	; 2
     ec0:	b9 f1       	breq	.+110    	; 0xf30 <__fpcmp_parts_f+0xa8>
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	88 23       	and	r24, r24
     ec6:	89 f1       	breq	.+98     	; 0xf2a <__fpcmp_parts_f+0xa2>
     ec8:	2d c0       	rjmp	.+90     	; 0xf24 <__fpcmp_parts_f+0x9c>
     eca:	11 96       	adiw	r26, 0x01	; 1
     ecc:	1c 91       	ld	r17, X
     ece:	11 97       	sbiw	r26, 0x01	; 1
     ed0:	82 30       	cpi	r24, 0x02	; 2
     ed2:	f1 f0       	breq	.+60     	; 0xf10 <__fpcmp_parts_f+0x88>
     ed4:	81 81       	ldd	r24, Z+1	; 0x01
     ed6:	18 17       	cp	r17, r24
     ed8:	d9 f4       	brne	.+54     	; 0xf10 <__fpcmp_parts_f+0x88>
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	2d 91       	ld	r18, X+
     ede:	3c 91       	ld	r19, X
     ee0:	13 97       	sbiw	r26, 0x03	; 3
     ee2:	82 81       	ldd	r24, Z+2	; 0x02
     ee4:	93 81       	ldd	r25, Z+3	; 0x03
     ee6:	82 17       	cp	r24, r18
     ee8:	93 07       	cpc	r25, r19
     eea:	94 f0       	brlt	.+36     	; 0xf10 <__fpcmp_parts_f+0x88>
     eec:	28 17       	cp	r18, r24
     eee:	39 07       	cpc	r19, r25
     ef0:	bc f0       	brlt	.+46     	; 0xf20 <__fpcmp_parts_f+0x98>
     ef2:	14 96       	adiw	r26, 0x04	; 4
     ef4:	8d 91       	ld	r24, X+
     ef6:	9d 91       	ld	r25, X+
     ef8:	0d 90       	ld	r0, X+
     efa:	bc 91       	ld	r27, X
     efc:	a0 2d       	mov	r26, r0
     efe:	24 81       	ldd	r18, Z+4	; 0x04
     f00:	35 81       	ldd	r19, Z+5	; 0x05
     f02:	46 81       	ldd	r20, Z+6	; 0x06
     f04:	57 81       	ldd	r21, Z+7	; 0x07
     f06:	28 17       	cp	r18, r24
     f08:	39 07       	cpc	r19, r25
     f0a:	4a 07       	cpc	r20, r26
     f0c:	5b 07       	cpc	r21, r27
     f0e:	18 f4       	brcc	.+6      	; 0xf16 <__fpcmp_parts_f+0x8e>
     f10:	11 23       	and	r17, r17
     f12:	41 f0       	breq	.+16     	; 0xf24 <__fpcmp_parts_f+0x9c>
     f14:	0a c0       	rjmp	.+20     	; 0xf2a <__fpcmp_parts_f+0xa2>
     f16:	82 17       	cp	r24, r18
     f18:	93 07       	cpc	r25, r19
     f1a:	a4 07       	cpc	r26, r20
     f1c:	b5 07       	cpc	r27, r21
     f1e:	40 f4       	brcc	.+16     	; 0xf30 <__fpcmp_parts_f+0xa8>
     f20:	11 23       	and	r17, r17
     f22:	19 f0       	breq	.+6      	; 0xf2a <__fpcmp_parts_f+0xa2>
     f24:	61 e0       	ldi	r22, 0x01	; 1
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <__fpcmp_parts_f+0xac>
     f2a:	6f ef       	ldi	r22, 0xFF	; 255
     f2c:	7f ef       	ldi	r23, 0xFF	; 255
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <__fpcmp_parts_f+0xac>
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	cb 01       	movw	r24, r22
     f36:	1f 91       	pop	r17
     f38:	08 95       	ret

00000f3a <MCAL_DIO_u8_Init_Direction>:





u8_t MCAL_DIO_u8_Init_Direction(u8_t u8_Port_Id , u8_t u8_Pin_no , u8_t u8_Direction){
     f3a:	df 93       	push	r29
     f3c:	cf 93       	push	r28
     f3e:	cd b7       	in	r28, 0x3d	; 61
     f40:	de b7       	in	r29, 0x3e	; 62
     f42:	28 97       	sbiw	r28, 0x08	; 8
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	f8 94       	cli
     f48:	de bf       	out	0x3e, r29	; 62
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	cd bf       	out	0x3d, r28	; 61
     f4e:	8a 83       	std	Y+2, r24	; 0x02
     f50:	6b 83       	std	Y+3, r22	; 0x03
     f52:	4c 83       	std	Y+4, r20	; 0x04
	
	u8_t u8_Local_Return = E_Not_Ok; 
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	89 83       	std	Y+1, r24	; 0x01
	
	if(u8_Pin_no <= DIO_PIN7){
     f58:	8b 81       	ldd	r24, Y+3	; 0x03
     f5a:	88 30       	cpi	r24, 0x08	; 8
     f5c:	08 f0       	brcs	.+2      	; 0xf60 <MCAL_DIO_u8_Init_Direction+0x26>
     f5e:	f3 c0       	rjmp	.+486    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
		if(u8_Direction == Input){	
     f60:	8c 81       	ldd	r24, Y+4	; 0x04
     f62:	88 23       	and	r24, r24
     f64:	09 f0       	breq	.+2      	; 0xf68 <MCAL_DIO_u8_Init_Direction+0x2e>
     f66:	78 c0       	rjmp	.+240    	; 0x1058 <MCAL_DIO_u8_Init_Direction+0x11e>
			switch(u8_Port_Id){
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	28 2f       	mov	r18, r24
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	38 87       	std	Y+8, r19	; 0x08
     f70:	2f 83       	std	Y+7, r18	; 0x07
     f72:	8f 81       	ldd	r24, Y+7	; 0x07
     f74:	98 85       	ldd	r25, Y+8	; 0x08
     f76:	81 30       	cpi	r24, 0x01	; 1
     f78:	91 05       	cpc	r25, r1
     f7a:	61 f1       	breq	.+88     	; 0xfd4 <MCAL_DIO_u8_Init_Direction+0x9a>
     f7c:	2f 81       	ldd	r18, Y+7	; 0x07
     f7e:	38 85       	ldd	r19, Y+8	; 0x08
     f80:	22 30       	cpi	r18, 0x02	; 2
     f82:	31 05       	cpc	r19, r1
     f84:	2c f4       	brge	.+10     	; 0xf90 <MCAL_DIO_u8_Init_Direction+0x56>
     f86:	8f 81       	ldd	r24, Y+7	; 0x07
     f88:	98 85       	ldd	r25, Y+8	; 0x08
     f8a:	00 97       	sbiw	r24, 0x00	; 0
     f8c:	69 f0       	breq	.+26     	; 0xfa8 <MCAL_DIO_u8_Init_Direction+0x6e>
     f8e:	db c0       	rjmp	.+438    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
     f90:	2f 81       	ldd	r18, Y+7	; 0x07
     f92:	38 85       	ldd	r19, Y+8	; 0x08
     f94:	22 30       	cpi	r18, 0x02	; 2
     f96:	31 05       	cpc	r19, r1
     f98:	99 f1       	breq	.+102    	; 0x1000 <MCAL_DIO_u8_Init_Direction+0xc6>
     f9a:	8f 81       	ldd	r24, Y+7	; 0x07
     f9c:	98 85       	ldd	r25, Y+8	; 0x08
     f9e:	83 30       	cpi	r24, 0x03	; 3
     fa0:	91 05       	cpc	r25, r1
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <MCAL_DIO_u8_Init_Direction+0x6c>
     fa4:	43 c0       	rjmp	.+134    	; 0x102c <MCAL_DIO_u8_Init_Direction+0xf2>
     fa6:	cf c0       	rjmp	.+414    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_A: CLEAR_BIT(DDRA,u8_Pin_no); u8_Local_Return = E_Ok ; break;
     fa8:	aa e3       	ldi	r26, 0x3A	; 58
     faa:	b0 e0       	ldi	r27, 0x00	; 0
     fac:	ea e3       	ldi	r30, 0x3A	; 58
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	48 2f       	mov	r20, r24
     fb4:	8b 81       	ldd	r24, Y+3	; 0x03
     fb6:	28 2f       	mov	r18, r24
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	02 2e       	mov	r0, r18
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <MCAL_DIO_u8_Init_Direction+0x8c>
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	0a 94       	dec	r0
     fc8:	e2 f7       	brpl	.-8      	; 0xfc2 <MCAL_DIO_u8_Init_Direction+0x88>
     fca:	80 95       	com	r24
     fcc:	84 23       	and	r24, r20
     fce:	8c 93       	st	X, r24
     fd0:	19 82       	std	Y+1, r1	; 0x01
     fd2:	b9 c0       	rjmp	.+370    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_B: CLEAR_BIT(DDRB,u8_Pin_no); u8_Local_Return = E_Ok ; break;
     fd4:	a7 e3       	ldi	r26, 0x37	; 55
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	e7 e3       	ldi	r30, 0x37	; 55
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	80 81       	ld	r24, Z
     fde:	48 2f       	mov	r20, r24
     fe0:	8b 81       	ldd	r24, Y+3	; 0x03
     fe2:	28 2f       	mov	r18, r24
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	02 2e       	mov	r0, r18
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <MCAL_DIO_u8_Init_Direction+0xb8>
     fee:	88 0f       	add	r24, r24
     ff0:	99 1f       	adc	r25, r25
     ff2:	0a 94       	dec	r0
     ff4:	e2 f7       	brpl	.-8      	; 0xfee <MCAL_DIO_u8_Init_Direction+0xb4>
     ff6:	80 95       	com	r24
     ff8:	84 23       	and	r24, r20
     ffa:	8c 93       	st	X, r24
     ffc:	19 82       	std	Y+1, r1	; 0x01
     ffe:	a3 c0       	rjmp	.+326    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_C: CLEAR_BIT(DDRC,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    1000:	a4 e3       	ldi	r26, 0x34	; 52
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e4 e3       	ldi	r30, 0x34	; 52
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	48 2f       	mov	r20, r24
    100c:	8b 81       	ldd	r24, Y+3	; 0x03
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 2e       	mov	r0, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <MCAL_DIO_u8_Init_Direction+0xe4>
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	0a 94       	dec	r0
    1020:	e2 f7       	brpl	.-8      	; 0x101a <MCAL_DIO_u8_Init_Direction+0xe0>
    1022:	80 95       	com	r24
    1024:	84 23       	and	r24, r20
    1026:	8c 93       	st	X, r24
    1028:	19 82       	std	Y+1, r1	; 0x01
    102a:	8d c0       	rjmp	.+282    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_D: CLEAR_BIT(DDRD,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    102c:	a1 e3       	ldi	r26, 0x31	; 49
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	e1 e3       	ldi	r30, 0x31	; 49
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	80 81       	ld	r24, Z
    1036:	48 2f       	mov	r20, r24
    1038:	8b 81       	ldd	r24, Y+3	; 0x03
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	81 e0       	ldi	r24, 0x01	; 1
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	02 2e       	mov	r0, r18
    1044:	02 c0       	rjmp	.+4      	; 0x104a <MCAL_DIO_u8_Init_Direction+0x110>
    1046:	88 0f       	add	r24, r24
    1048:	99 1f       	adc	r25, r25
    104a:	0a 94       	dec	r0
    104c:	e2 f7       	brpl	.-8      	; 0x1046 <MCAL_DIO_u8_Init_Direction+0x10c>
    104e:	80 95       	com	r24
    1050:	84 23       	and	r24, r20
    1052:	8c 93       	st	X, r24
    1054:	19 82       	std	Y+1, r1	; 0x01
    1056:	77 c0       	rjmp	.+238    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
			}
		}
		else if (u8_Direction == Output){
    1058:	8c 81       	ldd	r24, Y+4	; 0x04
    105a:	81 30       	cpi	r24, 0x01	; 1
    105c:	09 f0       	breq	.+2      	; 0x1060 <MCAL_DIO_u8_Init_Direction+0x126>
    105e:	73 c0       	rjmp	.+230    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
			switch(u8_Port_Id){
    1060:	8a 81       	ldd	r24, Y+2	; 0x02
    1062:	28 2f       	mov	r18, r24
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	3e 83       	std	Y+6, r19	; 0x06
    1068:	2d 83       	std	Y+5, r18	; 0x05
    106a:	8d 81       	ldd	r24, Y+5	; 0x05
    106c:	9e 81       	ldd	r25, Y+6	; 0x06
    106e:	81 30       	cpi	r24, 0x01	; 1
    1070:	91 05       	cpc	r25, r1
    1072:	59 f1       	breq	.+86     	; 0x10ca <MCAL_DIO_u8_Init_Direction+0x190>
    1074:	2d 81       	ldd	r18, Y+5	; 0x05
    1076:	3e 81       	ldd	r19, Y+6	; 0x06
    1078:	22 30       	cpi	r18, 0x02	; 2
    107a:	31 05       	cpc	r19, r1
    107c:	2c f4       	brge	.+10     	; 0x1088 <MCAL_DIO_u8_Init_Direction+0x14e>
    107e:	8d 81       	ldd	r24, Y+5	; 0x05
    1080:	9e 81       	ldd	r25, Y+6	; 0x06
    1082:	00 97       	sbiw	r24, 0x00	; 0
    1084:	69 f0       	breq	.+26     	; 0x10a0 <MCAL_DIO_u8_Init_Direction+0x166>
    1086:	5f c0       	rjmp	.+190    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
    1088:	2d 81       	ldd	r18, Y+5	; 0x05
    108a:	3e 81       	ldd	r19, Y+6	; 0x06
    108c:	22 30       	cpi	r18, 0x02	; 2
    108e:	31 05       	cpc	r19, r1
    1090:	89 f1       	breq	.+98     	; 0x10f4 <MCAL_DIO_u8_Init_Direction+0x1ba>
    1092:	8d 81       	ldd	r24, Y+5	; 0x05
    1094:	9e 81       	ldd	r25, Y+6	; 0x06
    1096:	83 30       	cpi	r24, 0x03	; 3
    1098:	91 05       	cpc	r25, r1
    109a:	09 f4       	brne	.+2      	; 0x109e <MCAL_DIO_u8_Init_Direction+0x164>
    109c:	40 c0       	rjmp	.+128    	; 0x111e <MCAL_DIO_u8_Init_Direction+0x1e4>
    109e:	53 c0       	rjmp	.+166    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_A: SET_BIT(DDRA,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    10a0:	aa e3       	ldi	r26, 0x3A	; 58
    10a2:	b0 e0       	ldi	r27, 0x00	; 0
    10a4:	ea e3       	ldi	r30, 0x3A	; 58
    10a6:	f0 e0       	ldi	r31, 0x00	; 0
    10a8:	80 81       	ld	r24, Z
    10aa:	48 2f       	mov	r20, r24
    10ac:	8b 81       	ldd	r24, Y+3	; 0x03
    10ae:	28 2f       	mov	r18, r24
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	02 2e       	mov	r0, r18
    10b8:	02 c0       	rjmp	.+4      	; 0x10be <MCAL_DIO_u8_Init_Direction+0x184>
    10ba:	88 0f       	add	r24, r24
    10bc:	99 1f       	adc	r25, r25
    10be:	0a 94       	dec	r0
    10c0:	e2 f7       	brpl	.-8      	; 0x10ba <MCAL_DIO_u8_Init_Direction+0x180>
    10c2:	84 2b       	or	r24, r20
    10c4:	8c 93       	st	X, r24
    10c6:	19 82       	std	Y+1, r1	; 0x01
    10c8:	3e c0       	rjmp	.+124    	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_B: SET_BIT(DDRB,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    10ca:	a7 e3       	ldi	r26, 0x37	; 55
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	e7 e3       	ldi	r30, 0x37	; 55
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	80 81       	ld	r24, Z
    10d4:	48 2f       	mov	r20, r24
    10d6:	8b 81       	ldd	r24, Y+3	; 0x03
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	02 2e       	mov	r0, r18
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <MCAL_DIO_u8_Init_Direction+0x1ae>
    10e4:	88 0f       	add	r24, r24
    10e6:	99 1f       	adc	r25, r25
    10e8:	0a 94       	dec	r0
    10ea:	e2 f7       	brpl	.-8      	; 0x10e4 <MCAL_DIO_u8_Init_Direction+0x1aa>
    10ec:	84 2b       	or	r24, r20
    10ee:	8c 93       	st	X, r24
    10f0:	19 82       	std	Y+1, r1	; 0x01
    10f2:	29 c0       	rjmp	.+82     	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_C: SET_BIT(DDRC,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    10f4:	a4 e3       	ldi	r26, 0x34	; 52
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e4 e3       	ldi	r30, 0x34	; 52
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 81       	ld	r24, Z
    10fe:	48 2f       	mov	r20, r24
    1100:	8b 81       	ldd	r24, Y+3	; 0x03
    1102:	28 2f       	mov	r18, r24
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	02 2e       	mov	r0, r18
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <MCAL_DIO_u8_Init_Direction+0x1d8>
    110e:	88 0f       	add	r24, r24
    1110:	99 1f       	adc	r25, r25
    1112:	0a 94       	dec	r0
    1114:	e2 f7       	brpl	.-8      	; 0x110e <MCAL_DIO_u8_Init_Direction+0x1d4>
    1116:	84 2b       	or	r24, r20
    1118:	8c 93       	st	X, r24
    111a:	19 82       	std	Y+1, r1	; 0x01
    111c:	14 c0       	rjmp	.+40     	; 0x1146 <MCAL_DIO_u8_Init_Direction+0x20c>
				case PORT_D: SET_BIT(DDRD,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    111e:	a1 e3       	ldi	r26, 0x31	; 49
    1120:	b0 e0       	ldi	r27, 0x00	; 0
    1122:	e1 e3       	ldi	r30, 0x31	; 49
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	80 81       	ld	r24, Z
    1128:	48 2f       	mov	r20, r24
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	28 2f       	mov	r18, r24
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	02 2e       	mov	r0, r18
    1136:	02 c0       	rjmp	.+4      	; 0x113c <MCAL_DIO_u8_Init_Direction+0x202>
    1138:	88 0f       	add	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	0a 94       	dec	r0
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <MCAL_DIO_u8_Init_Direction+0x1fe>
    1140:	84 2b       	or	r24, r20
    1142:	8c 93       	st	X, r24
    1144:	19 82       	std	Y+1, r1	; 0x01
		}
	}
		else{
			//DO NO THING
		}	
	return u8_Local_Return;	
    1146:	89 81       	ldd	r24, Y+1	; 0x01
}
    1148:	28 96       	adiw	r28, 0x08	; 8
    114a:	0f b6       	in	r0, 0x3f	; 63
    114c:	f8 94       	cli
    114e:	de bf       	out	0x3e, r29	; 62
    1150:	0f be       	out	0x3f, r0	; 63
    1152:	cd bf       	out	0x3d, r28	; 61
    1154:	cf 91       	pop	r28
    1156:	df 91       	pop	r29
    1158:	08 95       	ret

0000115a <MCAL_DIO_u8_Set_Pin_Value>:

u8_t MCAL_DIO_u8_Set_Pin_Value(u8_t u8_Port_Id , u8_t u8_Pin_no , u8_t u8_Direction){
    115a:	df 93       	push	r29
    115c:	cf 93       	push	r28
    115e:	cd b7       	in	r28, 0x3d	; 61
    1160:	de b7       	in	r29, 0x3e	; 62
    1162:	28 97       	sbiw	r28, 0x08	; 8
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	f8 94       	cli
    1168:	de bf       	out	0x3e, r29	; 62
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	cd bf       	out	0x3d, r28	; 61
    116e:	8a 83       	std	Y+2, r24	; 0x02
    1170:	6b 83       	std	Y+3, r22	; 0x03
    1172:	4c 83       	std	Y+4, r20	; 0x04
	
	u8_t u8_Local_Return = E_Not_Ok;
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	89 83       	std	Y+1, r24	; 0x01
	
	if(u8_Pin_no <= DIO_PIN7){
    1178:	8b 81       	ldd	r24, Y+3	; 0x03
    117a:	88 30       	cpi	r24, 0x08	; 8
    117c:	08 f0       	brcs	.+2      	; 0x1180 <MCAL_DIO_u8_Set_Pin_Value+0x26>
    117e:	f3 c0       	rjmp	.+486    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
		if(u8_Direction == Low){
    1180:	8c 81       	ldd	r24, Y+4	; 0x04
    1182:	88 23       	and	r24, r24
    1184:	09 f0       	breq	.+2      	; 0x1188 <MCAL_DIO_u8_Set_Pin_Value+0x2e>
    1186:	78 c0       	rjmp	.+240    	; 0x1278 <MCAL_DIO_u8_Set_Pin_Value+0x11e>
			switch(u8_Port_Id){
    1188:	8a 81       	ldd	r24, Y+2	; 0x02
    118a:	28 2f       	mov	r18, r24
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	38 87       	std	Y+8, r19	; 0x08
    1190:	2f 83       	std	Y+7, r18	; 0x07
    1192:	8f 81       	ldd	r24, Y+7	; 0x07
    1194:	98 85       	ldd	r25, Y+8	; 0x08
    1196:	81 30       	cpi	r24, 0x01	; 1
    1198:	91 05       	cpc	r25, r1
    119a:	61 f1       	breq	.+88     	; 0x11f4 <MCAL_DIO_u8_Set_Pin_Value+0x9a>
    119c:	2f 81       	ldd	r18, Y+7	; 0x07
    119e:	38 85       	ldd	r19, Y+8	; 0x08
    11a0:	22 30       	cpi	r18, 0x02	; 2
    11a2:	31 05       	cpc	r19, r1
    11a4:	2c f4       	brge	.+10     	; 0x11b0 <MCAL_DIO_u8_Set_Pin_Value+0x56>
    11a6:	8f 81       	ldd	r24, Y+7	; 0x07
    11a8:	98 85       	ldd	r25, Y+8	; 0x08
    11aa:	00 97       	sbiw	r24, 0x00	; 0
    11ac:	69 f0       	breq	.+26     	; 0x11c8 <MCAL_DIO_u8_Set_Pin_Value+0x6e>
    11ae:	db c0       	rjmp	.+438    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
    11b0:	2f 81       	ldd	r18, Y+7	; 0x07
    11b2:	38 85       	ldd	r19, Y+8	; 0x08
    11b4:	22 30       	cpi	r18, 0x02	; 2
    11b6:	31 05       	cpc	r19, r1
    11b8:	99 f1       	breq	.+102    	; 0x1220 <MCAL_DIO_u8_Set_Pin_Value+0xc6>
    11ba:	8f 81       	ldd	r24, Y+7	; 0x07
    11bc:	98 85       	ldd	r25, Y+8	; 0x08
    11be:	83 30       	cpi	r24, 0x03	; 3
    11c0:	91 05       	cpc	r25, r1
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <MCAL_DIO_u8_Set_Pin_Value+0x6c>
    11c4:	43 c0       	rjmp	.+134    	; 0x124c <MCAL_DIO_u8_Set_Pin_Value+0xf2>
    11c6:	cf c0       	rjmp	.+414    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_A: CLEAR_BIT(PORTA,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    11c8:	ab e3       	ldi	r26, 0x3B	; 59
    11ca:	b0 e0       	ldi	r27, 0x00	; 0
    11cc:	eb e3       	ldi	r30, 0x3B	; 59
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	80 81       	ld	r24, Z
    11d2:	48 2f       	mov	r20, r24
    11d4:	8b 81       	ldd	r24, Y+3	; 0x03
    11d6:	28 2f       	mov	r18, r24
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	02 2e       	mov	r0, r18
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <MCAL_DIO_u8_Set_Pin_Value+0x8c>
    11e2:	88 0f       	add	r24, r24
    11e4:	99 1f       	adc	r25, r25
    11e6:	0a 94       	dec	r0
    11e8:	e2 f7       	brpl	.-8      	; 0x11e2 <MCAL_DIO_u8_Set_Pin_Value+0x88>
    11ea:	80 95       	com	r24
    11ec:	84 23       	and	r24, r20
    11ee:	8c 93       	st	X, r24
    11f0:	19 82       	std	Y+1, r1	; 0x01
    11f2:	b9 c0       	rjmp	.+370    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_B: CLEAR_BIT(PORTB,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    11f4:	a8 e3       	ldi	r26, 0x38	; 56
    11f6:	b0 e0       	ldi	r27, 0x00	; 0
    11f8:	e8 e3       	ldi	r30, 0x38	; 56
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	80 81       	ld	r24, Z
    11fe:	48 2f       	mov	r20, r24
    1200:	8b 81       	ldd	r24, Y+3	; 0x03
    1202:	28 2f       	mov	r18, r24
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	81 e0       	ldi	r24, 0x01	; 1
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	02 2e       	mov	r0, r18
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <MCAL_DIO_u8_Set_Pin_Value+0xb8>
    120e:	88 0f       	add	r24, r24
    1210:	99 1f       	adc	r25, r25
    1212:	0a 94       	dec	r0
    1214:	e2 f7       	brpl	.-8      	; 0x120e <MCAL_DIO_u8_Set_Pin_Value+0xb4>
    1216:	80 95       	com	r24
    1218:	84 23       	and	r24, r20
    121a:	8c 93       	st	X, r24
    121c:	19 82       	std	Y+1, r1	; 0x01
    121e:	a3 c0       	rjmp	.+326    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_C: CLEAR_BIT(PORTC,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    1220:	a5 e3       	ldi	r26, 0x35	; 53
    1222:	b0 e0       	ldi	r27, 0x00	; 0
    1224:	e5 e3       	ldi	r30, 0x35	; 53
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	80 81       	ld	r24, Z
    122a:	48 2f       	mov	r20, r24
    122c:	8b 81       	ldd	r24, Y+3	; 0x03
    122e:	28 2f       	mov	r18, r24
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	02 2e       	mov	r0, r18
    1238:	02 c0       	rjmp	.+4      	; 0x123e <MCAL_DIO_u8_Set_Pin_Value+0xe4>
    123a:	88 0f       	add	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	0a 94       	dec	r0
    1240:	e2 f7       	brpl	.-8      	; 0x123a <MCAL_DIO_u8_Set_Pin_Value+0xe0>
    1242:	80 95       	com	r24
    1244:	84 23       	and	r24, r20
    1246:	8c 93       	st	X, r24
    1248:	19 82       	std	Y+1, r1	; 0x01
    124a:	8d c0       	rjmp	.+282    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_D: CLEAR_BIT(PORTD,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    124c:	a2 e3       	ldi	r26, 0x32	; 50
    124e:	b0 e0       	ldi	r27, 0x00	; 0
    1250:	e2 e3       	ldi	r30, 0x32	; 50
    1252:	f0 e0       	ldi	r31, 0x00	; 0
    1254:	80 81       	ld	r24, Z
    1256:	48 2f       	mov	r20, r24
    1258:	8b 81       	ldd	r24, Y+3	; 0x03
    125a:	28 2f       	mov	r18, r24
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	81 e0       	ldi	r24, 0x01	; 1
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	02 2e       	mov	r0, r18
    1264:	02 c0       	rjmp	.+4      	; 0x126a <MCAL_DIO_u8_Set_Pin_Value+0x110>
    1266:	88 0f       	add	r24, r24
    1268:	99 1f       	adc	r25, r25
    126a:	0a 94       	dec	r0
    126c:	e2 f7       	brpl	.-8      	; 0x1266 <MCAL_DIO_u8_Set_Pin_Value+0x10c>
    126e:	80 95       	com	r24
    1270:	84 23       	and	r24, r20
    1272:	8c 93       	st	X, r24
    1274:	19 82       	std	Y+1, r1	; 0x01
    1276:	77 c0       	rjmp	.+238    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
			}
		}
		else if (u8_Direction == Output){
    1278:	8c 81       	ldd	r24, Y+4	; 0x04
    127a:	81 30       	cpi	r24, 0x01	; 1
    127c:	09 f0       	breq	.+2      	; 0x1280 <MCAL_DIO_u8_Set_Pin_Value+0x126>
    127e:	73 c0       	rjmp	.+230    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
			switch(u8_Port_Id){
    1280:	8a 81       	ldd	r24, Y+2	; 0x02
    1282:	28 2f       	mov	r18, r24
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	3e 83       	std	Y+6, r19	; 0x06
    1288:	2d 83       	std	Y+5, r18	; 0x05
    128a:	8d 81       	ldd	r24, Y+5	; 0x05
    128c:	9e 81       	ldd	r25, Y+6	; 0x06
    128e:	81 30       	cpi	r24, 0x01	; 1
    1290:	91 05       	cpc	r25, r1
    1292:	59 f1       	breq	.+86     	; 0x12ea <MCAL_DIO_u8_Set_Pin_Value+0x190>
    1294:	2d 81       	ldd	r18, Y+5	; 0x05
    1296:	3e 81       	ldd	r19, Y+6	; 0x06
    1298:	22 30       	cpi	r18, 0x02	; 2
    129a:	31 05       	cpc	r19, r1
    129c:	2c f4       	brge	.+10     	; 0x12a8 <MCAL_DIO_u8_Set_Pin_Value+0x14e>
    129e:	8d 81       	ldd	r24, Y+5	; 0x05
    12a0:	9e 81       	ldd	r25, Y+6	; 0x06
    12a2:	00 97       	sbiw	r24, 0x00	; 0
    12a4:	69 f0       	breq	.+26     	; 0x12c0 <MCAL_DIO_u8_Set_Pin_Value+0x166>
    12a6:	5f c0       	rjmp	.+190    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
    12a8:	2d 81       	ldd	r18, Y+5	; 0x05
    12aa:	3e 81       	ldd	r19, Y+6	; 0x06
    12ac:	22 30       	cpi	r18, 0x02	; 2
    12ae:	31 05       	cpc	r19, r1
    12b0:	89 f1       	breq	.+98     	; 0x1314 <MCAL_DIO_u8_Set_Pin_Value+0x1ba>
    12b2:	8d 81       	ldd	r24, Y+5	; 0x05
    12b4:	9e 81       	ldd	r25, Y+6	; 0x06
    12b6:	83 30       	cpi	r24, 0x03	; 3
    12b8:	91 05       	cpc	r25, r1
    12ba:	09 f4       	brne	.+2      	; 0x12be <MCAL_DIO_u8_Set_Pin_Value+0x164>
    12bc:	40 c0       	rjmp	.+128    	; 0x133e <MCAL_DIO_u8_Set_Pin_Value+0x1e4>
    12be:	53 c0       	rjmp	.+166    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_A: SET_BIT(PORTA,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    12c0:	ab e3       	ldi	r26, 0x3B	; 59
    12c2:	b0 e0       	ldi	r27, 0x00	; 0
    12c4:	eb e3       	ldi	r30, 0x3B	; 59
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	80 81       	ld	r24, Z
    12ca:	48 2f       	mov	r20, r24
    12cc:	8b 81       	ldd	r24, Y+3	; 0x03
    12ce:	28 2f       	mov	r18, r24
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	02 2e       	mov	r0, r18
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <MCAL_DIO_u8_Set_Pin_Value+0x184>
    12da:	88 0f       	add	r24, r24
    12dc:	99 1f       	adc	r25, r25
    12de:	0a 94       	dec	r0
    12e0:	e2 f7       	brpl	.-8      	; 0x12da <MCAL_DIO_u8_Set_Pin_Value+0x180>
    12e2:	84 2b       	or	r24, r20
    12e4:	8c 93       	st	X, r24
    12e6:	19 82       	std	Y+1, r1	; 0x01
    12e8:	3e c0       	rjmp	.+124    	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_B: SET_BIT(PORTB,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    12ea:	a8 e3       	ldi	r26, 0x38	; 56
    12ec:	b0 e0       	ldi	r27, 0x00	; 0
    12ee:	e8 e3       	ldi	r30, 0x38	; 56
    12f0:	f0 e0       	ldi	r31, 0x00	; 0
    12f2:	80 81       	ld	r24, Z
    12f4:	48 2f       	mov	r20, r24
    12f6:	8b 81       	ldd	r24, Y+3	; 0x03
    12f8:	28 2f       	mov	r18, r24
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	02 2e       	mov	r0, r18
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <MCAL_DIO_u8_Set_Pin_Value+0x1ae>
    1304:	88 0f       	add	r24, r24
    1306:	99 1f       	adc	r25, r25
    1308:	0a 94       	dec	r0
    130a:	e2 f7       	brpl	.-8      	; 0x1304 <MCAL_DIO_u8_Set_Pin_Value+0x1aa>
    130c:	84 2b       	or	r24, r20
    130e:	8c 93       	st	X, r24
    1310:	19 82       	std	Y+1, r1	; 0x01
    1312:	29 c0       	rjmp	.+82     	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_C: SET_BIT(PORTC,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    1314:	a5 e3       	ldi	r26, 0x35	; 53
    1316:	b0 e0       	ldi	r27, 0x00	; 0
    1318:	e5 e3       	ldi	r30, 0x35	; 53
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	80 81       	ld	r24, Z
    131e:	48 2f       	mov	r20, r24
    1320:	8b 81       	ldd	r24, Y+3	; 0x03
    1322:	28 2f       	mov	r18, r24
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	02 2e       	mov	r0, r18
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <MCAL_DIO_u8_Set_Pin_Value+0x1d8>
    132e:	88 0f       	add	r24, r24
    1330:	99 1f       	adc	r25, r25
    1332:	0a 94       	dec	r0
    1334:	e2 f7       	brpl	.-8      	; 0x132e <MCAL_DIO_u8_Set_Pin_Value+0x1d4>
    1336:	84 2b       	or	r24, r20
    1338:	8c 93       	st	X, r24
    133a:	19 82       	std	Y+1, r1	; 0x01
    133c:	14 c0       	rjmp	.+40     	; 0x1366 <MCAL_DIO_u8_Set_Pin_Value+0x20c>
				case PORT_D: SET_BIT(PORTD,u8_Pin_no); u8_Local_Return = E_Ok ; break;
    133e:	a2 e3       	ldi	r26, 0x32	; 50
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	e2 e3       	ldi	r30, 0x32	; 50
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	80 81       	ld	r24, Z
    1348:	48 2f       	mov	r20, r24
    134a:	8b 81       	ldd	r24, Y+3	; 0x03
    134c:	28 2f       	mov	r18, r24
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	02 2e       	mov	r0, r18
    1356:	02 c0       	rjmp	.+4      	; 0x135c <MCAL_DIO_u8_Set_Pin_Value+0x202>
    1358:	88 0f       	add	r24, r24
    135a:	99 1f       	adc	r25, r25
    135c:	0a 94       	dec	r0
    135e:	e2 f7       	brpl	.-8      	; 0x1358 <MCAL_DIO_u8_Set_Pin_Value+0x1fe>
    1360:	84 2b       	or	r24, r20
    1362:	8c 93       	st	X, r24
    1364:	19 82       	std	Y+1, r1	; 0x01
		}
	}
	else{
		//DO NO THING
	}
	return u8_Local_Return;
    1366:	89 81       	ldd	r24, Y+1	; 0x01
}
    1368:	28 96       	adiw	r28, 0x08	; 8
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	0f be       	out	0x3f, r0	; 63
    1372:	cd bf       	out	0x3d, r28	; 61
    1374:	cf 91       	pop	r28
    1376:	df 91       	pop	r29
    1378:	08 95       	ret

0000137a <MCAL_DIO_u8_Read_Pin_Value>:

u8_t MCAL_DIO_u8_Read_Pin_Value( u8_t u8_Port_Id , u8_t u8_Pin_no , u8_t *Pin_Value){
    137a:	df 93       	push	r29
    137c:	cf 93       	push	r28
    137e:	cd b7       	in	r28, 0x3d	; 61
    1380:	de b7       	in	r29, 0x3e	; 62
    1382:	27 97       	sbiw	r28, 0x07	; 7
    1384:	0f b6       	in	r0, 0x3f	; 63
    1386:	f8 94       	cli
    1388:	de bf       	out	0x3e, r29	; 62
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	cd bf       	out	0x3d, r28	; 61
    138e:	8a 83       	std	Y+2, r24	; 0x02
    1390:	6b 83       	std	Y+3, r22	; 0x03
    1392:	5d 83       	std	Y+5, r21	; 0x05
    1394:	4c 83       	std	Y+4, r20	; 0x04
	
	u8_t u8_Local_Return = E_Not_Ok;
    1396:	81 e0       	ldi	r24, 0x01	; 1
    1398:	89 83       	std	Y+1, r24	; 0x01
	if(u8_Pin_no <= DIO_PIN7){
    139a:	8b 81       	ldd	r24, Y+3	; 0x03
    139c:	88 30       	cpi	r24, 0x08	; 8
    139e:	08 f0       	brcs	.+2      	; 0x13a2 <MCAL_DIO_u8_Read_Pin_Value+0x28>
    13a0:	74 c0       	rjmp	.+232    	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
			switch(u8_Port_Id)
    13a2:	8a 81       	ldd	r24, Y+2	; 0x02
    13a4:	28 2f       	mov	r18, r24
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	3f 83       	std	Y+7, r19	; 0x07
    13aa:	2e 83       	std	Y+6, r18	; 0x06
    13ac:	4e 81       	ldd	r20, Y+6	; 0x06
    13ae:	5f 81       	ldd	r21, Y+7	; 0x07
    13b0:	41 30       	cpi	r20, 0x01	; 1
    13b2:	51 05       	cpc	r21, r1
    13b4:	61 f1       	breq	.+88     	; 0x140e <MCAL_DIO_u8_Read_Pin_Value+0x94>
    13b6:	8e 81       	ldd	r24, Y+6	; 0x06
    13b8:	9f 81       	ldd	r25, Y+7	; 0x07
    13ba:	82 30       	cpi	r24, 0x02	; 2
    13bc:	91 05       	cpc	r25, r1
    13be:	34 f4       	brge	.+12     	; 0x13cc <MCAL_DIO_u8_Read_Pin_Value+0x52>
    13c0:	2e 81       	ldd	r18, Y+6	; 0x06
    13c2:	3f 81       	ldd	r19, Y+7	; 0x07
    13c4:	21 15       	cp	r18, r1
    13c6:	31 05       	cpc	r19, r1
    13c8:	69 f0       	breq	.+26     	; 0x13e4 <MCAL_DIO_u8_Read_Pin_Value+0x6a>
    13ca:	5f c0       	rjmp	.+190    	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
    13cc:	4e 81       	ldd	r20, Y+6	; 0x06
    13ce:	5f 81       	ldd	r21, Y+7	; 0x07
    13d0:	42 30       	cpi	r20, 0x02	; 2
    13d2:	51 05       	cpc	r21, r1
    13d4:	89 f1       	breq	.+98     	; 0x1438 <MCAL_DIO_u8_Read_Pin_Value+0xbe>
    13d6:	8e 81       	ldd	r24, Y+6	; 0x06
    13d8:	9f 81       	ldd	r25, Y+7	; 0x07
    13da:	83 30       	cpi	r24, 0x03	; 3
    13dc:	91 05       	cpc	r25, r1
    13de:	09 f4       	brne	.+2      	; 0x13e2 <MCAL_DIO_u8_Read_Pin_Value+0x68>
    13e0:	40 c0       	rjmp	.+128    	; 0x1462 <MCAL_DIO_u8_Read_Pin_Value+0xe8>
    13e2:	53 c0       	rjmp	.+166    	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
			{
				case PORT_A : *Pin_Value= GET_BIT(PINA , u8_Pin_no); u8_Local_Return = E_Ok; break;
    13e4:	e9 e3       	ldi	r30, 0x39	; 57
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	28 2f       	mov	r18, r24
    13ec:	30 e0       	ldi	r19, 0x00	; 0
    13ee:	8b 81       	ldd	r24, Y+3	; 0x03
    13f0:	88 2f       	mov	r24, r24
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	a9 01       	movw	r20, r18
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <MCAL_DIO_u8_Read_Pin_Value+0x82>
    13f8:	55 95       	asr	r21
    13fa:	47 95       	ror	r20
    13fc:	8a 95       	dec	r24
    13fe:	e2 f7       	brpl	.-8      	; 0x13f8 <MCAL_DIO_u8_Read_Pin_Value+0x7e>
    1400:	ca 01       	movw	r24, r20
    1402:	81 70       	andi	r24, 0x01	; 1
    1404:	ec 81       	ldd	r30, Y+4	; 0x04
    1406:	fd 81       	ldd	r31, Y+5	; 0x05
    1408:	80 83       	st	Z, r24
    140a:	19 82       	std	Y+1, r1	; 0x01
    140c:	3e c0       	rjmp	.+124    	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
				case PORT_B : *Pin_Value= GET_BIT(PINB , u8_Pin_no); u8_Local_Return = E_Ok; break;
    140e:	e6 e3       	ldi	r30, 0x36	; 54
    1410:	f0 e0       	ldi	r31, 0x00	; 0
    1412:	80 81       	ld	r24, Z
    1414:	28 2f       	mov	r18, r24
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	8b 81       	ldd	r24, Y+3	; 0x03
    141a:	88 2f       	mov	r24, r24
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	a9 01       	movw	r20, r18
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <MCAL_DIO_u8_Read_Pin_Value+0xac>
    1422:	55 95       	asr	r21
    1424:	47 95       	ror	r20
    1426:	8a 95       	dec	r24
    1428:	e2 f7       	brpl	.-8      	; 0x1422 <MCAL_DIO_u8_Read_Pin_Value+0xa8>
    142a:	ca 01       	movw	r24, r20
    142c:	81 70       	andi	r24, 0x01	; 1
    142e:	ec 81       	ldd	r30, Y+4	; 0x04
    1430:	fd 81       	ldd	r31, Y+5	; 0x05
    1432:	80 83       	st	Z, r24
    1434:	19 82       	std	Y+1, r1	; 0x01
    1436:	29 c0       	rjmp	.+82     	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
				case PORT_C : *Pin_Value= GET_BIT(PINC , u8_Pin_no); u8_Local_Return = E_Ok; break;
    1438:	e3 e3       	ldi	r30, 0x33	; 51
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	80 81       	ld	r24, Z
    143e:	28 2f       	mov	r18, r24
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	8b 81       	ldd	r24, Y+3	; 0x03
    1444:	88 2f       	mov	r24, r24
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	a9 01       	movw	r20, r18
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <MCAL_DIO_u8_Read_Pin_Value+0xd6>
    144c:	55 95       	asr	r21
    144e:	47 95       	ror	r20
    1450:	8a 95       	dec	r24
    1452:	e2 f7       	brpl	.-8      	; 0x144c <MCAL_DIO_u8_Read_Pin_Value+0xd2>
    1454:	ca 01       	movw	r24, r20
    1456:	81 70       	andi	r24, 0x01	; 1
    1458:	ec 81       	ldd	r30, Y+4	; 0x04
    145a:	fd 81       	ldd	r31, Y+5	; 0x05
    145c:	80 83       	st	Z, r24
    145e:	19 82       	std	Y+1, r1	; 0x01
    1460:	14 c0       	rjmp	.+40     	; 0x148a <MCAL_DIO_u8_Read_Pin_Value+0x110>
				case PORT_D : *Pin_Value= GET_BIT(PIND , u8_Pin_no); u8_Local_Return = E_Ok; break;
    1462:	e0 e3       	ldi	r30, 0x30	; 48
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	80 81       	ld	r24, Z
    1468:	28 2f       	mov	r18, r24
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	8b 81       	ldd	r24, Y+3	; 0x03
    146e:	88 2f       	mov	r24, r24
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	a9 01       	movw	r20, r18
    1474:	02 c0       	rjmp	.+4      	; 0x147a <MCAL_DIO_u8_Read_Pin_Value+0x100>
    1476:	55 95       	asr	r21
    1478:	47 95       	ror	r20
    147a:	8a 95       	dec	r24
    147c:	e2 f7       	brpl	.-8      	; 0x1476 <MCAL_DIO_u8_Read_Pin_Value+0xfc>
    147e:	ca 01       	movw	r24, r20
    1480:	81 70       	andi	r24, 0x01	; 1
    1482:	ec 81       	ldd	r30, Y+4	; 0x04
    1484:	fd 81       	ldd	r31, Y+5	; 0x05
    1486:	80 83       	st	Z, r24
    1488:	19 82       	std	Y+1, r1	; 0x01
	}
	else{
		//DO NO THING
	}
	
	return u8_Local_Return;		
    148a:	89 81       	ldd	r24, Y+1	; 0x01
}
    148c:	27 96       	adiw	r28, 0x07	; 7
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	de bf       	out	0x3e, r29	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	cd bf       	out	0x3d, r28	; 61
    1498:	cf 91       	pop	r28
    149a:	df 91       	pop	r29
    149c:	08 95       	ret

0000149e <MCAL_DIO_u8_Toggle_Pin>:

u8_t MCAL_DIO_u8_Toggle_Pin(u8_t u8_Port_Id , u8_t u8_Pin_no){
    149e:	df 93       	push	r29
    14a0:	cf 93       	push	r28
    14a2:	00 d0       	rcall	.+0      	; 0x14a4 <MCAL_DIO_u8_Toggle_Pin+0x6>
    14a4:	00 d0       	rcall	.+0      	; 0x14a6 <MCAL_DIO_u8_Toggle_Pin+0x8>
    14a6:	0f 92       	push	r0
    14a8:	cd b7       	in	r28, 0x3d	; 61
    14aa:	de b7       	in	r29, 0x3e	; 62
    14ac:	8a 83       	std	Y+2, r24	; 0x02
    14ae:	6b 83       	std	Y+3, r22	; 0x03
	
	u8_t u8_Local_Return = E_Not_Ok;
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	89 83       	std	Y+1, r24	; 0x01
	if(u8_Pin_no <= DIO_PIN7){
    14b4:	8b 81       	ldd	r24, Y+3	; 0x03
    14b6:	88 30       	cpi	r24, 0x08	; 8
    14b8:	08 f0       	brcs	.+2      	; 0x14bc <MCAL_DIO_u8_Toggle_Pin+0x1e>
    14ba:	73 c0       	rjmp	.+230    	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
		
		switch(u8_Port_Id){
    14bc:	8a 81       	ldd	r24, Y+2	; 0x02
    14be:	28 2f       	mov	r18, r24
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	3d 83       	std	Y+5, r19	; 0x05
    14c4:	2c 83       	std	Y+4, r18	; 0x04
    14c6:	8c 81       	ldd	r24, Y+4	; 0x04
    14c8:	9d 81       	ldd	r25, Y+5	; 0x05
    14ca:	81 30       	cpi	r24, 0x01	; 1
    14cc:	91 05       	cpc	r25, r1
    14ce:	59 f1       	breq	.+86     	; 0x1526 <MCAL_DIO_u8_Toggle_Pin+0x88>
    14d0:	2c 81       	ldd	r18, Y+4	; 0x04
    14d2:	3d 81       	ldd	r19, Y+5	; 0x05
    14d4:	22 30       	cpi	r18, 0x02	; 2
    14d6:	31 05       	cpc	r19, r1
    14d8:	2c f4       	brge	.+10     	; 0x14e4 <MCAL_DIO_u8_Toggle_Pin+0x46>
    14da:	8c 81       	ldd	r24, Y+4	; 0x04
    14dc:	9d 81       	ldd	r25, Y+5	; 0x05
    14de:	00 97       	sbiw	r24, 0x00	; 0
    14e0:	69 f0       	breq	.+26     	; 0x14fc <MCAL_DIO_u8_Toggle_Pin+0x5e>
    14e2:	5f c0       	rjmp	.+190    	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
    14e4:	2c 81       	ldd	r18, Y+4	; 0x04
    14e6:	3d 81       	ldd	r19, Y+5	; 0x05
    14e8:	22 30       	cpi	r18, 0x02	; 2
    14ea:	31 05       	cpc	r19, r1
    14ec:	89 f1       	breq	.+98     	; 0x1550 <MCAL_DIO_u8_Toggle_Pin+0xb2>
    14ee:	8c 81       	ldd	r24, Y+4	; 0x04
    14f0:	9d 81       	ldd	r25, Y+5	; 0x05
    14f2:	83 30       	cpi	r24, 0x03	; 3
    14f4:	91 05       	cpc	r25, r1
    14f6:	09 f4       	brne	.+2      	; 0x14fa <MCAL_DIO_u8_Toggle_Pin+0x5c>
    14f8:	40 c0       	rjmp	.+128    	; 0x157a <MCAL_DIO_u8_Toggle_Pin+0xdc>
    14fa:	53 c0       	rjmp	.+166    	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
			case PORT_A:
				TOGGLE_BIT(PORTA , u8_Pin_no);
    14fc:	ab e3       	ldi	r26, 0x3B	; 59
    14fe:	b0 e0       	ldi	r27, 0x00	; 0
    1500:	eb e3       	ldi	r30, 0x3B	; 59
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	80 81       	ld	r24, Z
    1506:	48 2f       	mov	r20, r24
    1508:	8b 81       	ldd	r24, Y+3	; 0x03
    150a:	28 2f       	mov	r18, r24
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	81 e0       	ldi	r24, 0x01	; 1
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	02 2e       	mov	r0, r18
    1514:	02 c0       	rjmp	.+4      	; 0x151a <MCAL_DIO_u8_Toggle_Pin+0x7c>
    1516:	88 0f       	add	r24, r24
    1518:	99 1f       	adc	r25, r25
    151a:	0a 94       	dec	r0
    151c:	e2 f7       	brpl	.-8      	; 0x1516 <MCAL_DIO_u8_Toggle_Pin+0x78>
    151e:	84 27       	eor	r24, r20
    1520:	8c 93       	st	X, r24
				u8_Local_Return = E_Ok;
    1522:	19 82       	std	Y+1, r1	; 0x01
    1524:	3e c0       	rjmp	.+124    	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
				break;
			case PORT_B:
				TOGGLE_BIT(PORTB , u8_Pin_no);
    1526:	a8 e3       	ldi	r26, 0x38	; 56
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	e8 e3       	ldi	r30, 0x38	; 56
    152c:	f0 e0       	ldi	r31, 0x00	; 0
    152e:	80 81       	ld	r24, Z
    1530:	48 2f       	mov	r20, r24
    1532:	8b 81       	ldd	r24, Y+3	; 0x03
    1534:	28 2f       	mov	r18, r24
    1536:	30 e0       	ldi	r19, 0x00	; 0
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	02 2e       	mov	r0, r18
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <MCAL_DIO_u8_Toggle_Pin+0xa6>
    1540:	88 0f       	add	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	0a 94       	dec	r0
    1546:	e2 f7       	brpl	.-8      	; 0x1540 <MCAL_DIO_u8_Toggle_Pin+0xa2>
    1548:	84 27       	eor	r24, r20
    154a:	8c 93       	st	X, r24
				u8_Local_Return = E_Ok;
    154c:	19 82       	std	Y+1, r1	; 0x01
    154e:	29 c0       	rjmp	.+82     	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
				break;
			case PORT_C:
				TOGGLE_BIT(PORTC , u8_Pin_no);
    1550:	a5 e3       	ldi	r26, 0x35	; 53
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	e5 e3       	ldi	r30, 0x35	; 53
    1556:	f0 e0       	ldi	r31, 0x00	; 0
    1558:	80 81       	ld	r24, Z
    155a:	48 2f       	mov	r20, r24
    155c:	8b 81       	ldd	r24, Y+3	; 0x03
    155e:	28 2f       	mov	r18, r24
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	02 2e       	mov	r0, r18
    1568:	02 c0       	rjmp	.+4      	; 0x156e <MCAL_DIO_u8_Toggle_Pin+0xd0>
    156a:	88 0f       	add	r24, r24
    156c:	99 1f       	adc	r25, r25
    156e:	0a 94       	dec	r0
    1570:	e2 f7       	brpl	.-8      	; 0x156a <MCAL_DIO_u8_Toggle_Pin+0xcc>
    1572:	84 27       	eor	r24, r20
    1574:	8c 93       	st	X, r24
				u8_Local_Return = E_Ok;
    1576:	19 82       	std	Y+1, r1	; 0x01
    1578:	14 c0       	rjmp	.+40     	; 0x15a2 <MCAL_DIO_u8_Toggle_Pin+0x104>
				break;
			case PORT_D:
				TOGGLE_BIT(PORTD , u8_Pin_no);
    157a:	a2 e3       	ldi	r26, 0x32	; 50
    157c:	b0 e0       	ldi	r27, 0x00	; 0
    157e:	e2 e3       	ldi	r30, 0x32	; 50
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	80 81       	ld	r24, Z
    1584:	48 2f       	mov	r20, r24
    1586:	8b 81       	ldd	r24, Y+3	; 0x03
    1588:	28 2f       	mov	r18, r24
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	81 e0       	ldi	r24, 0x01	; 1
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	02 2e       	mov	r0, r18
    1592:	02 c0       	rjmp	.+4      	; 0x1598 <MCAL_DIO_u8_Toggle_Pin+0xfa>
    1594:	88 0f       	add	r24, r24
    1596:	99 1f       	adc	r25, r25
    1598:	0a 94       	dec	r0
    159a:	e2 f7       	brpl	.-8      	; 0x1594 <MCAL_DIO_u8_Toggle_Pin+0xf6>
    159c:	84 27       	eor	r24, r20
    159e:	8c 93       	st	X, r24
				u8_Local_Return = E_Ok;
    15a0:	19 82       	std	Y+1, r1	; 0x01
	}
	else{
		//DO NO THING
	}
	
	return u8_Local_Return;
    15a2:	89 81       	ldd	r24, Y+1	; 0x01
}
    15a4:	0f 90       	pop	r0
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	0f 90       	pop	r0
    15ac:	0f 90       	pop	r0
    15ae:	cf 91       	pop	r28
    15b0:	df 91       	pop	r29
    15b2:	08 95       	ret

000015b4 <HAL_SEVENSEGMENT_Void_Init>:
#include "../../Common/Bit_Math.h"
#include <util\delay.h>

const u8_t  u8_Seven_Segment_Display_Numbers[] = {0,1,2,3,4,5,6,7,8,9};

void HAL_SEVENSEGMENT_Void_Init(){
    15b4:	df 93       	push	r29
    15b6:	cf 93       	push	r28
    15b8:	cd b7       	in	r28, 0x3d	; 61
    15ba:	de b7       	in	r29, 0x3e	; 62
	MCAL_DIO_u8_Init_Direction(Seven_Segment_PinA_Port , Seven_Segment_PinA_Pin , Output);
    15bc:	81 e0       	ldi	r24, 0x01	; 1
    15be:	60 e0       	ldi	r22, 0x00	; 0
    15c0:	41 e0       	ldi	r20, 0x01	; 1
    15c2:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_PinB_Port , Seven_Segment_PinB_Pin , Output);
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	61 e0       	ldi	r22, 0x01	; 1
    15ca:	41 e0       	ldi	r20, 0x01	; 1
    15cc:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_PinC_Port , Seven_Segment_PinC_Pin , Output);
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	62 e0       	ldi	r22, 0x02	; 2
    15d4:	41 e0       	ldi	r20, 0x01	; 1
    15d6:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_PinD_Port , Seven_Segment_PinD_Pin , Output);
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	64 e0       	ldi	r22, 0x04	; 4
    15de:	41 e0       	ldi	r20, 0x01	; 1
    15e0:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>

	MCAL_DIO_u8_Init_Direction(Seven_Segment_Enable1_Port , Seven_Segment_Enable1_Pin , Output);
    15e4:	80 e0       	ldi	r24, 0x00	; 0
    15e6:	63 e0       	ldi	r22, 0x03	; 3
    15e8:	41 e0       	ldi	r20, 0x01	; 1
    15ea:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_Enable2_Port , Seven_Segment_Enable2_Pin , Output);
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	62 e0       	ldi	r22, 0x02	; 2
    15f2:	41 e0       	ldi	r20, 0x01	; 1
    15f4:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_Enable3_Port , Seven_Segment_Enable3_Pin , Output);
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	65 e0       	ldi	r22, 0x05	; 5
    15fc:	41 e0       	ldi	r20, 0x01	; 1
    15fe:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(Seven_Segment_Enable4_Port , Seven_Segment_Enable4_Pin , Output);
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	66 e0       	ldi	r22, 0x06	; 6
    1606:	41 e0       	ldi	r20, 0x01	; 1
    1608:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable1_Port ,Seven_Segment_Enable1_Pin , Low);
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	63 e0       	ldi	r22, 0x03	; 3
    1610:	40 e0       	ldi	r20, 0x00	; 0
    1612:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable2_Port ,Seven_Segment_Enable2_Pin , Low);
    1616:	80 e0       	ldi	r24, 0x00	; 0
    1618:	62 e0       	ldi	r22, 0x02	; 2
    161a:	40 e0       	ldi	r20, 0x00	; 0
    161c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable3_Port ,Seven_Segment_Enable3_Pin , Low);
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	65 e0       	ldi	r22, 0x05	; 5
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable4_Port ,Seven_Segment_Enable4_Pin , Low);
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	66 e0       	ldi	r22, 0x06	; 6
    162e:	40 e0       	ldi	r20, 0x00	; 0
    1630:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
}
    1634:	cf 91       	pop	r28
    1636:	df 91       	pop	r29
    1638:	08 95       	ret

0000163a <HAL_SEVENSEGMENT_Void_Display>:
void HAL_SEVENSEGMENT_Void_Display(u32_t Number){
    163a:	df 93       	push	r29
    163c:	cf 93       	push	r28
    163e:	cd b7       	in	r28, 0x3d	; 61
    1640:	de b7       	in	r29, 0x3e	; 62
    1642:	ee 97       	sbiw	r28, 0x3e	; 62
    1644:	0f b6       	in	r0, 0x3f	; 63
    1646:	f8 94       	cli
    1648:	de bf       	out	0x3e, r29	; 62
    164a:	0f be       	out	0x3f, r0	; 63
    164c:	cd bf       	out	0x3d, r28	; 61
    164e:	9c af       	std	Y+60, r25	; 0x3c
    1650:	8b af       	std	Y+59, r24	; 0x3b
	u8_t u8_Local_Reminder = 0;
    1652:	1a ae       	std	Y+58, r1	; 0x3a

	while(Number){
    1654:	8b ad       	ldd	r24, Y+59	; 0x3b
    1656:	9c ad       	ldd	r25, Y+60	; 0x3c
    1658:	00 97       	sbiw	r24, 0x00	; 0
    165a:	09 f4       	brne	.+2      	; 0x165e <HAL_SEVENSEGMENT_Void_Display+0x24>
    165c:	25 c3       	rjmp	.+1610   	; 0x1ca8 <HAL_SEVENSEGMENT_Void_Display+0x66e>
		for (u8_t u8_Local_temp = 3 ; u8_Local_temp >=0 ; u8_Local_temp-- ){
    165e:	83 e0       	ldi	r24, 0x03	; 3
    1660:	89 af       	std	Y+57, r24	; 0x39
			u8_Local_Reminder = Number%10;
    1662:	8b ad       	ldd	r24, Y+59	; 0x3b
    1664:	9c ad       	ldd	r25, Y+60	; 0x3c
    1666:	2a e0       	ldi	r18, 0x0A	; 10
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	b9 01       	movw	r22, r18
    166c:	0e 94 10 1d 	call	0x3a20	; 0x3a20 <__udivmodhi4>
    1670:	8a af       	std	Y+58, r24	; 0x3a
			Number /= 10;
    1672:	8b ad       	ldd	r24, Y+59	; 0x3b
    1674:	9c ad       	ldd	r25, Y+60	; 0x3c
    1676:	2a e0       	ldi	r18, 0x0A	; 10
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	b9 01       	movw	r22, r18
    167c:	0e 94 10 1d 	call	0x3a20	; 0x3a20 <__udivmodhi4>
    1680:	cb 01       	movw	r24, r22
    1682:	9c af       	std	Y+60, r25	; 0x3c
    1684:	8b af       	std	Y+59, r24	; 0x3b
			switch(u8_Local_temp){
    1686:	89 ad       	ldd	r24, Y+57	; 0x39
    1688:	28 2f       	mov	r18, r24
    168a:	30 e0       	ldi	r19, 0x00	; 0
    168c:	3e af       	std	Y+62, r19	; 0x3e
    168e:	2d af       	std	Y+61, r18	; 0x3d
    1690:	8d ad       	ldd	r24, Y+61	; 0x3d
    1692:	9e ad       	ldd	r25, Y+62	; 0x3e
    1694:	81 30       	cpi	r24, 0x01	; 1
    1696:	91 05       	cpc	r25, r1
    1698:	09 f4       	brne	.+2      	; 0x169c <HAL_SEVENSEGMENT_Void_Display+0x62>
    169a:	d2 c0       	rjmp	.+420    	; 0x1840 <HAL_SEVENSEGMENT_Void_Display+0x206>
    169c:	2d ad       	ldd	r18, Y+61	; 0x3d
    169e:	3e ad       	ldd	r19, Y+62	; 0x3e
    16a0:	22 30       	cpi	r18, 0x02	; 2
    16a2:	31 05       	cpc	r19, r1
    16a4:	2c f4       	brge	.+10     	; 0x16b0 <HAL_SEVENSEGMENT_Void_Display+0x76>
    16a6:	8d ad       	ldd	r24, Y+61	; 0x3d
    16a8:	9e ad       	ldd	r25, Y+62	; 0x3e
    16aa:	00 97       	sbiw	r24, 0x00	; 0
    16ac:	71 f0       	breq	.+28     	; 0x16ca <HAL_SEVENSEGMENT_Void_Display+0x90>
    16ae:	f8 c2       	rjmp	.+1520   	; 0x1ca0 <HAL_SEVENSEGMENT_Void_Display+0x666>
    16b0:	2d ad       	ldd	r18, Y+61	; 0x3d
    16b2:	3e ad       	ldd	r19, Y+62	; 0x3e
    16b4:	22 30       	cpi	r18, 0x02	; 2
    16b6:	31 05       	cpc	r19, r1
    16b8:	09 f4       	brne	.+2      	; 0x16bc <HAL_SEVENSEGMENT_Void_Display+0x82>
    16ba:	7d c1       	rjmp	.+762    	; 0x19b6 <HAL_SEVENSEGMENT_Void_Display+0x37c>
    16bc:	8d ad       	ldd	r24, Y+61	; 0x3d
    16be:	9e ad       	ldd	r25, Y+62	; 0x3e
    16c0:	83 30       	cpi	r24, 0x03	; 3
    16c2:	91 05       	cpc	r25, r1
    16c4:	09 f4       	brne	.+2      	; 0x16c8 <HAL_SEVENSEGMENT_Void_Display+0x8e>
    16c6:	32 c2       	rjmp	.+1124   	; 0x1b2c <HAL_SEVENSEGMENT_Void_Display+0x4f2>
    16c8:	eb c2       	rjmp	.+1494   	; 0x1ca0 <HAL_SEVENSEGMENT_Void_Display+0x666>
				case 0:
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinA_Port , Seven_Segment_PinA_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 0));
    16ca:	8a ad       	ldd	r24, Y+58	; 0x3a
    16cc:	88 2f       	mov	r24, r24
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	fc 01       	movw	r30, r24
    16d2:	e9 56       	subi	r30, 0x69	; 105
    16d4:	fe 4f       	sbci	r31, 0xFE	; 254
    16d6:	80 81       	ld	r24, Z
    16d8:	98 2f       	mov	r25, r24
    16da:	91 70       	andi	r25, 0x01	; 1
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	49 2f       	mov	r20, r25
    16e2:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinB_Port , Seven_Segment_PinB_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 1));
    16e6:	8a ad       	ldd	r24, Y+58	; 0x3a
    16e8:	88 2f       	mov	r24, r24
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	fc 01       	movw	r30, r24
    16ee:	e9 56       	subi	r30, 0x69	; 105
    16f0:	fe 4f       	sbci	r31, 0xFE	; 254
    16f2:	80 81       	ld	r24, Z
    16f4:	86 95       	lsr	r24
    16f6:	98 2f       	mov	r25, r24
    16f8:	91 70       	andi	r25, 0x01	; 1
    16fa:	81 e0       	ldi	r24, 0x01	; 1
    16fc:	61 e0       	ldi	r22, 0x01	; 1
    16fe:	49 2f       	mov	r20, r25
    1700:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinC_Port , Seven_Segment_PinC_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 2));
    1704:	8a ad       	ldd	r24, Y+58	; 0x3a
    1706:	88 2f       	mov	r24, r24
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	fc 01       	movw	r30, r24
    170c:	e9 56       	subi	r30, 0x69	; 105
    170e:	fe 4f       	sbci	r31, 0xFE	; 254
    1710:	80 81       	ld	r24, Z
    1712:	86 95       	lsr	r24
    1714:	86 95       	lsr	r24
    1716:	98 2f       	mov	r25, r24
    1718:	91 70       	andi	r25, 0x01	; 1
    171a:	81 e0       	ldi	r24, 0x01	; 1
    171c:	62 e0       	ldi	r22, 0x02	; 2
    171e:	49 2f       	mov	r20, r25
    1720:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinD_Port , Seven_Segment_PinD_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 3));
    1724:	8a ad       	ldd	r24, Y+58	; 0x3a
    1726:	88 2f       	mov	r24, r24
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	fc 01       	movw	r30, r24
    172c:	e9 56       	subi	r30, 0x69	; 105
    172e:	fe 4f       	sbci	r31, 0xFE	; 254
    1730:	80 81       	ld	r24, Z
    1732:	86 95       	lsr	r24
    1734:	86 95       	lsr	r24
    1736:	86 95       	lsr	r24
    1738:	98 2f       	mov	r25, r24
    173a:	91 70       	andi	r25, 0x01	; 1
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	64 e0       	ldi	r22, 0x04	; 4
    1740:	49 2f       	mov	r20, r25
    1742:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable1_Port ,Seven_Segment_Enable1_Pin , High);
    1746:	80 e0       	ldi	r24, 0x00	; 0
    1748:	63 e0       	ldi	r22, 0x03	; 3
    174a:	41 e0       	ldi	r20, 0x01	; 1
    174c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	a8 e4       	ldi	r26, 0x48	; 72
    1756:	b2 e4       	ldi	r27, 0x42	; 66
    1758:	8d ab       	std	Y+53, r24	; 0x35
    175a:	9e ab       	std	Y+54, r25	; 0x36
    175c:	af ab       	std	Y+55, r26	; 0x37
    175e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1760:	6d a9       	ldd	r22, Y+53	; 0x35
    1762:	7e a9       	ldd	r23, Y+54	; 0x36
    1764:	8f a9       	ldd	r24, Y+55	; 0x37
    1766:	98 ad       	ldd	r25, Y+56	; 0x38
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	4a e7       	ldi	r20, 0x7A	; 122
    176e:	55 e4       	ldi	r21, 0x45	; 69
    1770:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1774:	dc 01       	movw	r26, r24
    1776:	cb 01       	movw	r24, r22
    1778:	89 ab       	std	Y+49, r24	; 0x31
    177a:	9a ab       	std	Y+50, r25	; 0x32
    177c:	ab ab       	std	Y+51, r26	; 0x33
    177e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1780:	69 a9       	ldd	r22, Y+49	; 0x31
    1782:	7a a9       	ldd	r23, Y+50	; 0x32
    1784:	8b a9       	ldd	r24, Y+51	; 0x33
    1786:	9c a9       	ldd	r25, Y+52	; 0x34
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	40 e8       	ldi	r20, 0x80	; 128
    178e:	5f e3       	ldi	r21, 0x3F	; 63
    1790:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1794:	88 23       	and	r24, r24
    1796:	2c f4       	brge	.+10     	; 0x17a2 <HAL_SEVENSEGMENT_Void_Display+0x168>
		__ticks = 1;
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	98 ab       	std	Y+48, r25	; 0x30
    179e:	8f a7       	std	Y+47, r24	; 0x2f
    17a0:	3f c0       	rjmp	.+126    	; 0x1820 <HAL_SEVENSEGMENT_Void_Display+0x1e6>
	else if (__tmp > 65535)
    17a2:	69 a9       	ldd	r22, Y+49	; 0x31
    17a4:	7a a9       	ldd	r23, Y+50	; 0x32
    17a6:	8b a9       	ldd	r24, Y+51	; 0x33
    17a8:	9c a9       	ldd	r25, Y+52	; 0x34
    17aa:	20 e0       	ldi	r18, 0x00	; 0
    17ac:	3f ef       	ldi	r19, 0xFF	; 255
    17ae:	4f e7       	ldi	r20, 0x7F	; 127
    17b0:	57 e4       	ldi	r21, 0x47	; 71
    17b2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    17b6:	18 16       	cp	r1, r24
    17b8:	4c f5       	brge	.+82     	; 0x180c <HAL_SEVENSEGMENT_Void_Display+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17ba:	6d a9       	ldd	r22, Y+53	; 0x35
    17bc:	7e a9       	ldd	r23, Y+54	; 0x36
    17be:	8f a9       	ldd	r24, Y+55	; 0x37
    17c0:	98 ad       	ldd	r25, Y+56	; 0x38
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	40 e2       	ldi	r20, 0x20	; 32
    17c8:	51 e4       	ldi	r21, 0x41	; 65
    17ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	bc 01       	movw	r22, r24
    17d4:	cd 01       	movw	r24, r26
    17d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17da:	dc 01       	movw	r26, r24
    17dc:	cb 01       	movw	r24, r22
    17de:	98 ab       	std	Y+48, r25	; 0x30
    17e0:	8f a7       	std	Y+47, r24	; 0x2f
    17e2:	0f c0       	rjmp	.+30     	; 0x1802 <HAL_SEVENSEGMENT_Void_Display+0x1c8>
    17e4:	80 e9       	ldi	r24, 0x90	; 144
    17e6:	91 e0       	ldi	r25, 0x01	; 1
    17e8:	9e a7       	std	Y+46, r25	; 0x2e
    17ea:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    17ec:	8d a5       	ldd	r24, Y+45	; 0x2d
    17ee:	9e a5       	ldd	r25, Y+46	; 0x2e
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	f1 f7       	brne	.-4      	; 0x17f0 <HAL_SEVENSEGMENT_Void_Display+0x1b6>
    17f4:	9e a7       	std	Y+46, r25	; 0x2e
    17f6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    17fa:	98 a9       	ldd	r25, Y+48	; 0x30
    17fc:	01 97       	sbiw	r24, 0x01	; 1
    17fe:	98 ab       	std	Y+48, r25	; 0x30
    1800:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1802:	8f a5       	ldd	r24, Y+47	; 0x2f
    1804:	98 a9       	ldd	r25, Y+48	; 0x30
    1806:	00 97       	sbiw	r24, 0x00	; 0
    1808:	69 f7       	brne	.-38     	; 0x17e4 <HAL_SEVENSEGMENT_Void_Display+0x1aa>
    180a:	14 c0       	rjmp	.+40     	; 0x1834 <HAL_SEVENSEGMENT_Void_Display+0x1fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    180c:	69 a9       	ldd	r22, Y+49	; 0x31
    180e:	7a a9       	ldd	r23, Y+50	; 0x32
    1810:	8b a9       	ldd	r24, Y+51	; 0x33
    1812:	9c a9       	ldd	r25, Y+52	; 0x34
    1814:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1818:	dc 01       	movw	r26, r24
    181a:	cb 01       	movw	r24, r22
    181c:	98 ab       	std	Y+48, r25	; 0x30
    181e:	8f a7       	std	Y+47, r24	; 0x2f
    1820:	8f a5       	ldd	r24, Y+47	; 0x2f
    1822:	98 a9       	ldd	r25, Y+48	; 0x30
    1824:	9c a7       	std	Y+44, r25	; 0x2c
    1826:	8b a7       	std	Y+43, r24	; 0x2b
    1828:	8b a5       	ldd	r24, Y+43	; 0x2b
    182a:	9c a5       	ldd	r25, Y+44	; 0x2c
    182c:	01 97       	sbiw	r24, 0x01	; 1
    182e:	f1 f7       	brne	.-4      	; 0x182c <HAL_SEVENSEGMENT_Void_Display+0x1f2>
    1830:	9c a7       	std	Y+44, r25	; 0x2c
    1832:	8b a7       	std	Y+43, r24	; 0x2b
					_delay_ms(50);
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable1_Port ,Seven_Segment_Enable1_Pin , Low);
    1834:	80 e0       	ldi	r24, 0x00	; 0
    1836:	63 e0       	ldi	r22, 0x03	; 3
    1838:	40 e0       	ldi	r20, 0x00	; 0
    183a:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    183e:	30 c2       	rjmp	.+1120   	; 0x1ca0 <HAL_SEVENSEGMENT_Void_Display+0x666>
					break;
				case 1:
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinA_Port , Seven_Segment_PinA_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 0));
    1840:	8a ad       	ldd	r24, Y+58	; 0x3a
    1842:	88 2f       	mov	r24, r24
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	fc 01       	movw	r30, r24
    1848:	e9 56       	subi	r30, 0x69	; 105
    184a:	fe 4f       	sbci	r31, 0xFE	; 254
    184c:	80 81       	ld	r24, Z
    184e:	98 2f       	mov	r25, r24
    1850:	91 70       	andi	r25, 0x01	; 1
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	49 2f       	mov	r20, r25
    1858:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinB_Port , Seven_Segment_PinB_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 1));
    185c:	8a ad       	ldd	r24, Y+58	; 0x3a
    185e:	88 2f       	mov	r24, r24
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	fc 01       	movw	r30, r24
    1864:	e9 56       	subi	r30, 0x69	; 105
    1866:	fe 4f       	sbci	r31, 0xFE	; 254
    1868:	80 81       	ld	r24, Z
    186a:	86 95       	lsr	r24
    186c:	98 2f       	mov	r25, r24
    186e:	91 70       	andi	r25, 0x01	; 1
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	61 e0       	ldi	r22, 0x01	; 1
    1874:	49 2f       	mov	r20, r25
    1876:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinC_Port , Seven_Segment_PinC_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 2));
    187a:	8a ad       	ldd	r24, Y+58	; 0x3a
    187c:	88 2f       	mov	r24, r24
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	fc 01       	movw	r30, r24
    1882:	e9 56       	subi	r30, 0x69	; 105
    1884:	fe 4f       	sbci	r31, 0xFE	; 254
    1886:	80 81       	ld	r24, Z
    1888:	86 95       	lsr	r24
    188a:	86 95       	lsr	r24
    188c:	98 2f       	mov	r25, r24
    188e:	91 70       	andi	r25, 0x01	; 1
    1890:	81 e0       	ldi	r24, 0x01	; 1
    1892:	62 e0       	ldi	r22, 0x02	; 2
    1894:	49 2f       	mov	r20, r25
    1896:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinD_Port , Seven_Segment_PinD_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 3));
    189a:	8a ad       	ldd	r24, Y+58	; 0x3a
    189c:	88 2f       	mov	r24, r24
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	fc 01       	movw	r30, r24
    18a2:	e9 56       	subi	r30, 0x69	; 105
    18a4:	fe 4f       	sbci	r31, 0xFE	; 254
    18a6:	80 81       	ld	r24, Z
    18a8:	86 95       	lsr	r24
    18aa:	86 95       	lsr	r24
    18ac:	86 95       	lsr	r24
    18ae:	98 2f       	mov	r25, r24
    18b0:	91 70       	andi	r25, 0x01	; 1
    18b2:	81 e0       	ldi	r24, 0x01	; 1
    18b4:	64 e0       	ldi	r22, 0x04	; 4
    18b6:	49 2f       	mov	r20, r25
    18b8:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable2_Port ,Seven_Segment_Enable2_Pin , High);
    18bc:	80 e0       	ldi	r24, 0x00	; 0
    18be:	62 e0       	ldi	r22, 0x02	; 2
    18c0:	41 e0       	ldi	r20, 0x01	; 1
    18c2:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	a0 e2       	ldi	r26, 0x20	; 32
    18cc:	b2 e4       	ldi	r27, 0x42	; 66
    18ce:	8f a3       	std	Y+39, r24	; 0x27
    18d0:	98 a7       	std	Y+40, r25	; 0x28
    18d2:	a9 a7       	std	Y+41, r26	; 0x29
    18d4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d6:	6f a1       	ldd	r22, Y+39	; 0x27
    18d8:	78 a5       	ldd	r23, Y+40	; 0x28
    18da:	89 a5       	ldd	r24, Y+41	; 0x29
    18dc:	9a a5       	ldd	r25, Y+42	; 0x2a
    18de:	20 e0       	ldi	r18, 0x00	; 0
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	4a e7       	ldi	r20, 0x7A	; 122
    18e4:	55 e4       	ldi	r21, 0x45	; 69
    18e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18ea:	dc 01       	movw	r26, r24
    18ec:	cb 01       	movw	r24, r22
    18ee:	8b a3       	std	Y+35, r24	; 0x23
    18f0:	9c a3       	std	Y+36, r25	; 0x24
    18f2:	ad a3       	std	Y+37, r26	; 0x25
    18f4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    18f6:	6b a1       	ldd	r22, Y+35	; 0x23
    18f8:	7c a1       	ldd	r23, Y+36	; 0x24
    18fa:	8d a1       	ldd	r24, Y+37	; 0x25
    18fc:	9e a1       	ldd	r25, Y+38	; 0x26
    18fe:	20 e0       	ldi	r18, 0x00	; 0
    1900:	30 e0       	ldi	r19, 0x00	; 0
    1902:	40 e8       	ldi	r20, 0x80	; 128
    1904:	5f e3       	ldi	r21, 0x3F	; 63
    1906:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    190a:	88 23       	and	r24, r24
    190c:	2c f4       	brge	.+10     	; 0x1918 <HAL_SEVENSEGMENT_Void_Display+0x2de>
		__ticks = 1;
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	9a a3       	std	Y+34, r25	; 0x22
    1914:	89 a3       	std	Y+33, r24	; 0x21
    1916:	3f c0       	rjmp	.+126    	; 0x1996 <HAL_SEVENSEGMENT_Void_Display+0x35c>
	else if (__tmp > 65535)
    1918:	6b a1       	ldd	r22, Y+35	; 0x23
    191a:	7c a1       	ldd	r23, Y+36	; 0x24
    191c:	8d a1       	ldd	r24, Y+37	; 0x25
    191e:	9e a1       	ldd	r25, Y+38	; 0x26
    1920:	20 e0       	ldi	r18, 0x00	; 0
    1922:	3f ef       	ldi	r19, 0xFF	; 255
    1924:	4f e7       	ldi	r20, 0x7F	; 127
    1926:	57 e4       	ldi	r21, 0x47	; 71
    1928:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    192c:	18 16       	cp	r1, r24
    192e:	4c f5       	brge	.+82     	; 0x1982 <HAL_SEVENSEGMENT_Void_Display+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1930:	6f a1       	ldd	r22, Y+39	; 0x27
    1932:	78 a5       	ldd	r23, Y+40	; 0x28
    1934:	89 a5       	ldd	r24, Y+41	; 0x29
    1936:	9a a5       	ldd	r25, Y+42	; 0x2a
    1938:	20 e0       	ldi	r18, 0x00	; 0
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	40 e2       	ldi	r20, 0x20	; 32
    193e:	51 e4       	ldi	r21, 0x41	; 65
    1940:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	bc 01       	movw	r22, r24
    194a:	cd 01       	movw	r24, r26
    194c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1950:	dc 01       	movw	r26, r24
    1952:	cb 01       	movw	r24, r22
    1954:	9a a3       	std	Y+34, r25	; 0x22
    1956:	89 a3       	std	Y+33, r24	; 0x21
    1958:	0f c0       	rjmp	.+30     	; 0x1978 <HAL_SEVENSEGMENT_Void_Display+0x33e>
    195a:	80 e9       	ldi	r24, 0x90	; 144
    195c:	91 e0       	ldi	r25, 0x01	; 1
    195e:	98 a3       	std	Y+32, r25	; 0x20
    1960:	8f 8f       	std	Y+31, r24	; 0x1f
    1962:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1964:	98 a1       	ldd	r25, Y+32	; 0x20
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	f1 f7       	brne	.-4      	; 0x1966 <HAL_SEVENSEGMENT_Void_Display+0x32c>
    196a:	98 a3       	std	Y+32, r25	; 0x20
    196c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    196e:	89 a1       	ldd	r24, Y+33	; 0x21
    1970:	9a a1       	ldd	r25, Y+34	; 0x22
    1972:	01 97       	sbiw	r24, 0x01	; 1
    1974:	9a a3       	std	Y+34, r25	; 0x22
    1976:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1978:	89 a1       	ldd	r24, Y+33	; 0x21
    197a:	9a a1       	ldd	r25, Y+34	; 0x22
    197c:	00 97       	sbiw	r24, 0x00	; 0
    197e:	69 f7       	brne	.-38     	; 0x195a <HAL_SEVENSEGMENT_Void_Display+0x320>
    1980:	14 c0       	rjmp	.+40     	; 0x19aa <HAL_SEVENSEGMENT_Void_Display+0x370>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1982:	6b a1       	ldd	r22, Y+35	; 0x23
    1984:	7c a1       	ldd	r23, Y+36	; 0x24
    1986:	8d a1       	ldd	r24, Y+37	; 0x25
    1988:	9e a1       	ldd	r25, Y+38	; 0x26
    198a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    198e:	dc 01       	movw	r26, r24
    1990:	cb 01       	movw	r24, r22
    1992:	9a a3       	std	Y+34, r25	; 0x22
    1994:	89 a3       	std	Y+33, r24	; 0x21
    1996:	89 a1       	ldd	r24, Y+33	; 0x21
    1998:	9a a1       	ldd	r25, Y+34	; 0x22
    199a:	9e 8f       	std	Y+30, r25	; 0x1e
    199c:	8d 8f       	std	Y+29, r24	; 0x1d
    199e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19a0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    19a2:	01 97       	sbiw	r24, 0x01	; 1
    19a4:	f1 f7       	brne	.-4      	; 0x19a2 <HAL_SEVENSEGMENT_Void_Display+0x368>
    19a6:	9e 8f       	std	Y+30, r25	; 0x1e
    19a8:	8d 8f       	std	Y+29, r24	; 0x1d
					_delay_ms(40);
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable2_Port ,Seven_Segment_Enable2_Pin , Low);
    19aa:	80 e0       	ldi	r24, 0x00	; 0
    19ac:	62 e0       	ldi	r22, 0x02	; 2
    19ae:	40 e0       	ldi	r20, 0x00	; 0
    19b0:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    19b4:	75 c1       	rjmp	.+746    	; 0x1ca0 <HAL_SEVENSEGMENT_Void_Display+0x666>
					break;
				case 2:
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinA_Port , Seven_Segment_PinA_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 0));
    19b6:	8a ad       	ldd	r24, Y+58	; 0x3a
    19b8:	88 2f       	mov	r24, r24
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	fc 01       	movw	r30, r24
    19be:	e9 56       	subi	r30, 0x69	; 105
    19c0:	fe 4f       	sbci	r31, 0xFE	; 254
    19c2:	80 81       	ld	r24, Z
    19c4:	98 2f       	mov	r25, r24
    19c6:	91 70       	andi	r25, 0x01	; 1
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	49 2f       	mov	r20, r25
    19ce:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinB_Port , Seven_Segment_PinB_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 1));
    19d2:	8a ad       	ldd	r24, Y+58	; 0x3a
    19d4:	88 2f       	mov	r24, r24
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	fc 01       	movw	r30, r24
    19da:	e9 56       	subi	r30, 0x69	; 105
    19dc:	fe 4f       	sbci	r31, 0xFE	; 254
    19de:	80 81       	ld	r24, Z
    19e0:	86 95       	lsr	r24
    19e2:	98 2f       	mov	r25, r24
    19e4:	91 70       	andi	r25, 0x01	; 1
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	61 e0       	ldi	r22, 0x01	; 1
    19ea:	49 2f       	mov	r20, r25
    19ec:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinC_Port , Seven_Segment_PinC_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 2));
    19f0:	8a ad       	ldd	r24, Y+58	; 0x3a
    19f2:	88 2f       	mov	r24, r24
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	fc 01       	movw	r30, r24
    19f8:	e9 56       	subi	r30, 0x69	; 105
    19fa:	fe 4f       	sbci	r31, 0xFE	; 254
    19fc:	80 81       	ld	r24, Z
    19fe:	86 95       	lsr	r24
    1a00:	86 95       	lsr	r24
    1a02:	98 2f       	mov	r25, r24
    1a04:	91 70       	andi	r25, 0x01	; 1
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	62 e0       	ldi	r22, 0x02	; 2
    1a0a:	49 2f       	mov	r20, r25
    1a0c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinD_Port , Seven_Segment_PinD_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 3));
    1a10:	8a ad       	ldd	r24, Y+58	; 0x3a
    1a12:	88 2f       	mov	r24, r24
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	fc 01       	movw	r30, r24
    1a18:	e9 56       	subi	r30, 0x69	; 105
    1a1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1c:	80 81       	ld	r24, Z
    1a1e:	86 95       	lsr	r24
    1a20:	86 95       	lsr	r24
    1a22:	86 95       	lsr	r24
    1a24:	98 2f       	mov	r25, r24
    1a26:	91 70       	andi	r25, 0x01	; 1
    1a28:	81 e0       	ldi	r24, 0x01	; 1
    1a2a:	64 e0       	ldi	r22, 0x04	; 4
    1a2c:	49 2f       	mov	r20, r25
    1a2e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable3_Port ,Seven_Segment_Enable3_Pin , High);
    1a32:	81 e0       	ldi	r24, 0x01	; 1
    1a34:	65 e0       	ldi	r22, 0x05	; 5
    1a36:	41 e0       	ldi	r20, 0x01	; 1
    1a38:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	a0 e2       	ldi	r26, 0x20	; 32
    1a42:	b2 e4       	ldi	r27, 0x42	; 66
    1a44:	89 8f       	std	Y+25, r24	; 0x19
    1a46:	9a 8f       	std	Y+26, r25	; 0x1a
    1a48:	ab 8f       	std	Y+27, r26	; 0x1b
    1a4a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a4c:	69 8d       	ldd	r22, Y+25	; 0x19
    1a4e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a50:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a52:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	4a e7       	ldi	r20, 0x7A	; 122
    1a5a:	55 e4       	ldi	r21, 0x45	; 69
    1a5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	8d 8b       	std	Y+21, r24	; 0x15
    1a66:	9e 8b       	std	Y+22, r25	; 0x16
    1a68:	af 8b       	std	Y+23, r26	; 0x17
    1a6a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a6c:	6d 89       	ldd	r22, Y+21	; 0x15
    1a6e:	7e 89       	ldd	r23, Y+22	; 0x16
    1a70:	8f 89       	ldd	r24, Y+23	; 0x17
    1a72:	98 8d       	ldd	r25, Y+24	; 0x18
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e8       	ldi	r20, 0x80	; 128
    1a7a:	5f e3       	ldi	r21, 0x3F	; 63
    1a7c:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1a80:	88 23       	and	r24, r24
    1a82:	2c f4       	brge	.+10     	; 0x1a8e <HAL_SEVENSEGMENT_Void_Display+0x454>
		__ticks = 1;
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	9c 8b       	std	Y+20, r25	; 0x14
    1a8a:	8b 8b       	std	Y+19, r24	; 0x13
    1a8c:	3f c0       	rjmp	.+126    	; 0x1b0c <HAL_SEVENSEGMENT_Void_Display+0x4d2>
	else if (__tmp > 65535)
    1a8e:	6d 89       	ldd	r22, Y+21	; 0x15
    1a90:	7e 89       	ldd	r23, Y+22	; 0x16
    1a92:	8f 89       	ldd	r24, Y+23	; 0x17
    1a94:	98 8d       	ldd	r25, Y+24	; 0x18
    1a96:	20 e0       	ldi	r18, 0x00	; 0
    1a98:	3f ef       	ldi	r19, 0xFF	; 255
    1a9a:	4f e7       	ldi	r20, 0x7F	; 127
    1a9c:	57 e4       	ldi	r21, 0x47	; 71
    1a9e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1aa2:	18 16       	cp	r1, r24
    1aa4:	4c f5       	brge	.+82     	; 0x1af8 <HAL_SEVENSEGMENT_Void_Display+0x4be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa6:	69 8d       	ldd	r22, Y+25	; 0x19
    1aa8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1aaa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1aac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e2       	ldi	r20, 0x20	; 32
    1ab4:	51 e4       	ldi	r21, 0x41	; 65
    1ab6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	bc 01       	movw	r22, r24
    1ac0:	cd 01       	movw	r24, r26
    1ac2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	cb 01       	movw	r24, r22
    1aca:	9c 8b       	std	Y+20, r25	; 0x14
    1acc:	8b 8b       	std	Y+19, r24	; 0x13
    1ace:	0f c0       	rjmp	.+30     	; 0x1aee <HAL_SEVENSEGMENT_Void_Display+0x4b4>
    1ad0:	80 e9       	ldi	r24, 0x90	; 144
    1ad2:	91 e0       	ldi	r25, 0x01	; 1
    1ad4:	9a 8b       	std	Y+18, r25	; 0x12
    1ad6:	89 8b       	std	Y+17, r24	; 0x11
    1ad8:	89 89       	ldd	r24, Y+17	; 0x11
    1ada:	9a 89       	ldd	r25, Y+18	; 0x12
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	f1 f7       	brne	.-4      	; 0x1adc <HAL_SEVENSEGMENT_Void_Display+0x4a2>
    1ae0:	9a 8b       	std	Y+18, r25	; 0x12
    1ae2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ae6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ae8:	01 97       	sbiw	r24, 0x01	; 1
    1aea:	9c 8b       	std	Y+20, r25	; 0x14
    1aec:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aee:	8b 89       	ldd	r24, Y+19	; 0x13
    1af0:	9c 89       	ldd	r25, Y+20	; 0x14
    1af2:	00 97       	sbiw	r24, 0x00	; 0
    1af4:	69 f7       	brne	.-38     	; 0x1ad0 <HAL_SEVENSEGMENT_Void_Display+0x496>
    1af6:	14 c0       	rjmp	.+40     	; 0x1b20 <HAL_SEVENSEGMENT_Void_Display+0x4e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af8:	6d 89       	ldd	r22, Y+21	; 0x15
    1afa:	7e 89       	ldd	r23, Y+22	; 0x16
    1afc:	8f 89       	ldd	r24, Y+23	; 0x17
    1afe:	98 8d       	ldd	r25, Y+24	; 0x18
    1b00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b04:	dc 01       	movw	r26, r24
    1b06:	cb 01       	movw	r24, r22
    1b08:	9c 8b       	std	Y+20, r25	; 0x14
    1b0a:	8b 8b       	std	Y+19, r24	; 0x13
    1b0c:	8b 89       	ldd	r24, Y+19	; 0x13
    1b0e:	9c 89       	ldd	r25, Y+20	; 0x14
    1b10:	98 8b       	std	Y+16, r25	; 0x10
    1b12:	8f 87       	std	Y+15, r24	; 0x0f
    1b14:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b16:	98 89       	ldd	r25, Y+16	; 0x10
    1b18:	01 97       	sbiw	r24, 0x01	; 1
    1b1a:	f1 f7       	brne	.-4      	; 0x1b18 <HAL_SEVENSEGMENT_Void_Display+0x4de>
    1b1c:	98 8b       	std	Y+16, r25	; 0x10
    1b1e:	8f 87       	std	Y+15, r24	; 0x0f
					_delay_ms(40);
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable3_Port ,Seven_Segment_Enable3_Pin , Low);
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	65 e0       	ldi	r22, 0x05	; 5
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    1b2a:	ba c0       	rjmp	.+372    	; 0x1ca0 <HAL_SEVENSEGMENT_Void_Display+0x666>
					break;
				case 3:
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinA_Port , Seven_Segment_PinA_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 0));
    1b2c:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b2e:	88 2f       	mov	r24, r24
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	fc 01       	movw	r30, r24
    1b34:	e9 56       	subi	r30, 0x69	; 105
    1b36:	fe 4f       	sbci	r31, 0xFE	; 254
    1b38:	80 81       	ld	r24, Z
    1b3a:	98 2f       	mov	r25, r24
    1b3c:	91 70       	andi	r25, 0x01	; 1
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	49 2f       	mov	r20, r25
    1b44:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinB_Port , Seven_Segment_PinB_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 1));
    1b48:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b4a:	88 2f       	mov	r24, r24
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	fc 01       	movw	r30, r24
    1b50:	e9 56       	subi	r30, 0x69	; 105
    1b52:	fe 4f       	sbci	r31, 0xFE	; 254
    1b54:	80 81       	ld	r24, Z
    1b56:	86 95       	lsr	r24
    1b58:	98 2f       	mov	r25, r24
    1b5a:	91 70       	andi	r25, 0x01	; 1
    1b5c:	81 e0       	ldi	r24, 0x01	; 1
    1b5e:	61 e0       	ldi	r22, 0x01	; 1
    1b60:	49 2f       	mov	r20, r25
    1b62:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinC_Port , Seven_Segment_PinC_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 2));
    1b66:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b68:	88 2f       	mov	r24, r24
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	e9 56       	subi	r30, 0x69	; 105
    1b70:	fe 4f       	sbci	r31, 0xFE	; 254
    1b72:	80 81       	ld	r24, Z
    1b74:	86 95       	lsr	r24
    1b76:	86 95       	lsr	r24
    1b78:	98 2f       	mov	r25, r24
    1b7a:	91 70       	andi	r25, 0x01	; 1
    1b7c:	81 e0       	ldi	r24, 0x01	; 1
    1b7e:	62 e0       	ldi	r22, 0x02	; 2
    1b80:	49 2f       	mov	r20, r25
    1b82:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_PinD_Port , Seven_Segment_PinD_Pin ,GET_BIT(u8_Seven_Segment_Display_Numbers[u8_Local_Reminder] , 3));
    1b86:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b88:	88 2f       	mov	r24, r24
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	e9 56       	subi	r30, 0x69	; 105
    1b90:	fe 4f       	sbci	r31, 0xFE	; 254
    1b92:	80 81       	ld	r24, Z
    1b94:	86 95       	lsr	r24
    1b96:	86 95       	lsr	r24
    1b98:	86 95       	lsr	r24
    1b9a:	98 2f       	mov	r25, r24
    1b9c:	91 70       	andi	r25, 0x01	; 1
    1b9e:	81 e0       	ldi	r24, 0x01	; 1
    1ba0:	64 e0       	ldi	r22, 0x04	; 4
    1ba2:	49 2f       	mov	r20, r25
    1ba4:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable4_Port ,Seven_Segment_Enable4_Pin , High);
    1ba8:	81 e0       	ldi	r24, 0x01	; 1
    1baa:	66 e0       	ldi	r22, 0x06	; 6
    1bac:	41 e0       	ldi	r20, 0x01	; 1
    1bae:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    1bb2:	80 e0       	ldi	r24, 0x00	; 0
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	a0 e2       	ldi	r26, 0x20	; 32
    1bb8:	b2 e4       	ldi	r27, 0x42	; 66
    1bba:	8b 87       	std	Y+11, r24	; 0x0b
    1bbc:	9c 87       	std	Y+12, r25	; 0x0c
    1bbe:	ad 87       	std	Y+13, r26	; 0x0d
    1bc0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bc4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bc8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bca:	20 e0       	ldi	r18, 0x00	; 0
    1bcc:	30 e0       	ldi	r19, 0x00	; 0
    1bce:	4a e7       	ldi	r20, 0x7A	; 122
    1bd0:	55 e4       	ldi	r21, 0x45	; 69
    1bd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd6:	dc 01       	movw	r26, r24
    1bd8:	cb 01       	movw	r24, r22
    1bda:	8f 83       	std	Y+7, r24	; 0x07
    1bdc:	98 87       	std	Y+8, r25	; 0x08
    1bde:	a9 87       	std	Y+9, r26	; 0x09
    1be0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1be2:	6f 81       	ldd	r22, Y+7	; 0x07
    1be4:	78 85       	ldd	r23, Y+8	; 0x08
    1be6:	89 85       	ldd	r24, Y+9	; 0x09
    1be8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bea:	20 e0       	ldi	r18, 0x00	; 0
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	40 e8       	ldi	r20, 0x80	; 128
    1bf0:	5f e3       	ldi	r21, 0x3F	; 63
    1bf2:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1bf6:	88 23       	and	r24, r24
    1bf8:	2c f4       	brge	.+10     	; 0x1c04 <HAL_SEVENSEGMENT_Void_Display+0x5ca>
		__ticks = 1;
    1bfa:	81 e0       	ldi	r24, 0x01	; 1
    1bfc:	90 e0       	ldi	r25, 0x00	; 0
    1bfe:	9e 83       	std	Y+6, r25	; 0x06
    1c00:	8d 83       	std	Y+5, r24	; 0x05
    1c02:	3f c0       	rjmp	.+126    	; 0x1c82 <HAL_SEVENSEGMENT_Void_Display+0x648>
	else if (__tmp > 65535)
    1c04:	6f 81       	ldd	r22, Y+7	; 0x07
    1c06:	78 85       	ldd	r23, Y+8	; 0x08
    1c08:	89 85       	ldd	r24, Y+9	; 0x09
    1c0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c0c:	20 e0       	ldi	r18, 0x00	; 0
    1c0e:	3f ef       	ldi	r19, 0xFF	; 255
    1c10:	4f e7       	ldi	r20, 0x7F	; 127
    1c12:	57 e4       	ldi	r21, 0x47	; 71
    1c14:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1c18:	18 16       	cp	r1, r24
    1c1a:	4c f5       	brge	.+82     	; 0x1c6e <HAL_SEVENSEGMENT_Void_Display+0x634>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c20:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c22:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c24:	20 e0       	ldi	r18, 0x00	; 0
    1c26:	30 e0       	ldi	r19, 0x00	; 0
    1c28:	40 e2       	ldi	r20, 0x20	; 32
    1c2a:	51 e4       	ldi	r21, 0x41	; 65
    1c2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c30:	dc 01       	movw	r26, r24
    1c32:	cb 01       	movw	r24, r22
    1c34:	bc 01       	movw	r22, r24
    1c36:	cd 01       	movw	r24, r26
    1c38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c3c:	dc 01       	movw	r26, r24
    1c3e:	cb 01       	movw	r24, r22
    1c40:	9e 83       	std	Y+6, r25	; 0x06
    1c42:	8d 83       	std	Y+5, r24	; 0x05
    1c44:	0f c0       	rjmp	.+30     	; 0x1c64 <HAL_SEVENSEGMENT_Void_Display+0x62a>
    1c46:	80 e9       	ldi	r24, 0x90	; 144
    1c48:	91 e0       	ldi	r25, 0x01	; 1
    1c4a:	9c 83       	std	Y+4, r25	; 0x04
    1c4c:	8b 83       	std	Y+3, r24	; 0x03
    1c4e:	8b 81       	ldd	r24, Y+3	; 0x03
    1c50:	9c 81       	ldd	r25, Y+4	; 0x04
    1c52:	01 97       	sbiw	r24, 0x01	; 1
    1c54:	f1 f7       	brne	.-4      	; 0x1c52 <HAL_SEVENSEGMENT_Void_Display+0x618>
    1c56:	9c 83       	std	Y+4, r25	; 0x04
    1c58:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c5e:	01 97       	sbiw	r24, 0x01	; 1
    1c60:	9e 83       	std	Y+6, r25	; 0x06
    1c62:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c64:	8d 81       	ldd	r24, Y+5	; 0x05
    1c66:	9e 81       	ldd	r25, Y+6	; 0x06
    1c68:	00 97       	sbiw	r24, 0x00	; 0
    1c6a:	69 f7       	brne	.-38     	; 0x1c46 <HAL_SEVENSEGMENT_Void_Display+0x60c>
    1c6c:	14 c0       	rjmp	.+40     	; 0x1c96 <HAL_SEVENSEGMENT_Void_Display+0x65c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c6e:	6f 81       	ldd	r22, Y+7	; 0x07
    1c70:	78 85       	ldd	r23, Y+8	; 0x08
    1c72:	89 85       	ldd	r24, Y+9	; 0x09
    1c74:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c7a:	dc 01       	movw	r26, r24
    1c7c:	cb 01       	movw	r24, r22
    1c7e:	9e 83       	std	Y+6, r25	; 0x06
    1c80:	8d 83       	std	Y+5, r24	; 0x05
    1c82:	8d 81       	ldd	r24, Y+5	; 0x05
    1c84:	9e 81       	ldd	r25, Y+6	; 0x06
    1c86:	9a 83       	std	Y+2, r25	; 0x02
    1c88:	89 83       	std	Y+1, r24	; 0x01
    1c8a:	89 81       	ldd	r24, Y+1	; 0x01
    1c8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c8e:	01 97       	sbiw	r24, 0x01	; 1
    1c90:	f1 f7       	brne	.-4      	; 0x1c8e <HAL_SEVENSEGMENT_Void_Display+0x654>
    1c92:	9a 83       	std	Y+2, r25	; 0x02
    1c94:	89 83       	std	Y+1, r24	; 0x01
					_delay_ms(40);
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable4_Port ,Seven_Segment_Enable4_Pin , Low);
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	66 e0       	ldi	r22, 0x06	; 6
    1c9a:	40 e0       	ldi	r20, 0x00	; 0
    1c9c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
}
void HAL_SEVENSEGMENT_Void_Display(u32_t Number){
	u8_t u8_Local_Reminder = 0;

	while(Number){
		for (u8_t u8_Local_temp = 3 ; u8_Local_temp >=0 ; u8_Local_temp-- ){
    1ca0:	89 ad       	ldd	r24, Y+57	; 0x39
    1ca2:	81 50       	subi	r24, 0x01	; 1
    1ca4:	89 af       	std	Y+57, r24	; 0x39
    1ca6:	dd cc       	rjmp	.-1606   	; 0x1662 <HAL_SEVENSEGMENT_Void_Display+0x28>
					MCAL_DIO_u8_Set_Pin_Value(Seven_Segment_Enable4_Port ,Seven_Segment_Enable4_Pin , Low);
					break;
			}
		}
	}
}
    1ca8:	ee 96       	adiw	r28, 0x3e	; 62
    1caa:	0f b6       	in	r0, 0x3f	; 63
    1cac:	f8 94       	cli
    1cae:	de bf       	out	0x3e, r29	; 62
    1cb0:	0f be       	out	0x3f, r0	; 63
    1cb2:	cd bf       	out	0x3d, r28	; 61
    1cb4:	cf 91       	pop	r28
    1cb6:	df 91       	pop	r29
    1cb8:	08 95       	ret

00001cba <HAL_LCD_Void_Init>:
#include "../../MCAL/DIO_Driver/DIO_Interface.h"
#include "../../Common/Bit_Math.h"


// 4*20 LCD Initialize
void HAL_LCD_Void_Init(){
    1cba:	0f 93       	push	r16
    1cbc:	1f 93       	push	r17
    1cbe:	df 93       	push	r29
    1cc0:	cf 93       	push	r28
    1cc2:	cd b7       	in	r28, 0x3d	; 61
    1cc4:	de b7       	in	r29, 0x3e	; 62
    1cc6:	ca 55       	subi	r28, 0x5A	; 90
    1cc8:	d0 40       	sbci	r29, 0x00	; 0
    1cca:	0f b6       	in	r0, 0x3f	; 63
    1ccc:	f8 94       	cli
    1cce:	de bf       	out	0x3e, r29	; 62
    1cd0:	0f be       	out	0x3f, r0	; 63
    1cd2:	cd bf       	out	0x3d, r28	; 61

	MCAL_DIO_u8_Init_Direction(LCD_RS_PORT , LCD_RS_PIN ,Output);
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	63 e0       	ldi	r22, 0x03	; 3
    1cd8:	41 e0       	ldi	r20, 0x01	; 1
    1cda:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(LCD_EN_PORT , LCD_EN_PIN ,Output);
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	62 e0       	ldi	r22, 0x02	; 2
    1ce2:	41 e0       	ldi	r20, 0x01	; 1
    1ce4:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(LCD_D4_PORT , LCD_D4_PIN ,Output);	
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	60 e0       	ldi	r22, 0x00	; 0
    1cec:	41 e0       	ldi	r20, 0x01	; 1
    1cee:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(LCD_D5_PORT , LCD_D5_PIN ,Output);	
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	61 e0       	ldi	r22, 0x01	; 1
    1cf6:	41 e0       	ldi	r20, 0x01	; 1
    1cf8:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(LCD_D6_PORT , LCD_D6_PIN ,Output);
    1cfc:	81 e0       	ldi	r24, 0x01	; 1
    1cfe:	62 e0       	ldi	r22, 0x02	; 2
    1d00:	41 e0       	ldi	r20, 0x01	; 1
    1d02:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(LCD_D7_PORT , LCD_D7_PIN ,Output);	
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	64 e0       	ldi	r22, 0x04	; 4
    1d0a:	41 e0       	ldi	r20, 0x01	; 1
    1d0c:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
    1d10:	fe 01       	movw	r30, r28
    1d12:	e9 5a       	subi	r30, 0xA9	; 169
    1d14:	ff 4f       	sbci	r31, 0xFF	; 255
    1d16:	80 e0       	ldi	r24, 0x00	; 0
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	a0 ea       	ldi	r26, 0xA0	; 160
    1d1c:	b1 e4       	ldi	r27, 0x41	; 65
    1d1e:	80 83       	st	Z, r24
    1d20:	91 83       	std	Z+1, r25	; 0x01
    1d22:	a2 83       	std	Z+2, r26	; 0x02
    1d24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d26:	8e 01       	movw	r16, r28
    1d28:	0d 5a       	subi	r16, 0xAD	; 173
    1d2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d2c:	fe 01       	movw	r30, r28
    1d2e:	e9 5a       	subi	r30, 0xA9	; 169
    1d30:	ff 4f       	sbci	r31, 0xFF	; 255
    1d32:	60 81       	ld	r22, Z
    1d34:	71 81       	ldd	r23, Z+1	; 0x01
    1d36:	82 81       	ldd	r24, Z+2	; 0x02
    1d38:	93 81       	ldd	r25, Z+3	; 0x03
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	4a e7       	ldi	r20, 0x7A	; 122
    1d40:	55 e4       	ldi	r21, 0x45	; 69
    1d42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d46:	dc 01       	movw	r26, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	f8 01       	movw	r30, r16
    1d4c:	80 83       	st	Z, r24
    1d4e:	91 83       	std	Z+1, r25	; 0x01
    1d50:	a2 83       	std	Z+2, r26	; 0x02
    1d52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d54:	fe 01       	movw	r30, r28
    1d56:	ed 5a       	subi	r30, 0xAD	; 173
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	60 81       	ld	r22, Z
    1d5c:	71 81       	ldd	r23, Z+1	; 0x01
    1d5e:	82 81       	ldd	r24, Z+2	; 0x02
    1d60:	93 81       	ldd	r25, Z+3	; 0x03
    1d62:	20 e0       	ldi	r18, 0x00	; 0
    1d64:	30 e0       	ldi	r19, 0x00	; 0
    1d66:	40 e8       	ldi	r20, 0x80	; 128
    1d68:	5f e3       	ldi	r21, 0x3F	; 63
    1d6a:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1d6e:	88 23       	and	r24, r24
    1d70:	44 f4       	brge	.+16     	; 0x1d82 <HAL_LCD_Void_Init+0xc8>
		__ticks = 1;
    1d72:	fe 01       	movw	r30, r28
    1d74:	ef 5a       	subi	r30, 0xAF	; 175
    1d76:	ff 4f       	sbci	r31, 0xFF	; 255
    1d78:	81 e0       	ldi	r24, 0x01	; 1
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	91 83       	std	Z+1, r25	; 0x01
    1d7e:	80 83       	st	Z, r24
    1d80:	64 c0       	rjmp	.+200    	; 0x1e4a <HAL_LCD_Void_Init+0x190>
	else if (__tmp > 65535)
    1d82:	fe 01       	movw	r30, r28
    1d84:	ed 5a       	subi	r30, 0xAD	; 173
    1d86:	ff 4f       	sbci	r31, 0xFF	; 255
    1d88:	60 81       	ld	r22, Z
    1d8a:	71 81       	ldd	r23, Z+1	; 0x01
    1d8c:	82 81       	ldd	r24, Z+2	; 0x02
    1d8e:	93 81       	ldd	r25, Z+3	; 0x03
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	3f ef       	ldi	r19, 0xFF	; 255
    1d94:	4f e7       	ldi	r20, 0x7F	; 127
    1d96:	57 e4       	ldi	r21, 0x47	; 71
    1d98:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1d9c:	18 16       	cp	r1, r24
    1d9e:	0c f0       	brlt	.+2      	; 0x1da2 <HAL_LCD_Void_Init+0xe8>
    1da0:	43 c0       	rjmp	.+134    	; 0x1e28 <HAL_LCD_Void_Init+0x16e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1da2:	fe 01       	movw	r30, r28
    1da4:	e9 5a       	subi	r30, 0xA9	; 169
    1da6:	ff 4f       	sbci	r31, 0xFF	; 255
    1da8:	60 81       	ld	r22, Z
    1daa:	71 81       	ldd	r23, Z+1	; 0x01
    1dac:	82 81       	ldd	r24, Z+2	; 0x02
    1dae:	93 81       	ldd	r25, Z+3	; 0x03
    1db0:	20 e0       	ldi	r18, 0x00	; 0
    1db2:	30 e0       	ldi	r19, 0x00	; 0
    1db4:	40 e2       	ldi	r20, 0x20	; 32
    1db6:	51 e4       	ldi	r21, 0x41	; 65
    1db8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dbc:	dc 01       	movw	r26, r24
    1dbe:	cb 01       	movw	r24, r22
    1dc0:	8e 01       	movw	r16, r28
    1dc2:	0f 5a       	subi	r16, 0xAF	; 175
    1dc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1dc6:	bc 01       	movw	r22, r24
    1dc8:	cd 01       	movw	r24, r26
    1dca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dce:	dc 01       	movw	r26, r24
    1dd0:	cb 01       	movw	r24, r22
    1dd2:	f8 01       	movw	r30, r16
    1dd4:	91 83       	std	Z+1, r25	; 0x01
    1dd6:	80 83       	st	Z, r24
    1dd8:	1f c0       	rjmp	.+62     	; 0x1e18 <HAL_LCD_Void_Init+0x15e>
    1dda:	fe 01       	movw	r30, r28
    1ddc:	e1 5b       	subi	r30, 0xB1	; 177
    1dde:	ff 4f       	sbci	r31, 0xFF	; 255
    1de0:	80 e9       	ldi	r24, 0x90	; 144
    1de2:	91 e0       	ldi	r25, 0x01	; 1
    1de4:	91 83       	std	Z+1, r25	; 0x01
    1de6:	80 83       	st	Z, r24
    1de8:	fe 01       	movw	r30, r28
    1dea:	e1 5b       	subi	r30, 0xB1	; 177
    1dec:	ff 4f       	sbci	r31, 0xFF	; 255
    1dee:	80 81       	ld	r24, Z
    1df0:	91 81       	ldd	r25, Z+1	; 0x01
    1df2:	01 97       	sbiw	r24, 0x01	; 1
    1df4:	f1 f7       	brne	.-4      	; 0x1df2 <HAL_LCD_Void_Init+0x138>
    1df6:	fe 01       	movw	r30, r28
    1df8:	e1 5b       	subi	r30, 0xB1	; 177
    1dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfc:	91 83       	std	Z+1, r25	; 0x01
    1dfe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e00:	de 01       	movw	r26, r28
    1e02:	af 5a       	subi	r26, 0xAF	; 175
    1e04:	bf 4f       	sbci	r27, 0xFF	; 255
    1e06:	fe 01       	movw	r30, r28
    1e08:	ef 5a       	subi	r30, 0xAF	; 175
    1e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0c:	80 81       	ld	r24, Z
    1e0e:	91 81       	ldd	r25, Z+1	; 0x01
    1e10:	01 97       	sbiw	r24, 0x01	; 1
    1e12:	11 96       	adiw	r26, 0x01	; 1
    1e14:	9c 93       	st	X, r25
    1e16:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e18:	fe 01       	movw	r30, r28
    1e1a:	ef 5a       	subi	r30, 0xAF	; 175
    1e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1e:	80 81       	ld	r24, Z
    1e20:	91 81       	ldd	r25, Z+1	; 0x01
    1e22:	00 97       	sbiw	r24, 0x00	; 0
    1e24:	d1 f6       	brne	.-76     	; 0x1dda <HAL_LCD_Void_Init+0x120>
    1e26:	27 c0       	rjmp	.+78     	; 0x1e76 <HAL_LCD_Void_Init+0x1bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e28:	8e 01       	movw	r16, r28
    1e2a:	0f 5a       	subi	r16, 0xAF	; 175
    1e2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e2e:	fe 01       	movw	r30, r28
    1e30:	ed 5a       	subi	r30, 0xAD	; 173
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e40:	dc 01       	movw	r26, r24
    1e42:	cb 01       	movw	r24, r22
    1e44:	f8 01       	movw	r30, r16
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	80 83       	st	Z, r24
    1e4a:	de 01       	movw	r26, r28
    1e4c:	a3 5b       	subi	r26, 0xB3	; 179
    1e4e:	bf 4f       	sbci	r27, 0xFF	; 255
    1e50:	fe 01       	movw	r30, r28
    1e52:	ef 5a       	subi	r30, 0xAF	; 175
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	80 81       	ld	r24, Z
    1e58:	91 81       	ldd	r25, Z+1	; 0x01
    1e5a:	8d 93       	st	X+, r24
    1e5c:	9c 93       	st	X, r25
    1e5e:	fe 01       	movw	r30, r28
    1e60:	e3 5b       	subi	r30, 0xB3	; 179
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	80 81       	ld	r24, Z
    1e66:	91 81       	ldd	r25, Z+1	; 0x01
    1e68:	01 97       	sbiw	r24, 0x01	; 1
    1e6a:	f1 f7       	brne	.-4      	; 0x1e68 <HAL_LCD_Void_Init+0x1ae>
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	e3 5b       	subi	r30, 0xB3	; 179
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	91 83       	std	Z+1, r25	; 0x01
    1e74:	80 83       	st	Z, r24
	
	
	_delay_ms(20);
	HAL_LCD_Void_Send_Command(LCD_Reset);
    1e76:	83 e0       	ldi	r24, 0x03	; 3
    1e78:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
    1e7c:	fe 01       	movw	r30, r28
    1e7e:	e7 5b       	subi	r30, 0xB7	; 183
    1e80:	ff 4f       	sbci	r31, 0xFF	; 255
    1e82:	80 e0       	ldi	r24, 0x00	; 0
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	a0 ea       	ldi	r26, 0xA0	; 160
    1e88:	b0 e4       	ldi	r27, 0x40	; 64
    1e8a:	80 83       	st	Z, r24
    1e8c:	91 83       	std	Z+1, r25	; 0x01
    1e8e:	a2 83       	std	Z+2, r26	; 0x02
    1e90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e92:	8e 01       	movw	r16, r28
    1e94:	0b 5b       	subi	r16, 0xBB	; 187
    1e96:	1f 4f       	sbci	r17, 0xFF	; 255
    1e98:	fe 01       	movw	r30, r28
    1e9a:	e7 5b       	subi	r30, 0xB7	; 183
    1e9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9e:	60 81       	ld	r22, Z
    1ea0:	71 81       	ldd	r23, Z+1	; 0x01
    1ea2:	82 81       	ldd	r24, Z+2	; 0x02
    1ea4:	93 81       	ldd	r25, Z+3	; 0x03
    1ea6:	20 e0       	ldi	r18, 0x00	; 0
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	4a e7       	ldi	r20, 0x7A	; 122
    1eac:	55 e4       	ldi	r21, 0x45	; 69
    1eae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eb2:	dc 01       	movw	r26, r24
    1eb4:	cb 01       	movw	r24, r22
    1eb6:	f8 01       	movw	r30, r16
    1eb8:	80 83       	st	Z, r24
    1eba:	91 83       	std	Z+1, r25	; 0x01
    1ebc:	a2 83       	std	Z+2, r26	; 0x02
    1ebe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	eb 5b       	subi	r30, 0xBB	; 187
    1ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec6:	60 81       	ld	r22, Z
    1ec8:	71 81       	ldd	r23, Z+1	; 0x01
    1eca:	82 81       	ldd	r24, Z+2	; 0x02
    1ecc:	93 81       	ldd	r25, Z+3	; 0x03
    1ece:	20 e0       	ldi	r18, 0x00	; 0
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	40 e8       	ldi	r20, 0x80	; 128
    1ed4:	5f e3       	ldi	r21, 0x3F	; 63
    1ed6:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1eda:	88 23       	and	r24, r24
    1edc:	44 f4       	brge	.+16     	; 0x1eee <HAL_LCD_Void_Init+0x234>
		__ticks = 1;
    1ede:	fe 01       	movw	r30, r28
    1ee0:	ed 5b       	subi	r30, 0xBD	; 189
    1ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee4:	81 e0       	ldi	r24, 0x01	; 1
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	91 83       	std	Z+1, r25	; 0x01
    1eea:	80 83       	st	Z, r24
    1eec:	64 c0       	rjmp	.+200    	; 0x1fb6 <HAL_LCD_Void_Init+0x2fc>
	else if (__tmp > 65535)
    1eee:	fe 01       	movw	r30, r28
    1ef0:	eb 5b       	subi	r30, 0xBB	; 187
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	60 81       	ld	r22, Z
    1ef6:	71 81       	ldd	r23, Z+1	; 0x01
    1ef8:	82 81       	ldd	r24, Z+2	; 0x02
    1efa:	93 81       	ldd	r25, Z+3	; 0x03
    1efc:	20 e0       	ldi	r18, 0x00	; 0
    1efe:	3f ef       	ldi	r19, 0xFF	; 255
    1f00:	4f e7       	ldi	r20, 0x7F	; 127
    1f02:	57 e4       	ldi	r21, 0x47	; 71
    1f04:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    1f08:	18 16       	cp	r1, r24
    1f0a:	0c f0       	brlt	.+2      	; 0x1f0e <HAL_LCD_Void_Init+0x254>
    1f0c:	43 c0       	rjmp	.+134    	; 0x1f94 <HAL_LCD_Void_Init+0x2da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f0e:	fe 01       	movw	r30, r28
    1f10:	e7 5b       	subi	r30, 0xB7	; 183
    1f12:	ff 4f       	sbci	r31, 0xFF	; 255
    1f14:	60 81       	ld	r22, Z
    1f16:	71 81       	ldd	r23, Z+1	; 0x01
    1f18:	82 81       	ldd	r24, Z+2	; 0x02
    1f1a:	93 81       	ldd	r25, Z+3	; 0x03
    1f1c:	20 e0       	ldi	r18, 0x00	; 0
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	40 e2       	ldi	r20, 0x20	; 32
    1f22:	51 e4       	ldi	r21, 0x41	; 65
    1f24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	8e 01       	movw	r16, r28
    1f2e:	0d 5b       	subi	r16, 0xBD	; 189
    1f30:	1f 4f       	sbci	r17, 0xFF	; 255
    1f32:	bc 01       	movw	r22, r24
    1f34:	cd 01       	movw	r24, r26
    1f36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f3a:	dc 01       	movw	r26, r24
    1f3c:	cb 01       	movw	r24, r22
    1f3e:	f8 01       	movw	r30, r16
    1f40:	91 83       	std	Z+1, r25	; 0x01
    1f42:	80 83       	st	Z, r24
    1f44:	1f c0       	rjmp	.+62     	; 0x1f84 <HAL_LCD_Void_Init+0x2ca>
    1f46:	fe 01       	movw	r30, r28
    1f48:	ef 5b       	subi	r30, 0xBF	; 191
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	80 e9       	ldi	r24, 0x90	; 144
    1f4e:	91 e0       	ldi	r25, 0x01	; 1
    1f50:	91 83       	std	Z+1, r25	; 0x01
    1f52:	80 83       	st	Z, r24
    1f54:	fe 01       	movw	r30, r28
    1f56:	ef 5b       	subi	r30, 0xBF	; 191
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	80 81       	ld	r24, Z
    1f5c:	91 81       	ldd	r25, Z+1	; 0x01
    1f5e:	01 97       	sbiw	r24, 0x01	; 1
    1f60:	f1 f7       	brne	.-4      	; 0x1f5e <HAL_LCD_Void_Init+0x2a4>
    1f62:	fe 01       	movw	r30, r28
    1f64:	ef 5b       	subi	r30, 0xBF	; 191
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	91 83       	std	Z+1, r25	; 0x01
    1f6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f6c:	de 01       	movw	r26, r28
    1f6e:	ad 5b       	subi	r26, 0xBD	; 189
    1f70:	bf 4f       	sbci	r27, 0xFF	; 255
    1f72:	fe 01       	movw	r30, r28
    1f74:	ed 5b       	subi	r30, 0xBD	; 189
    1f76:	ff 4f       	sbci	r31, 0xFF	; 255
    1f78:	80 81       	ld	r24, Z
    1f7a:	91 81       	ldd	r25, Z+1	; 0x01
    1f7c:	01 97       	sbiw	r24, 0x01	; 1
    1f7e:	11 96       	adiw	r26, 0x01	; 1
    1f80:	9c 93       	st	X, r25
    1f82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f84:	fe 01       	movw	r30, r28
    1f86:	ed 5b       	subi	r30, 0xBD	; 189
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	80 81       	ld	r24, Z
    1f8c:	91 81       	ldd	r25, Z+1	; 0x01
    1f8e:	00 97       	sbiw	r24, 0x00	; 0
    1f90:	d1 f6       	brne	.-76     	; 0x1f46 <HAL_LCD_Void_Init+0x28c>
    1f92:	24 c0       	rjmp	.+72     	; 0x1fdc <HAL_LCD_Void_Init+0x322>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f94:	8e 01       	movw	r16, r28
    1f96:	0d 5b       	subi	r16, 0xBD	; 189
    1f98:	1f 4f       	sbci	r17, 0xFF	; 255
    1f9a:	fe 01       	movw	r30, r28
    1f9c:	eb 5b       	subi	r30, 0xBB	; 187
    1f9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa0:	60 81       	ld	r22, Z
    1fa2:	71 81       	ldd	r23, Z+1	; 0x01
    1fa4:	82 81       	ldd	r24, Z+2	; 0x02
    1fa6:	93 81       	ldd	r25, Z+3	; 0x03
    1fa8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	91 83       	std	Z+1, r25	; 0x01
    1fb4:	80 83       	st	Z, r24
    1fb6:	fe 01       	movw	r30, r28
    1fb8:	ed 5b       	subi	r30, 0xBD	; 189
    1fba:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbc:	80 81       	ld	r24, Z
    1fbe:	91 81       	ldd	r25, Z+1	; 0x01
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	ff 96       	adiw	r30, 0x3f	; 63
    1fc4:	91 83       	std	Z+1, r25	; 0x01
    1fc6:	80 83       	st	Z, r24
    1fc8:	fe 01       	movw	r30, r28
    1fca:	ff 96       	adiw	r30, 0x3f	; 63
    1fcc:	80 81       	ld	r24, Z
    1fce:	91 81       	ldd	r25, Z+1	; 0x01
    1fd0:	01 97       	sbiw	r24, 0x01	; 1
    1fd2:	f1 f7       	brne	.-4      	; 0x1fd0 <HAL_LCD_Void_Init+0x316>
    1fd4:	fe 01       	movw	r30, r28
    1fd6:	ff 96       	adiw	r30, 0x3f	; 63
    1fd8:	91 83       	std	Z+1, r25	; 0x01
    1fda:	80 83       	st	Z, r24
	_delay_ms(5);
	HAL_LCD_Void_Send_Command(LCD_Reset);
    1fdc:	83 e0       	ldi	r24, 0x03	; 3
    1fde:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
    1fe2:	80 e0       	ldi	r24, 0x00	; 0
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	a8 ec       	ldi	r26, 0xC8	; 200
    1fe8:	b2 e4       	ldi	r27, 0x42	; 66
    1fea:	8b af       	std	Y+59, r24	; 0x3b
    1fec:	9c af       	std	Y+60, r25	; 0x3c
    1fee:	ad af       	std	Y+61, r26	; 0x3d
    1ff0:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1ff2:	6b ad       	ldd	r22, Y+59	; 0x3b
    1ff4:	7c ad       	ldd	r23, Y+60	; 0x3c
    1ff6:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ff8:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ffa:	2b ea       	ldi	r18, 0xAB	; 171
    1ffc:	3a ea       	ldi	r19, 0xAA	; 170
    1ffe:	4a ea       	ldi	r20, 0xAA	; 170
    2000:	50 e4       	ldi	r21, 0x40	; 64
    2002:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2006:	dc 01       	movw	r26, r24
    2008:	cb 01       	movw	r24, r22
    200a:	8f ab       	std	Y+55, r24	; 0x37
    200c:	98 af       	std	Y+56, r25	; 0x38
    200e:	a9 af       	std	Y+57, r26	; 0x39
    2010:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    2012:	6f a9       	ldd	r22, Y+55	; 0x37
    2014:	78 ad       	ldd	r23, Y+56	; 0x38
    2016:	89 ad       	ldd	r24, Y+57	; 0x39
    2018:	9a ad       	ldd	r25, Y+58	; 0x3a
    201a:	20 e0       	ldi	r18, 0x00	; 0
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	40 e8       	ldi	r20, 0x80	; 128
    2020:	5f e3       	ldi	r21, 0x3F	; 63
    2022:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2026:	88 23       	and	r24, r24
    2028:	1c f4       	brge	.+6      	; 0x2030 <HAL_LCD_Void_Init+0x376>
		__ticks = 1;
    202a:	81 e0       	ldi	r24, 0x01	; 1
    202c:	8e ab       	std	Y+54, r24	; 0x36
    202e:	91 c0       	rjmp	.+290    	; 0x2152 <HAL_LCD_Void_Init+0x498>
	else if (__tmp > 255)
    2030:	6f a9       	ldd	r22, Y+55	; 0x37
    2032:	78 ad       	ldd	r23, Y+56	; 0x38
    2034:	89 ad       	ldd	r24, Y+57	; 0x39
    2036:	9a ad       	ldd	r25, Y+58	; 0x3a
    2038:	20 e0       	ldi	r18, 0x00	; 0
    203a:	30 e0       	ldi	r19, 0x00	; 0
    203c:	4f e7       	ldi	r20, 0x7F	; 127
    203e:	53 e4       	ldi	r21, 0x43	; 67
    2040:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2044:	18 16       	cp	r1, r24
    2046:	0c f0       	brlt	.+2      	; 0x204a <HAL_LCD_Void_Init+0x390>
    2048:	7b c0       	rjmp	.+246    	; 0x2140 <HAL_LCD_Void_Init+0x486>
	{
		_delay_ms(__us / 1000.0);
    204a:	6b ad       	ldd	r22, Y+59	; 0x3b
    204c:	7c ad       	ldd	r23, Y+60	; 0x3c
    204e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2050:	9e ad       	ldd	r25, Y+62	; 0x3e
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	4a e7       	ldi	r20, 0x7A	; 122
    2058:	54 e4       	ldi	r21, 0x44	; 68
    205a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    205e:	dc 01       	movw	r26, r24
    2060:	cb 01       	movw	r24, r22
    2062:	8a ab       	std	Y+50, r24	; 0x32
    2064:	9b ab       	std	Y+51, r25	; 0x33
    2066:	ac ab       	std	Y+52, r26	; 0x34
    2068:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    206a:	6a a9       	ldd	r22, Y+50	; 0x32
    206c:	7b a9       	ldd	r23, Y+51	; 0x33
    206e:	8c a9       	ldd	r24, Y+52	; 0x34
    2070:	9d a9       	ldd	r25, Y+53	; 0x35
    2072:	20 e0       	ldi	r18, 0x00	; 0
    2074:	30 e0       	ldi	r19, 0x00	; 0
    2076:	4a e7       	ldi	r20, 0x7A	; 122
    2078:	55 e4       	ldi	r21, 0x45	; 69
    207a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    207e:	dc 01       	movw	r26, r24
    2080:	cb 01       	movw	r24, r22
    2082:	8e a7       	std	Y+46, r24	; 0x2e
    2084:	9f a7       	std	Y+47, r25	; 0x2f
    2086:	a8 ab       	std	Y+48, r26	; 0x30
    2088:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    208a:	6e a5       	ldd	r22, Y+46	; 0x2e
    208c:	7f a5       	ldd	r23, Y+47	; 0x2f
    208e:	88 a9       	ldd	r24, Y+48	; 0x30
    2090:	99 a9       	ldd	r25, Y+49	; 0x31
    2092:	20 e0       	ldi	r18, 0x00	; 0
    2094:	30 e0       	ldi	r19, 0x00	; 0
    2096:	40 e8       	ldi	r20, 0x80	; 128
    2098:	5f e3       	ldi	r21, 0x3F	; 63
    209a:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    209e:	88 23       	and	r24, r24
    20a0:	2c f4       	brge	.+10     	; 0x20ac <HAL_LCD_Void_Init+0x3f2>
		__ticks = 1;
    20a2:	81 e0       	ldi	r24, 0x01	; 1
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	9d a7       	std	Y+45, r25	; 0x2d
    20a8:	8c a7       	std	Y+44, r24	; 0x2c
    20aa:	3f c0       	rjmp	.+126    	; 0x212a <HAL_LCD_Void_Init+0x470>
	else if (__tmp > 65535)
    20ac:	6e a5       	ldd	r22, Y+46	; 0x2e
    20ae:	7f a5       	ldd	r23, Y+47	; 0x2f
    20b0:	88 a9       	ldd	r24, Y+48	; 0x30
    20b2:	99 a9       	ldd	r25, Y+49	; 0x31
    20b4:	20 e0       	ldi	r18, 0x00	; 0
    20b6:	3f ef       	ldi	r19, 0xFF	; 255
    20b8:	4f e7       	ldi	r20, 0x7F	; 127
    20ba:	57 e4       	ldi	r21, 0x47	; 71
    20bc:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    20c0:	18 16       	cp	r1, r24
    20c2:	4c f5       	brge	.+82     	; 0x2116 <HAL_LCD_Void_Init+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20c4:	6a a9       	ldd	r22, Y+50	; 0x32
    20c6:	7b a9       	ldd	r23, Y+51	; 0x33
    20c8:	8c a9       	ldd	r24, Y+52	; 0x34
    20ca:	9d a9       	ldd	r25, Y+53	; 0x35
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	30 e0       	ldi	r19, 0x00	; 0
    20d0:	40 e2       	ldi	r20, 0x20	; 32
    20d2:	51 e4       	ldi	r21, 0x41	; 65
    20d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	bc 01       	movw	r22, r24
    20de:	cd 01       	movw	r24, r26
    20e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20e4:	dc 01       	movw	r26, r24
    20e6:	cb 01       	movw	r24, r22
    20e8:	9d a7       	std	Y+45, r25	; 0x2d
    20ea:	8c a7       	std	Y+44, r24	; 0x2c
    20ec:	0f c0       	rjmp	.+30     	; 0x210c <HAL_LCD_Void_Init+0x452>
    20ee:	80 e9       	ldi	r24, 0x90	; 144
    20f0:	91 e0       	ldi	r25, 0x01	; 1
    20f2:	9b a7       	std	Y+43, r25	; 0x2b
    20f4:	8a a7       	std	Y+42, r24	; 0x2a
    20f6:	8a a5       	ldd	r24, Y+42	; 0x2a
    20f8:	9b a5       	ldd	r25, Y+43	; 0x2b
    20fa:	01 97       	sbiw	r24, 0x01	; 1
    20fc:	f1 f7       	brne	.-4      	; 0x20fa <HAL_LCD_Void_Init+0x440>
    20fe:	9b a7       	std	Y+43, r25	; 0x2b
    2100:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2102:	8c a5       	ldd	r24, Y+44	; 0x2c
    2104:	9d a5       	ldd	r25, Y+45	; 0x2d
    2106:	01 97       	sbiw	r24, 0x01	; 1
    2108:	9d a7       	std	Y+45, r25	; 0x2d
    210a:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    210c:	8c a5       	ldd	r24, Y+44	; 0x2c
    210e:	9d a5       	ldd	r25, Y+45	; 0x2d
    2110:	00 97       	sbiw	r24, 0x00	; 0
    2112:	69 f7       	brne	.-38     	; 0x20ee <HAL_LCD_Void_Init+0x434>
    2114:	24 c0       	rjmp	.+72     	; 0x215e <HAL_LCD_Void_Init+0x4a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2116:	6e a5       	ldd	r22, Y+46	; 0x2e
    2118:	7f a5       	ldd	r23, Y+47	; 0x2f
    211a:	88 a9       	ldd	r24, Y+48	; 0x30
    211c:	99 a9       	ldd	r25, Y+49	; 0x31
    211e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2122:	dc 01       	movw	r26, r24
    2124:	cb 01       	movw	r24, r22
    2126:	9d a7       	std	Y+45, r25	; 0x2d
    2128:	8c a7       	std	Y+44, r24	; 0x2c
    212a:	8c a5       	ldd	r24, Y+44	; 0x2c
    212c:	9d a5       	ldd	r25, Y+45	; 0x2d
    212e:	99 a7       	std	Y+41, r25	; 0x29
    2130:	88 a7       	std	Y+40, r24	; 0x28
    2132:	88 a5       	ldd	r24, Y+40	; 0x28
    2134:	99 a5       	ldd	r25, Y+41	; 0x29
    2136:	01 97       	sbiw	r24, 0x01	; 1
    2138:	f1 f7       	brne	.-4      	; 0x2136 <HAL_LCD_Void_Init+0x47c>
    213a:	99 a7       	std	Y+41, r25	; 0x29
    213c:	88 a7       	std	Y+40, r24	; 0x28
    213e:	0f c0       	rjmp	.+30     	; 0x215e <HAL_LCD_Void_Init+0x4a4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2140:	6f a9       	ldd	r22, Y+55	; 0x37
    2142:	78 ad       	ldd	r23, Y+56	; 0x38
    2144:	89 ad       	ldd	r24, Y+57	; 0x39
    2146:	9a ad       	ldd	r25, Y+58	; 0x3a
    2148:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214c:	dc 01       	movw	r26, r24
    214e:	cb 01       	movw	r24, r22
    2150:	8e ab       	std	Y+54, r24	; 0x36
    2152:	8e a9       	ldd	r24, Y+54	; 0x36
    2154:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2156:	8f a1       	ldd	r24, Y+39	; 0x27
    2158:	8a 95       	dec	r24
    215a:	f1 f7       	brne	.-4      	; 0x2158 <HAL_LCD_Void_Init+0x49e>
    215c:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(100);
	HAL_LCD_Void_Send_Command(LCD_Reset);
    215e:	83 e0       	ldi	r24, 0x03	; 3
    2160:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	a8 e4       	ldi	r26, 0x48	; 72
    216a:	b3 e4       	ldi	r27, 0x43	; 67
    216c:	8b a3       	std	Y+35, r24	; 0x23
    216e:	9c a3       	std	Y+36, r25	; 0x24
    2170:	ad a3       	std	Y+37, r26	; 0x25
    2172:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2174:	6b a1       	ldd	r22, Y+35	; 0x23
    2176:	7c a1       	ldd	r23, Y+36	; 0x24
    2178:	8d a1       	ldd	r24, Y+37	; 0x25
    217a:	9e a1       	ldd	r25, Y+38	; 0x26
    217c:	2b ea       	ldi	r18, 0xAB	; 171
    217e:	3a ea       	ldi	r19, 0xAA	; 170
    2180:	4a ea       	ldi	r20, 0xAA	; 170
    2182:	50 e4       	ldi	r21, 0x40	; 64
    2184:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	8f 8f       	std	Y+31, r24	; 0x1f
    218e:	98 a3       	std	Y+32, r25	; 0x20
    2190:	a9 a3       	std	Y+33, r26	; 0x21
    2192:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    2194:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2196:	78 a1       	ldd	r23, Y+32	; 0x20
    2198:	89 a1       	ldd	r24, Y+33	; 0x21
    219a:	9a a1       	ldd	r25, Y+34	; 0x22
    219c:	20 e0       	ldi	r18, 0x00	; 0
    219e:	30 e0       	ldi	r19, 0x00	; 0
    21a0:	40 e8       	ldi	r20, 0x80	; 128
    21a2:	5f e3       	ldi	r21, 0x3F	; 63
    21a4:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    21a8:	88 23       	and	r24, r24
    21aa:	1c f4       	brge	.+6      	; 0x21b2 <HAL_LCD_Void_Init+0x4f8>
		__ticks = 1;
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	8e 8f       	std	Y+30, r24	; 0x1e
    21b0:	91 c0       	rjmp	.+290    	; 0x22d4 <HAL_LCD_Void_Init+0x61a>
	else if (__tmp > 255)
    21b2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    21b4:	78 a1       	ldd	r23, Y+32	; 0x20
    21b6:	89 a1       	ldd	r24, Y+33	; 0x21
    21b8:	9a a1       	ldd	r25, Y+34	; 0x22
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	30 e0       	ldi	r19, 0x00	; 0
    21be:	4f e7       	ldi	r20, 0x7F	; 127
    21c0:	53 e4       	ldi	r21, 0x43	; 67
    21c2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    21c6:	18 16       	cp	r1, r24
    21c8:	0c f0       	brlt	.+2      	; 0x21cc <HAL_LCD_Void_Init+0x512>
    21ca:	7b c0       	rjmp	.+246    	; 0x22c2 <HAL_LCD_Void_Init+0x608>
	{
		_delay_ms(__us / 1000.0);
    21cc:	6b a1       	ldd	r22, Y+35	; 0x23
    21ce:	7c a1       	ldd	r23, Y+36	; 0x24
    21d0:	8d a1       	ldd	r24, Y+37	; 0x25
    21d2:	9e a1       	ldd	r25, Y+38	; 0x26
    21d4:	20 e0       	ldi	r18, 0x00	; 0
    21d6:	30 e0       	ldi	r19, 0x00	; 0
    21d8:	4a e7       	ldi	r20, 0x7A	; 122
    21da:	54 e4       	ldi	r21, 0x44	; 68
    21dc:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    21e0:	dc 01       	movw	r26, r24
    21e2:	cb 01       	movw	r24, r22
    21e4:	8a 8f       	std	Y+26, r24	; 0x1a
    21e6:	9b 8f       	std	Y+27, r25	; 0x1b
    21e8:	ac 8f       	std	Y+28, r26	; 0x1c
    21ea:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ec:	6a 8d       	ldd	r22, Y+26	; 0x1a
    21ee:	7b 8d       	ldd	r23, Y+27	; 0x1b
    21f0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    21f2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    21f4:	20 e0       	ldi	r18, 0x00	; 0
    21f6:	30 e0       	ldi	r19, 0x00	; 0
    21f8:	4a e7       	ldi	r20, 0x7A	; 122
    21fa:	55 e4       	ldi	r21, 0x45	; 69
    21fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2200:	dc 01       	movw	r26, r24
    2202:	cb 01       	movw	r24, r22
    2204:	8e 8b       	std	Y+22, r24	; 0x16
    2206:	9f 8b       	std	Y+23, r25	; 0x17
    2208:	a8 8f       	std	Y+24, r26	; 0x18
    220a:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    220c:	6e 89       	ldd	r22, Y+22	; 0x16
    220e:	7f 89       	ldd	r23, Y+23	; 0x17
    2210:	88 8d       	ldd	r24, Y+24	; 0x18
    2212:	99 8d       	ldd	r25, Y+25	; 0x19
    2214:	20 e0       	ldi	r18, 0x00	; 0
    2216:	30 e0       	ldi	r19, 0x00	; 0
    2218:	40 e8       	ldi	r20, 0x80	; 128
    221a:	5f e3       	ldi	r21, 0x3F	; 63
    221c:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2220:	88 23       	and	r24, r24
    2222:	2c f4       	brge	.+10     	; 0x222e <HAL_LCD_Void_Init+0x574>
		__ticks = 1;
    2224:	81 e0       	ldi	r24, 0x01	; 1
    2226:	90 e0       	ldi	r25, 0x00	; 0
    2228:	9d 8b       	std	Y+21, r25	; 0x15
    222a:	8c 8b       	std	Y+20, r24	; 0x14
    222c:	3f c0       	rjmp	.+126    	; 0x22ac <HAL_LCD_Void_Init+0x5f2>
	else if (__tmp > 65535)
    222e:	6e 89       	ldd	r22, Y+22	; 0x16
    2230:	7f 89       	ldd	r23, Y+23	; 0x17
    2232:	88 8d       	ldd	r24, Y+24	; 0x18
    2234:	99 8d       	ldd	r25, Y+25	; 0x19
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	3f ef       	ldi	r19, 0xFF	; 255
    223a:	4f e7       	ldi	r20, 0x7F	; 127
    223c:	57 e4       	ldi	r21, 0x47	; 71
    223e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2242:	18 16       	cp	r1, r24
    2244:	4c f5       	brge	.+82     	; 0x2298 <HAL_LCD_Void_Init+0x5de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2246:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2248:	7b 8d       	ldd	r23, Y+27	; 0x1b
    224a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    224c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	40 e2       	ldi	r20, 0x20	; 32
    2254:	51 e4       	ldi	r21, 0x41	; 65
    2256:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    225a:	dc 01       	movw	r26, r24
    225c:	cb 01       	movw	r24, r22
    225e:	bc 01       	movw	r22, r24
    2260:	cd 01       	movw	r24, r26
    2262:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2266:	dc 01       	movw	r26, r24
    2268:	cb 01       	movw	r24, r22
    226a:	9d 8b       	std	Y+21, r25	; 0x15
    226c:	8c 8b       	std	Y+20, r24	; 0x14
    226e:	0f c0       	rjmp	.+30     	; 0x228e <HAL_LCD_Void_Init+0x5d4>
    2270:	80 e9       	ldi	r24, 0x90	; 144
    2272:	91 e0       	ldi	r25, 0x01	; 1
    2274:	9b 8b       	std	Y+19, r25	; 0x13
    2276:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2278:	8a 89       	ldd	r24, Y+18	; 0x12
    227a:	9b 89       	ldd	r25, Y+19	; 0x13
    227c:	01 97       	sbiw	r24, 0x01	; 1
    227e:	f1 f7       	brne	.-4      	; 0x227c <HAL_LCD_Void_Init+0x5c2>
    2280:	9b 8b       	std	Y+19, r25	; 0x13
    2282:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2284:	8c 89       	ldd	r24, Y+20	; 0x14
    2286:	9d 89       	ldd	r25, Y+21	; 0x15
    2288:	01 97       	sbiw	r24, 0x01	; 1
    228a:	9d 8b       	std	Y+21, r25	; 0x15
    228c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    228e:	8c 89       	ldd	r24, Y+20	; 0x14
    2290:	9d 89       	ldd	r25, Y+21	; 0x15
    2292:	00 97       	sbiw	r24, 0x00	; 0
    2294:	69 f7       	brne	.-38     	; 0x2270 <HAL_LCD_Void_Init+0x5b6>
    2296:	24 c0       	rjmp	.+72     	; 0x22e0 <HAL_LCD_Void_Init+0x626>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2298:	6e 89       	ldd	r22, Y+22	; 0x16
    229a:	7f 89       	ldd	r23, Y+23	; 0x17
    229c:	88 8d       	ldd	r24, Y+24	; 0x18
    229e:	99 8d       	ldd	r25, Y+25	; 0x19
    22a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22a4:	dc 01       	movw	r26, r24
    22a6:	cb 01       	movw	r24, r22
    22a8:	9d 8b       	std	Y+21, r25	; 0x15
    22aa:	8c 8b       	std	Y+20, r24	; 0x14
    22ac:	8c 89       	ldd	r24, Y+20	; 0x14
    22ae:	9d 89       	ldd	r25, Y+21	; 0x15
    22b0:	99 8b       	std	Y+17, r25	; 0x11
    22b2:	88 8b       	std	Y+16, r24	; 0x10
    22b4:	88 89       	ldd	r24, Y+16	; 0x10
    22b6:	99 89       	ldd	r25, Y+17	; 0x11
    22b8:	01 97       	sbiw	r24, 0x01	; 1
    22ba:	f1 f7       	brne	.-4      	; 0x22b8 <HAL_LCD_Void_Init+0x5fe>
    22bc:	99 8b       	std	Y+17, r25	; 0x11
    22be:	88 8b       	std	Y+16, r24	; 0x10
    22c0:	0f c0       	rjmp	.+30     	; 0x22e0 <HAL_LCD_Void_Init+0x626>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22c2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    22c4:	78 a1       	ldd	r23, Y+32	; 0x20
    22c6:	89 a1       	ldd	r24, Y+33	; 0x21
    22c8:	9a a1       	ldd	r25, Y+34	; 0x22
    22ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ce:	dc 01       	movw	r26, r24
    22d0:	cb 01       	movw	r24, r22
    22d2:	8e 8f       	std	Y+30, r24	; 0x1e
    22d4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22d6:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22d8:	8f 85       	ldd	r24, Y+15	; 0x0f
    22da:	8a 95       	dec	r24
    22dc:	f1 f7       	brne	.-4      	; 0x22da <HAL_LCD_Void_Init+0x620>
    22de:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(200);
	HAL_LCD_Void_Send_Command(Return_home);
    22e0:	82 e0       	ldi	r24, 0x02	; 2
    22e2:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
	HAL_LCD_Void_Send_Command(Four_bit_Mode);
    22e6:	88 e2       	ldi	r24, 0x28	; 40
    22e8:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
	HAL_LCD_Void_Send_Command(Display_On);
    22ec:	8c e0       	ldi	r24, 0x0C	; 12
    22ee:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
	HAL_LCD_Void_Send_Command(LCD_Clear);
    22f2:	81 e0       	ldi	r24, 0x01	; 1
    22f4:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
    22f8:	80 e0       	ldi	r24, 0x00	; 0
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	a0 e8       	ldi	r26, 0x80	; 128
    22fe:	bf e3       	ldi	r27, 0x3F	; 63
    2300:	8b 87       	std	Y+11, r24	; 0x0b
    2302:	9c 87       	std	Y+12, r25	; 0x0c
    2304:	ad 87       	std	Y+13, r26	; 0x0d
    2306:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2308:	6b 85       	ldd	r22, Y+11	; 0x0b
    230a:	7c 85       	ldd	r23, Y+12	; 0x0c
    230c:	8d 85       	ldd	r24, Y+13	; 0x0d
    230e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	4a e7       	ldi	r20, 0x7A	; 122
    2316:	55 e4       	ldi	r21, 0x45	; 69
    2318:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    231c:	dc 01       	movw	r26, r24
    231e:	cb 01       	movw	r24, r22
    2320:	8f 83       	std	Y+7, r24	; 0x07
    2322:	98 87       	std	Y+8, r25	; 0x08
    2324:	a9 87       	std	Y+9, r26	; 0x09
    2326:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2328:	6f 81       	ldd	r22, Y+7	; 0x07
    232a:	78 85       	ldd	r23, Y+8	; 0x08
    232c:	89 85       	ldd	r24, Y+9	; 0x09
    232e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	40 e8       	ldi	r20, 0x80	; 128
    2336:	5f e3       	ldi	r21, 0x3F	; 63
    2338:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    233c:	88 23       	and	r24, r24
    233e:	2c f4       	brge	.+10     	; 0x234a <HAL_LCD_Void_Init+0x690>
		__ticks = 1;
    2340:	81 e0       	ldi	r24, 0x01	; 1
    2342:	90 e0       	ldi	r25, 0x00	; 0
    2344:	9e 83       	std	Y+6, r25	; 0x06
    2346:	8d 83       	std	Y+5, r24	; 0x05
    2348:	3f c0       	rjmp	.+126    	; 0x23c8 <HAL_LCD_Void_Init+0x70e>
	else if (__tmp > 65535)
    234a:	6f 81       	ldd	r22, Y+7	; 0x07
    234c:	78 85       	ldd	r23, Y+8	; 0x08
    234e:	89 85       	ldd	r24, Y+9	; 0x09
    2350:	9a 85       	ldd	r25, Y+10	; 0x0a
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	3f ef       	ldi	r19, 0xFF	; 255
    2356:	4f e7       	ldi	r20, 0x7F	; 127
    2358:	57 e4       	ldi	r21, 0x47	; 71
    235a:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    235e:	18 16       	cp	r1, r24
    2360:	4c f5       	brge	.+82     	; 0x23b4 <HAL_LCD_Void_Init+0x6fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2362:	6b 85       	ldd	r22, Y+11	; 0x0b
    2364:	7c 85       	ldd	r23, Y+12	; 0x0c
    2366:	8d 85       	ldd	r24, Y+13	; 0x0d
    2368:	9e 85       	ldd	r25, Y+14	; 0x0e
    236a:	20 e0       	ldi	r18, 0x00	; 0
    236c:	30 e0       	ldi	r19, 0x00	; 0
    236e:	40 e2       	ldi	r20, 0x20	; 32
    2370:	51 e4       	ldi	r21, 0x41	; 65
    2372:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2376:	dc 01       	movw	r26, r24
    2378:	cb 01       	movw	r24, r22
    237a:	bc 01       	movw	r22, r24
    237c:	cd 01       	movw	r24, r26
    237e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2382:	dc 01       	movw	r26, r24
    2384:	cb 01       	movw	r24, r22
    2386:	9e 83       	std	Y+6, r25	; 0x06
    2388:	8d 83       	std	Y+5, r24	; 0x05
    238a:	0f c0       	rjmp	.+30     	; 0x23aa <HAL_LCD_Void_Init+0x6f0>
    238c:	80 e9       	ldi	r24, 0x90	; 144
    238e:	91 e0       	ldi	r25, 0x01	; 1
    2390:	9c 83       	std	Y+4, r25	; 0x04
    2392:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2394:	8b 81       	ldd	r24, Y+3	; 0x03
    2396:	9c 81       	ldd	r25, Y+4	; 0x04
    2398:	01 97       	sbiw	r24, 0x01	; 1
    239a:	f1 f7       	brne	.-4      	; 0x2398 <HAL_LCD_Void_Init+0x6de>
    239c:	9c 83       	std	Y+4, r25	; 0x04
    239e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23a0:	8d 81       	ldd	r24, Y+5	; 0x05
    23a2:	9e 81       	ldd	r25, Y+6	; 0x06
    23a4:	01 97       	sbiw	r24, 0x01	; 1
    23a6:	9e 83       	std	Y+6, r25	; 0x06
    23a8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23aa:	8d 81       	ldd	r24, Y+5	; 0x05
    23ac:	9e 81       	ldd	r25, Y+6	; 0x06
    23ae:	00 97       	sbiw	r24, 0x00	; 0
    23b0:	69 f7       	brne	.-38     	; 0x238c <HAL_LCD_Void_Init+0x6d2>
    23b2:	14 c0       	rjmp	.+40     	; 0x23dc <HAL_LCD_Void_Init+0x722>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23b4:	6f 81       	ldd	r22, Y+7	; 0x07
    23b6:	78 85       	ldd	r23, Y+8	; 0x08
    23b8:	89 85       	ldd	r24, Y+9	; 0x09
    23ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    23bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23c0:	dc 01       	movw	r26, r24
    23c2:	cb 01       	movw	r24, r22
    23c4:	9e 83       	std	Y+6, r25	; 0x06
    23c6:	8d 83       	std	Y+5, r24	; 0x05
    23c8:	8d 81       	ldd	r24, Y+5	; 0x05
    23ca:	9e 81       	ldd	r25, Y+6	; 0x06
    23cc:	9a 83       	std	Y+2, r25	; 0x02
    23ce:	89 83       	std	Y+1, r24	; 0x01
    23d0:	89 81       	ldd	r24, Y+1	; 0x01
    23d2:	9a 81       	ldd	r25, Y+2	; 0x02
    23d4:	01 97       	sbiw	r24, 0x01	; 1
    23d6:	f1 f7       	brne	.-4      	; 0x23d4 <HAL_LCD_Void_Init+0x71a>
    23d8:	9a 83       	std	Y+2, r25	; 0x02
    23da:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	HAL_LCD_Void_Send_Command(Entry_Mode);
    23dc:	86 e0       	ldi	r24, 0x06	; 6
    23de:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
}
    23e2:	c6 5a       	subi	r28, 0xA6	; 166
    23e4:	df 4f       	sbci	r29, 0xFF	; 255
    23e6:	0f b6       	in	r0, 0x3f	; 63
    23e8:	f8 94       	cli
    23ea:	de bf       	out	0x3e, r29	; 62
    23ec:	0f be       	out	0x3f, r0	; 63
    23ee:	cd bf       	out	0x3d, r28	; 61
    23f0:	cf 91       	pop	r28
    23f2:	df 91       	pop	r29
    23f4:	1f 91       	pop	r17
    23f6:	0f 91       	pop	r16
    23f8:	08 95       	ret

000023fa <HAL_LCD_Void_Send_Command>:

void HAL_LCD_Void_Send_Command( u8_t u8_Command){
    23fa:	df 93       	push	r29
    23fc:	cf 93       	push	r28
    23fe:	cd b7       	in	r28, 0x3d	; 61
    2400:	de b7       	in	r29, 0x3e	; 62
    2402:	e9 97       	sbiw	r28, 0x39	; 57
    2404:	0f b6       	in	r0, 0x3f	; 63
    2406:	f8 94       	cli
    2408:	de bf       	out	0x3e, r29	; 62
    240a:	0f be       	out	0x3f, r0	; 63
    240c:	cd bf       	out	0x3d, r28	; 61
    240e:	89 af       	std	Y+57, r24	; 0x39
	MCAL_DIO_u8_Set_Pin_Value(LCD_D7_PORT , LCD_D7_PIN , GET_BIT(u8_Command ,7));
    2410:	89 ad       	ldd	r24, Y+57	; 0x39
    2412:	98 2f       	mov	r25, r24
    2414:	99 1f       	adc	r25, r25
    2416:	99 27       	eor	r25, r25
    2418:	99 1f       	adc	r25, r25
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	64 e0       	ldi	r22, 0x04	; 4
    241e:	49 2f       	mov	r20, r25
    2420:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D6_PORT , LCD_D6_PIN , GET_BIT(u8_Command ,6));
    2424:	89 ad       	ldd	r24, Y+57	; 0x39
    2426:	82 95       	swap	r24
    2428:	86 95       	lsr	r24
    242a:	86 95       	lsr	r24
    242c:	83 70       	andi	r24, 0x03	; 3
    242e:	98 2f       	mov	r25, r24
    2430:	91 70       	andi	r25, 0x01	; 1
    2432:	81 e0       	ldi	r24, 0x01	; 1
    2434:	62 e0       	ldi	r22, 0x02	; 2
    2436:	49 2f       	mov	r20, r25
    2438:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D5_PORT , LCD_D5_PIN , GET_BIT(u8_Command ,5));
    243c:	89 ad       	ldd	r24, Y+57	; 0x39
    243e:	82 95       	swap	r24
    2440:	86 95       	lsr	r24
    2442:	87 70       	andi	r24, 0x07	; 7
    2444:	98 2f       	mov	r25, r24
    2446:	91 70       	andi	r25, 0x01	; 1
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	61 e0       	ldi	r22, 0x01	; 1
    244c:	49 2f       	mov	r20, r25
    244e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D4_PORT , LCD_D4_PIN , GET_BIT(u8_Command ,4));
    2452:	89 ad       	ldd	r24, Y+57	; 0x39
    2454:	82 95       	swap	r24
    2456:	8f 70       	andi	r24, 0x0F	; 15
    2458:	98 2f       	mov	r25, r24
    245a:	91 70       	andi	r25, 0x01	; 1
    245c:	81 e0       	ldi	r24, 0x01	; 1
    245e:	60 e0       	ldi	r22, 0x00	; 0
    2460:	49 2f       	mov	r20, r25
    2462:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_RS_PORT , LCD_RS_PIN , Low);
    2466:	80 e0       	ldi	r24, 0x00	; 0
    2468:	63 e0       	ldi	r22, 0x03	; 3
    246a:	40 e0       	ldi	r20, 0x00	; 0
    246c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , High);
    2470:	80 e0       	ldi	r24, 0x00	; 0
    2472:	62 e0       	ldi	r22, 0x02	; 2
    2474:	41 e0       	ldi	r20, 0x01	; 1
    2476:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    247a:	80 e0       	ldi	r24, 0x00	; 0
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	a0 e8       	ldi	r26, 0x80	; 128
    2480:	bf e3       	ldi	r27, 0x3F	; 63
    2482:	8d ab       	std	Y+53, r24	; 0x35
    2484:	9e ab       	std	Y+54, r25	; 0x36
    2486:	af ab       	std	Y+55, r26	; 0x37
    2488:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    248a:	6d a9       	ldd	r22, Y+53	; 0x35
    248c:	7e a9       	ldd	r23, Y+54	; 0x36
    248e:	8f a9       	ldd	r24, Y+55	; 0x37
    2490:	98 ad       	ldd	r25, Y+56	; 0x38
    2492:	20 e0       	ldi	r18, 0x00	; 0
    2494:	30 e0       	ldi	r19, 0x00	; 0
    2496:	4a e7       	ldi	r20, 0x7A	; 122
    2498:	55 e4       	ldi	r21, 0x45	; 69
    249a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    249e:	dc 01       	movw	r26, r24
    24a0:	cb 01       	movw	r24, r22
    24a2:	89 ab       	std	Y+49, r24	; 0x31
    24a4:	9a ab       	std	Y+50, r25	; 0x32
    24a6:	ab ab       	std	Y+51, r26	; 0x33
    24a8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    24aa:	69 a9       	ldd	r22, Y+49	; 0x31
    24ac:	7a a9       	ldd	r23, Y+50	; 0x32
    24ae:	8b a9       	ldd	r24, Y+51	; 0x33
    24b0:	9c a9       	ldd	r25, Y+52	; 0x34
    24b2:	20 e0       	ldi	r18, 0x00	; 0
    24b4:	30 e0       	ldi	r19, 0x00	; 0
    24b6:	40 e8       	ldi	r20, 0x80	; 128
    24b8:	5f e3       	ldi	r21, 0x3F	; 63
    24ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    24be:	88 23       	and	r24, r24
    24c0:	2c f4       	brge	.+10     	; 0x24cc <HAL_LCD_Void_Send_Command+0xd2>
		__ticks = 1;
    24c2:	81 e0       	ldi	r24, 0x01	; 1
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	98 ab       	std	Y+48, r25	; 0x30
    24c8:	8f a7       	std	Y+47, r24	; 0x2f
    24ca:	3f c0       	rjmp	.+126    	; 0x254a <HAL_LCD_Void_Send_Command+0x150>
	else if (__tmp > 65535)
    24cc:	69 a9       	ldd	r22, Y+49	; 0x31
    24ce:	7a a9       	ldd	r23, Y+50	; 0x32
    24d0:	8b a9       	ldd	r24, Y+51	; 0x33
    24d2:	9c a9       	ldd	r25, Y+52	; 0x34
    24d4:	20 e0       	ldi	r18, 0x00	; 0
    24d6:	3f ef       	ldi	r19, 0xFF	; 255
    24d8:	4f e7       	ldi	r20, 0x7F	; 127
    24da:	57 e4       	ldi	r21, 0x47	; 71
    24dc:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    24e0:	18 16       	cp	r1, r24
    24e2:	4c f5       	brge	.+82     	; 0x2536 <HAL_LCD_Void_Send_Command+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24e4:	6d a9       	ldd	r22, Y+53	; 0x35
    24e6:	7e a9       	ldd	r23, Y+54	; 0x36
    24e8:	8f a9       	ldd	r24, Y+55	; 0x37
    24ea:	98 ad       	ldd	r25, Y+56	; 0x38
    24ec:	20 e0       	ldi	r18, 0x00	; 0
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	40 e2       	ldi	r20, 0x20	; 32
    24f2:	51 e4       	ldi	r21, 0x41	; 65
    24f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	bc 01       	movw	r22, r24
    24fe:	cd 01       	movw	r24, r26
    2500:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2504:	dc 01       	movw	r26, r24
    2506:	cb 01       	movw	r24, r22
    2508:	98 ab       	std	Y+48, r25	; 0x30
    250a:	8f a7       	std	Y+47, r24	; 0x2f
    250c:	0f c0       	rjmp	.+30     	; 0x252c <HAL_LCD_Void_Send_Command+0x132>
    250e:	80 e9       	ldi	r24, 0x90	; 144
    2510:	91 e0       	ldi	r25, 0x01	; 1
    2512:	9e a7       	std	Y+46, r25	; 0x2e
    2514:	8d a7       	std	Y+45, r24	; 0x2d
    2516:	8d a5       	ldd	r24, Y+45	; 0x2d
    2518:	9e a5       	ldd	r25, Y+46	; 0x2e
    251a:	01 97       	sbiw	r24, 0x01	; 1
    251c:	f1 f7       	brne	.-4      	; 0x251a <HAL_LCD_Void_Send_Command+0x120>
    251e:	9e a7       	std	Y+46, r25	; 0x2e
    2520:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2522:	8f a5       	ldd	r24, Y+47	; 0x2f
    2524:	98 a9       	ldd	r25, Y+48	; 0x30
    2526:	01 97       	sbiw	r24, 0x01	; 1
    2528:	98 ab       	std	Y+48, r25	; 0x30
    252a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    252c:	8f a5       	ldd	r24, Y+47	; 0x2f
    252e:	98 a9       	ldd	r25, Y+48	; 0x30
    2530:	00 97       	sbiw	r24, 0x00	; 0
    2532:	69 f7       	brne	.-38     	; 0x250e <HAL_LCD_Void_Send_Command+0x114>
    2534:	14 c0       	rjmp	.+40     	; 0x255e <HAL_LCD_Void_Send_Command+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2536:	69 a9       	ldd	r22, Y+49	; 0x31
    2538:	7a a9       	ldd	r23, Y+50	; 0x32
    253a:	8b a9       	ldd	r24, Y+51	; 0x33
    253c:	9c a9       	ldd	r25, Y+52	; 0x34
    253e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2542:	dc 01       	movw	r26, r24
    2544:	cb 01       	movw	r24, r22
    2546:	98 ab       	std	Y+48, r25	; 0x30
    2548:	8f a7       	std	Y+47, r24	; 0x2f
    254a:	8f a5       	ldd	r24, Y+47	; 0x2f
    254c:	98 a9       	ldd	r25, Y+48	; 0x30
    254e:	9c a7       	std	Y+44, r25	; 0x2c
    2550:	8b a7       	std	Y+43, r24	; 0x2b
    2552:	8b a5       	ldd	r24, Y+43	; 0x2b
    2554:	9c a5       	ldd	r25, Y+44	; 0x2c
    2556:	01 97       	sbiw	r24, 0x01	; 1
    2558:	f1 f7       	brne	.-4      	; 0x2556 <HAL_LCD_Void_Send_Command+0x15c>
    255a:	9c a7       	std	Y+44, r25	; 0x2c
    255c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , Low);
    255e:	80 e0       	ldi	r24, 0x00	; 0
    2560:	62 e0       	ldi	r22, 0x02	; 2
    2562:	40 e0       	ldi	r20, 0x00	; 0
    2564:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    2568:	80 e0       	ldi	r24, 0x00	; 0
    256a:	90 e0       	ldi	r25, 0x00	; 0
    256c:	a0 e8       	ldi	r26, 0x80	; 128
    256e:	bf e3       	ldi	r27, 0x3F	; 63
    2570:	8f a3       	std	Y+39, r24	; 0x27
    2572:	98 a7       	std	Y+40, r25	; 0x28
    2574:	a9 a7       	std	Y+41, r26	; 0x29
    2576:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2578:	6f a1       	ldd	r22, Y+39	; 0x27
    257a:	78 a5       	ldd	r23, Y+40	; 0x28
    257c:	89 a5       	ldd	r24, Y+41	; 0x29
    257e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2580:	20 e0       	ldi	r18, 0x00	; 0
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	4a e7       	ldi	r20, 0x7A	; 122
    2586:	55 e4       	ldi	r21, 0x45	; 69
    2588:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    258c:	dc 01       	movw	r26, r24
    258e:	cb 01       	movw	r24, r22
    2590:	8b a3       	std	Y+35, r24	; 0x23
    2592:	9c a3       	std	Y+36, r25	; 0x24
    2594:	ad a3       	std	Y+37, r26	; 0x25
    2596:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2598:	6b a1       	ldd	r22, Y+35	; 0x23
    259a:	7c a1       	ldd	r23, Y+36	; 0x24
    259c:	8d a1       	ldd	r24, Y+37	; 0x25
    259e:	9e a1       	ldd	r25, Y+38	; 0x26
    25a0:	20 e0       	ldi	r18, 0x00	; 0
    25a2:	30 e0       	ldi	r19, 0x00	; 0
    25a4:	40 e8       	ldi	r20, 0x80	; 128
    25a6:	5f e3       	ldi	r21, 0x3F	; 63
    25a8:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    25ac:	88 23       	and	r24, r24
    25ae:	2c f4       	brge	.+10     	; 0x25ba <HAL_LCD_Void_Send_Command+0x1c0>
		__ticks = 1;
    25b0:	81 e0       	ldi	r24, 0x01	; 1
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	9a a3       	std	Y+34, r25	; 0x22
    25b6:	89 a3       	std	Y+33, r24	; 0x21
    25b8:	3f c0       	rjmp	.+126    	; 0x2638 <HAL_LCD_Void_Send_Command+0x23e>
	else if (__tmp > 65535)
    25ba:	6b a1       	ldd	r22, Y+35	; 0x23
    25bc:	7c a1       	ldd	r23, Y+36	; 0x24
    25be:	8d a1       	ldd	r24, Y+37	; 0x25
    25c0:	9e a1       	ldd	r25, Y+38	; 0x26
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	3f ef       	ldi	r19, 0xFF	; 255
    25c6:	4f e7       	ldi	r20, 0x7F	; 127
    25c8:	57 e4       	ldi	r21, 0x47	; 71
    25ca:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    25ce:	18 16       	cp	r1, r24
    25d0:	4c f5       	brge	.+82     	; 0x2624 <HAL_LCD_Void_Send_Command+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25d2:	6f a1       	ldd	r22, Y+39	; 0x27
    25d4:	78 a5       	ldd	r23, Y+40	; 0x28
    25d6:	89 a5       	ldd	r24, Y+41	; 0x29
    25d8:	9a a5       	ldd	r25, Y+42	; 0x2a
    25da:	20 e0       	ldi	r18, 0x00	; 0
    25dc:	30 e0       	ldi	r19, 0x00	; 0
    25de:	40 e2       	ldi	r20, 0x20	; 32
    25e0:	51 e4       	ldi	r21, 0x41	; 65
    25e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	bc 01       	movw	r22, r24
    25ec:	cd 01       	movw	r24, r26
    25ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f2:	dc 01       	movw	r26, r24
    25f4:	cb 01       	movw	r24, r22
    25f6:	9a a3       	std	Y+34, r25	; 0x22
    25f8:	89 a3       	std	Y+33, r24	; 0x21
    25fa:	0f c0       	rjmp	.+30     	; 0x261a <HAL_LCD_Void_Send_Command+0x220>
    25fc:	80 e9       	ldi	r24, 0x90	; 144
    25fe:	91 e0       	ldi	r25, 0x01	; 1
    2600:	98 a3       	std	Y+32, r25	; 0x20
    2602:	8f 8f       	std	Y+31, r24	; 0x1f
    2604:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2606:	98 a1       	ldd	r25, Y+32	; 0x20
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	f1 f7       	brne	.-4      	; 0x2608 <HAL_LCD_Void_Send_Command+0x20e>
    260c:	98 a3       	std	Y+32, r25	; 0x20
    260e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2610:	89 a1       	ldd	r24, Y+33	; 0x21
    2612:	9a a1       	ldd	r25, Y+34	; 0x22
    2614:	01 97       	sbiw	r24, 0x01	; 1
    2616:	9a a3       	std	Y+34, r25	; 0x22
    2618:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    261a:	89 a1       	ldd	r24, Y+33	; 0x21
    261c:	9a a1       	ldd	r25, Y+34	; 0x22
    261e:	00 97       	sbiw	r24, 0x00	; 0
    2620:	69 f7       	brne	.-38     	; 0x25fc <HAL_LCD_Void_Send_Command+0x202>
    2622:	14 c0       	rjmp	.+40     	; 0x264c <HAL_LCD_Void_Send_Command+0x252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2624:	6b a1       	ldd	r22, Y+35	; 0x23
    2626:	7c a1       	ldd	r23, Y+36	; 0x24
    2628:	8d a1       	ldd	r24, Y+37	; 0x25
    262a:	9e a1       	ldd	r25, Y+38	; 0x26
    262c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2630:	dc 01       	movw	r26, r24
    2632:	cb 01       	movw	r24, r22
    2634:	9a a3       	std	Y+34, r25	; 0x22
    2636:	89 a3       	std	Y+33, r24	; 0x21
    2638:	89 a1       	ldd	r24, Y+33	; 0x21
    263a:	9a a1       	ldd	r25, Y+34	; 0x22
    263c:	9e 8f       	std	Y+30, r25	; 0x1e
    263e:	8d 8f       	std	Y+29, r24	; 0x1d
    2640:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2642:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2644:	01 97       	sbiw	r24, 0x01	; 1
    2646:	f1 f7       	brne	.-4      	; 0x2644 <HAL_LCD_Void_Send_Command+0x24a>
    2648:	9e 8f       	std	Y+30, r25	; 0x1e
    264a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	
	MCAL_DIO_u8_Set_Pin_Value(LCD_D7_PORT , LCD_D7_PIN , GET_BIT(u8_Command ,3));
    264c:	89 ad       	ldd	r24, Y+57	; 0x39
    264e:	86 95       	lsr	r24
    2650:	86 95       	lsr	r24
    2652:	86 95       	lsr	r24
    2654:	98 2f       	mov	r25, r24
    2656:	91 70       	andi	r25, 0x01	; 1
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	64 e0       	ldi	r22, 0x04	; 4
    265c:	49 2f       	mov	r20, r25
    265e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D6_PORT , LCD_D6_PIN , GET_BIT(u8_Command ,2));
    2662:	89 ad       	ldd	r24, Y+57	; 0x39
    2664:	86 95       	lsr	r24
    2666:	86 95       	lsr	r24
    2668:	98 2f       	mov	r25, r24
    266a:	91 70       	andi	r25, 0x01	; 1
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	62 e0       	ldi	r22, 0x02	; 2
    2670:	49 2f       	mov	r20, r25
    2672:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D5_PORT , LCD_D5_PIN , GET_BIT(u8_Command ,1));
    2676:	89 ad       	ldd	r24, Y+57	; 0x39
    2678:	86 95       	lsr	r24
    267a:	98 2f       	mov	r25, r24
    267c:	91 70       	andi	r25, 0x01	; 1
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	61 e0       	ldi	r22, 0x01	; 1
    2682:	49 2f       	mov	r20, r25
    2684:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D4_PORT , LCD_D4_PIN , GET_BIT(u8_Command ,0));
    2688:	89 ad       	ldd	r24, Y+57	; 0x39
    268a:	98 2f       	mov	r25, r24
    268c:	91 70       	andi	r25, 0x01	; 1
    268e:	81 e0       	ldi	r24, 0x01	; 1
    2690:	60 e0       	ldi	r22, 0x00	; 0
    2692:	49 2f       	mov	r20, r25
    2694:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_RS_PORT , LCD_RS_PIN , Low);
    2698:	80 e0       	ldi	r24, 0x00	; 0
    269a:	63 e0       	ldi	r22, 0x03	; 3
    269c:	40 e0       	ldi	r20, 0x00	; 0
    269e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , High);
    26a2:	80 e0       	ldi	r24, 0x00	; 0
    26a4:	62 e0       	ldi	r22, 0x02	; 2
    26a6:	41 e0       	ldi	r20, 0x01	; 1
    26a8:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    26ac:	80 e0       	ldi	r24, 0x00	; 0
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	a0 e8       	ldi	r26, 0x80	; 128
    26b2:	bf e3       	ldi	r27, 0x3F	; 63
    26b4:	89 8f       	std	Y+25, r24	; 0x19
    26b6:	9a 8f       	std	Y+26, r25	; 0x1a
    26b8:	ab 8f       	std	Y+27, r26	; 0x1b
    26ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26bc:	69 8d       	ldd	r22, Y+25	; 0x19
    26be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	4a e7       	ldi	r20, 0x7A	; 122
    26ca:	55 e4       	ldi	r21, 0x45	; 69
    26cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26d0:	dc 01       	movw	r26, r24
    26d2:	cb 01       	movw	r24, r22
    26d4:	8d 8b       	std	Y+21, r24	; 0x15
    26d6:	9e 8b       	std	Y+22, r25	; 0x16
    26d8:	af 8b       	std	Y+23, r26	; 0x17
    26da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    26dc:	6d 89       	ldd	r22, Y+21	; 0x15
    26de:	7e 89       	ldd	r23, Y+22	; 0x16
    26e0:	8f 89       	ldd	r24, Y+23	; 0x17
    26e2:	98 8d       	ldd	r25, Y+24	; 0x18
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	40 e8       	ldi	r20, 0x80	; 128
    26ea:	5f e3       	ldi	r21, 0x3F	; 63
    26ec:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    26f0:	88 23       	and	r24, r24
    26f2:	2c f4       	brge	.+10     	; 0x26fe <HAL_LCD_Void_Send_Command+0x304>
		__ticks = 1;
    26f4:	81 e0       	ldi	r24, 0x01	; 1
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	9c 8b       	std	Y+20, r25	; 0x14
    26fa:	8b 8b       	std	Y+19, r24	; 0x13
    26fc:	3f c0       	rjmp	.+126    	; 0x277c <HAL_LCD_Void_Send_Command+0x382>
	else if (__tmp > 65535)
    26fe:	6d 89       	ldd	r22, Y+21	; 0x15
    2700:	7e 89       	ldd	r23, Y+22	; 0x16
    2702:	8f 89       	ldd	r24, Y+23	; 0x17
    2704:	98 8d       	ldd	r25, Y+24	; 0x18
    2706:	20 e0       	ldi	r18, 0x00	; 0
    2708:	3f ef       	ldi	r19, 0xFF	; 255
    270a:	4f e7       	ldi	r20, 0x7F	; 127
    270c:	57 e4       	ldi	r21, 0x47	; 71
    270e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2712:	18 16       	cp	r1, r24
    2714:	4c f5       	brge	.+82     	; 0x2768 <HAL_LCD_Void_Send_Command+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2716:	69 8d       	ldd	r22, Y+25	; 0x19
    2718:	7a 8d       	ldd	r23, Y+26	; 0x1a
    271a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    271c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    271e:	20 e0       	ldi	r18, 0x00	; 0
    2720:	30 e0       	ldi	r19, 0x00	; 0
    2722:	40 e2       	ldi	r20, 0x20	; 32
    2724:	51 e4       	ldi	r21, 0x41	; 65
    2726:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    272a:	dc 01       	movw	r26, r24
    272c:	cb 01       	movw	r24, r22
    272e:	bc 01       	movw	r22, r24
    2730:	cd 01       	movw	r24, r26
    2732:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2736:	dc 01       	movw	r26, r24
    2738:	cb 01       	movw	r24, r22
    273a:	9c 8b       	std	Y+20, r25	; 0x14
    273c:	8b 8b       	std	Y+19, r24	; 0x13
    273e:	0f c0       	rjmp	.+30     	; 0x275e <HAL_LCD_Void_Send_Command+0x364>
    2740:	80 e9       	ldi	r24, 0x90	; 144
    2742:	91 e0       	ldi	r25, 0x01	; 1
    2744:	9a 8b       	std	Y+18, r25	; 0x12
    2746:	89 8b       	std	Y+17, r24	; 0x11
    2748:	89 89       	ldd	r24, Y+17	; 0x11
    274a:	9a 89       	ldd	r25, Y+18	; 0x12
    274c:	01 97       	sbiw	r24, 0x01	; 1
    274e:	f1 f7       	brne	.-4      	; 0x274c <HAL_LCD_Void_Send_Command+0x352>
    2750:	9a 8b       	std	Y+18, r25	; 0x12
    2752:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2754:	8b 89       	ldd	r24, Y+19	; 0x13
    2756:	9c 89       	ldd	r25, Y+20	; 0x14
    2758:	01 97       	sbiw	r24, 0x01	; 1
    275a:	9c 8b       	std	Y+20, r25	; 0x14
    275c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    275e:	8b 89       	ldd	r24, Y+19	; 0x13
    2760:	9c 89       	ldd	r25, Y+20	; 0x14
    2762:	00 97       	sbiw	r24, 0x00	; 0
    2764:	69 f7       	brne	.-38     	; 0x2740 <HAL_LCD_Void_Send_Command+0x346>
    2766:	14 c0       	rjmp	.+40     	; 0x2790 <HAL_LCD_Void_Send_Command+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2768:	6d 89       	ldd	r22, Y+21	; 0x15
    276a:	7e 89       	ldd	r23, Y+22	; 0x16
    276c:	8f 89       	ldd	r24, Y+23	; 0x17
    276e:	98 8d       	ldd	r25, Y+24	; 0x18
    2770:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2774:	dc 01       	movw	r26, r24
    2776:	cb 01       	movw	r24, r22
    2778:	9c 8b       	std	Y+20, r25	; 0x14
    277a:	8b 8b       	std	Y+19, r24	; 0x13
    277c:	8b 89       	ldd	r24, Y+19	; 0x13
    277e:	9c 89       	ldd	r25, Y+20	; 0x14
    2780:	98 8b       	std	Y+16, r25	; 0x10
    2782:	8f 87       	std	Y+15, r24	; 0x0f
    2784:	8f 85       	ldd	r24, Y+15	; 0x0f
    2786:	98 89       	ldd	r25, Y+16	; 0x10
    2788:	01 97       	sbiw	r24, 0x01	; 1
    278a:	f1 f7       	brne	.-4      	; 0x2788 <HAL_LCD_Void_Send_Command+0x38e>
    278c:	98 8b       	std	Y+16, r25	; 0x10
    278e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , Low);
    2790:	80 e0       	ldi	r24, 0x00	; 0
    2792:	62 e0       	ldi	r22, 0x02	; 2
    2794:	40 e0       	ldi	r20, 0x00	; 0
    2796:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    279a:	80 e0       	ldi	r24, 0x00	; 0
    279c:	90 e0       	ldi	r25, 0x00	; 0
    279e:	a0 e8       	ldi	r26, 0x80	; 128
    27a0:	bf e3       	ldi	r27, 0x3F	; 63
    27a2:	8b 87       	std	Y+11, r24	; 0x0b
    27a4:	9c 87       	std	Y+12, r25	; 0x0c
    27a6:	ad 87       	std	Y+13, r26	; 0x0d
    27a8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27aa:	6b 85       	ldd	r22, Y+11	; 0x0b
    27ac:	7c 85       	ldd	r23, Y+12	; 0x0c
    27ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    27b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    27b2:	20 e0       	ldi	r18, 0x00	; 0
    27b4:	30 e0       	ldi	r19, 0x00	; 0
    27b6:	4a e7       	ldi	r20, 0x7A	; 122
    27b8:	55 e4       	ldi	r21, 0x45	; 69
    27ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27be:	dc 01       	movw	r26, r24
    27c0:	cb 01       	movw	r24, r22
    27c2:	8f 83       	std	Y+7, r24	; 0x07
    27c4:	98 87       	std	Y+8, r25	; 0x08
    27c6:	a9 87       	std	Y+9, r26	; 0x09
    27c8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27ca:	6f 81       	ldd	r22, Y+7	; 0x07
    27cc:	78 85       	ldd	r23, Y+8	; 0x08
    27ce:	89 85       	ldd	r24, Y+9	; 0x09
    27d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    27d2:	20 e0       	ldi	r18, 0x00	; 0
    27d4:	30 e0       	ldi	r19, 0x00	; 0
    27d6:	40 e8       	ldi	r20, 0x80	; 128
    27d8:	5f e3       	ldi	r21, 0x3F	; 63
    27da:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    27de:	88 23       	and	r24, r24
    27e0:	2c f4       	brge	.+10     	; 0x27ec <HAL_LCD_Void_Send_Command+0x3f2>
		__ticks = 1;
    27e2:	81 e0       	ldi	r24, 0x01	; 1
    27e4:	90 e0       	ldi	r25, 0x00	; 0
    27e6:	9e 83       	std	Y+6, r25	; 0x06
    27e8:	8d 83       	std	Y+5, r24	; 0x05
    27ea:	3f c0       	rjmp	.+126    	; 0x286a <HAL_LCD_Void_Send_Command+0x470>
	else if (__tmp > 65535)
    27ec:	6f 81       	ldd	r22, Y+7	; 0x07
    27ee:	78 85       	ldd	r23, Y+8	; 0x08
    27f0:	89 85       	ldd	r24, Y+9	; 0x09
    27f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    27f4:	20 e0       	ldi	r18, 0x00	; 0
    27f6:	3f ef       	ldi	r19, 0xFF	; 255
    27f8:	4f e7       	ldi	r20, 0x7F	; 127
    27fa:	57 e4       	ldi	r21, 0x47	; 71
    27fc:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2800:	18 16       	cp	r1, r24
    2802:	4c f5       	brge	.+82     	; 0x2856 <HAL_LCD_Void_Send_Command+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2804:	6b 85       	ldd	r22, Y+11	; 0x0b
    2806:	7c 85       	ldd	r23, Y+12	; 0x0c
    2808:	8d 85       	ldd	r24, Y+13	; 0x0d
    280a:	9e 85       	ldd	r25, Y+14	; 0x0e
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	40 e2       	ldi	r20, 0x20	; 32
    2812:	51 e4       	ldi	r21, 0x41	; 65
    2814:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2818:	dc 01       	movw	r26, r24
    281a:	cb 01       	movw	r24, r22
    281c:	bc 01       	movw	r22, r24
    281e:	cd 01       	movw	r24, r26
    2820:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2824:	dc 01       	movw	r26, r24
    2826:	cb 01       	movw	r24, r22
    2828:	9e 83       	std	Y+6, r25	; 0x06
    282a:	8d 83       	std	Y+5, r24	; 0x05
    282c:	0f c0       	rjmp	.+30     	; 0x284c <HAL_LCD_Void_Send_Command+0x452>
    282e:	80 e9       	ldi	r24, 0x90	; 144
    2830:	91 e0       	ldi	r25, 0x01	; 1
    2832:	9c 83       	std	Y+4, r25	; 0x04
    2834:	8b 83       	std	Y+3, r24	; 0x03
    2836:	8b 81       	ldd	r24, Y+3	; 0x03
    2838:	9c 81       	ldd	r25, Y+4	; 0x04
    283a:	01 97       	sbiw	r24, 0x01	; 1
    283c:	f1 f7       	brne	.-4      	; 0x283a <HAL_LCD_Void_Send_Command+0x440>
    283e:	9c 83       	std	Y+4, r25	; 0x04
    2840:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2842:	8d 81       	ldd	r24, Y+5	; 0x05
    2844:	9e 81       	ldd	r25, Y+6	; 0x06
    2846:	01 97       	sbiw	r24, 0x01	; 1
    2848:	9e 83       	std	Y+6, r25	; 0x06
    284a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    284c:	8d 81       	ldd	r24, Y+5	; 0x05
    284e:	9e 81       	ldd	r25, Y+6	; 0x06
    2850:	00 97       	sbiw	r24, 0x00	; 0
    2852:	69 f7       	brne	.-38     	; 0x282e <HAL_LCD_Void_Send_Command+0x434>
    2854:	14 c0       	rjmp	.+40     	; 0x287e <HAL_LCD_Void_Send_Command+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2856:	6f 81       	ldd	r22, Y+7	; 0x07
    2858:	78 85       	ldd	r23, Y+8	; 0x08
    285a:	89 85       	ldd	r24, Y+9	; 0x09
    285c:	9a 85       	ldd	r25, Y+10	; 0x0a
    285e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2862:	dc 01       	movw	r26, r24
    2864:	cb 01       	movw	r24, r22
    2866:	9e 83       	std	Y+6, r25	; 0x06
    2868:	8d 83       	std	Y+5, r24	; 0x05
    286a:	8d 81       	ldd	r24, Y+5	; 0x05
    286c:	9e 81       	ldd	r25, Y+6	; 0x06
    286e:	9a 83       	std	Y+2, r25	; 0x02
    2870:	89 83       	std	Y+1, r24	; 0x01
    2872:	89 81       	ldd	r24, Y+1	; 0x01
    2874:	9a 81       	ldd	r25, Y+2	; 0x02
    2876:	01 97       	sbiw	r24, 0x01	; 1
    2878:	f1 f7       	brne	.-4      	; 0x2876 <HAL_LCD_Void_Send_Command+0x47c>
    287a:	9a 83       	std	Y+2, r25	; 0x02
    287c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    287e:	e9 96       	adiw	r28, 0x39	; 57
    2880:	0f b6       	in	r0, 0x3f	; 63
    2882:	f8 94       	cli
    2884:	de bf       	out	0x3e, r29	; 62
    2886:	0f be       	out	0x3f, r0	; 63
    2888:	cd bf       	out	0x3d, r28	; 61
    288a:	cf 91       	pop	r28
    288c:	df 91       	pop	r29
    288e:	08 95       	ret

00002890 <HAL_LCD_Void_Send_Char>:

void HAL_LCD_Void_Send_Char( u8_t u8_Data){
    2890:	df 93       	push	r29
    2892:	cf 93       	push	r28
    2894:	cd b7       	in	r28, 0x3d	; 61
    2896:	de b7       	in	r29, 0x3e	; 62
    2898:	e9 97       	sbiw	r28, 0x39	; 57
    289a:	0f b6       	in	r0, 0x3f	; 63
    289c:	f8 94       	cli
    289e:	de bf       	out	0x3e, r29	; 62
    28a0:	0f be       	out	0x3f, r0	; 63
    28a2:	cd bf       	out	0x3d, r28	; 61
    28a4:	89 af       	std	Y+57, r24	; 0x39
	MCAL_DIO_u8_Set_Pin_Value(LCD_D7_PORT , LCD_D7_PIN , GET_BIT(u8_Data ,7));
    28a6:	89 ad       	ldd	r24, Y+57	; 0x39
    28a8:	98 2f       	mov	r25, r24
    28aa:	99 1f       	adc	r25, r25
    28ac:	99 27       	eor	r25, r25
    28ae:	99 1f       	adc	r25, r25
    28b0:	81 e0       	ldi	r24, 0x01	; 1
    28b2:	64 e0       	ldi	r22, 0x04	; 4
    28b4:	49 2f       	mov	r20, r25
    28b6:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D6_PORT , LCD_D6_PIN , GET_BIT(u8_Data ,6));
    28ba:	89 ad       	ldd	r24, Y+57	; 0x39
    28bc:	82 95       	swap	r24
    28be:	86 95       	lsr	r24
    28c0:	86 95       	lsr	r24
    28c2:	83 70       	andi	r24, 0x03	; 3
    28c4:	98 2f       	mov	r25, r24
    28c6:	91 70       	andi	r25, 0x01	; 1
    28c8:	81 e0       	ldi	r24, 0x01	; 1
    28ca:	62 e0       	ldi	r22, 0x02	; 2
    28cc:	49 2f       	mov	r20, r25
    28ce:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D5_PORT , LCD_D5_PIN , GET_BIT(u8_Data ,5));
    28d2:	89 ad       	ldd	r24, Y+57	; 0x39
    28d4:	82 95       	swap	r24
    28d6:	86 95       	lsr	r24
    28d8:	87 70       	andi	r24, 0x07	; 7
    28da:	98 2f       	mov	r25, r24
    28dc:	91 70       	andi	r25, 0x01	; 1
    28de:	81 e0       	ldi	r24, 0x01	; 1
    28e0:	61 e0       	ldi	r22, 0x01	; 1
    28e2:	49 2f       	mov	r20, r25
    28e4:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D4_PORT , LCD_D4_PIN , GET_BIT(u8_Data ,4));
    28e8:	89 ad       	ldd	r24, Y+57	; 0x39
    28ea:	82 95       	swap	r24
    28ec:	8f 70       	andi	r24, 0x0F	; 15
    28ee:	98 2f       	mov	r25, r24
    28f0:	91 70       	andi	r25, 0x01	; 1
    28f2:	81 e0       	ldi	r24, 0x01	; 1
    28f4:	60 e0       	ldi	r22, 0x00	; 0
    28f6:	49 2f       	mov	r20, r25
    28f8:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_RS_PORT , LCD_RS_PIN , High);
    28fc:	80 e0       	ldi	r24, 0x00	; 0
    28fe:	63 e0       	ldi	r22, 0x03	; 3
    2900:	41 e0       	ldi	r20, 0x01	; 1
    2902:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , High);
    2906:	80 e0       	ldi	r24, 0x00	; 0
    2908:	62 e0       	ldi	r22, 0x02	; 2
    290a:	41 e0       	ldi	r20, 0x01	; 1
    290c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	a0 e8       	ldi	r26, 0x80	; 128
    2916:	bf e3       	ldi	r27, 0x3F	; 63
    2918:	8d ab       	std	Y+53, r24	; 0x35
    291a:	9e ab       	std	Y+54, r25	; 0x36
    291c:	af ab       	std	Y+55, r26	; 0x37
    291e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2920:	6d a9       	ldd	r22, Y+53	; 0x35
    2922:	7e a9       	ldd	r23, Y+54	; 0x36
    2924:	8f a9       	ldd	r24, Y+55	; 0x37
    2926:	98 ad       	ldd	r25, Y+56	; 0x38
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	4a e7       	ldi	r20, 0x7A	; 122
    292e:	55 e4       	ldi	r21, 0x45	; 69
    2930:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	89 ab       	std	Y+49, r24	; 0x31
    293a:	9a ab       	std	Y+50, r25	; 0x32
    293c:	ab ab       	std	Y+51, r26	; 0x33
    293e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2940:	69 a9       	ldd	r22, Y+49	; 0x31
    2942:	7a a9       	ldd	r23, Y+50	; 0x32
    2944:	8b a9       	ldd	r24, Y+51	; 0x33
    2946:	9c a9       	ldd	r25, Y+52	; 0x34
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	30 e0       	ldi	r19, 0x00	; 0
    294c:	40 e8       	ldi	r20, 0x80	; 128
    294e:	5f e3       	ldi	r21, 0x3F	; 63
    2950:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2954:	88 23       	and	r24, r24
    2956:	2c f4       	brge	.+10     	; 0x2962 <HAL_LCD_Void_Send_Char+0xd2>
		__ticks = 1;
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	98 ab       	std	Y+48, r25	; 0x30
    295e:	8f a7       	std	Y+47, r24	; 0x2f
    2960:	3f c0       	rjmp	.+126    	; 0x29e0 <HAL_LCD_Void_Send_Char+0x150>
	else if (__tmp > 65535)
    2962:	69 a9       	ldd	r22, Y+49	; 0x31
    2964:	7a a9       	ldd	r23, Y+50	; 0x32
    2966:	8b a9       	ldd	r24, Y+51	; 0x33
    2968:	9c a9       	ldd	r25, Y+52	; 0x34
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	3f ef       	ldi	r19, 0xFF	; 255
    296e:	4f e7       	ldi	r20, 0x7F	; 127
    2970:	57 e4       	ldi	r21, 0x47	; 71
    2972:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2976:	18 16       	cp	r1, r24
    2978:	4c f5       	brge	.+82     	; 0x29cc <HAL_LCD_Void_Send_Char+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    297a:	6d a9       	ldd	r22, Y+53	; 0x35
    297c:	7e a9       	ldd	r23, Y+54	; 0x36
    297e:	8f a9       	ldd	r24, Y+55	; 0x37
    2980:	98 ad       	ldd	r25, Y+56	; 0x38
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e2       	ldi	r20, 0x20	; 32
    2988:	51 e4       	ldi	r21, 0x41	; 65
    298a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    298e:	dc 01       	movw	r26, r24
    2990:	cb 01       	movw	r24, r22
    2992:	bc 01       	movw	r22, r24
    2994:	cd 01       	movw	r24, r26
    2996:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    299a:	dc 01       	movw	r26, r24
    299c:	cb 01       	movw	r24, r22
    299e:	98 ab       	std	Y+48, r25	; 0x30
    29a0:	8f a7       	std	Y+47, r24	; 0x2f
    29a2:	0f c0       	rjmp	.+30     	; 0x29c2 <HAL_LCD_Void_Send_Char+0x132>
    29a4:	80 e9       	ldi	r24, 0x90	; 144
    29a6:	91 e0       	ldi	r25, 0x01	; 1
    29a8:	9e a7       	std	Y+46, r25	; 0x2e
    29aa:	8d a7       	std	Y+45, r24	; 0x2d
    29ac:	8d a5       	ldd	r24, Y+45	; 0x2d
    29ae:	9e a5       	ldd	r25, Y+46	; 0x2e
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <HAL_LCD_Void_Send_Char+0x120>
    29b4:	9e a7       	std	Y+46, r25	; 0x2e
    29b6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    29ba:	98 a9       	ldd	r25, Y+48	; 0x30
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	98 ab       	std	Y+48, r25	; 0x30
    29c0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    29c4:	98 a9       	ldd	r25, Y+48	; 0x30
    29c6:	00 97       	sbiw	r24, 0x00	; 0
    29c8:	69 f7       	brne	.-38     	; 0x29a4 <HAL_LCD_Void_Send_Char+0x114>
    29ca:	14 c0       	rjmp	.+40     	; 0x29f4 <HAL_LCD_Void_Send_Char+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29cc:	69 a9       	ldd	r22, Y+49	; 0x31
    29ce:	7a a9       	ldd	r23, Y+50	; 0x32
    29d0:	8b a9       	ldd	r24, Y+51	; 0x33
    29d2:	9c a9       	ldd	r25, Y+52	; 0x34
    29d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29d8:	dc 01       	movw	r26, r24
    29da:	cb 01       	movw	r24, r22
    29dc:	98 ab       	std	Y+48, r25	; 0x30
    29de:	8f a7       	std	Y+47, r24	; 0x2f
    29e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    29e2:	98 a9       	ldd	r25, Y+48	; 0x30
    29e4:	9c a7       	std	Y+44, r25	; 0x2c
    29e6:	8b a7       	std	Y+43, r24	; 0x2b
    29e8:	8b a5       	ldd	r24, Y+43	; 0x2b
    29ea:	9c a5       	ldd	r25, Y+44	; 0x2c
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <HAL_LCD_Void_Send_Char+0x15c>
    29f0:	9c a7       	std	Y+44, r25	; 0x2c
    29f2:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , Low);
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	62 e0       	ldi	r22, 0x02	; 2
    29f8:	40 e0       	ldi	r20, 0x00	; 0
    29fa:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    29fe:	80 e0       	ldi	r24, 0x00	; 0
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	a0 e4       	ldi	r26, 0x40	; 64
    2a04:	b0 e4       	ldi	r27, 0x40	; 64
    2a06:	8f a3       	std	Y+39, r24	; 0x27
    2a08:	98 a7       	std	Y+40, r25	; 0x28
    2a0a:	a9 a7       	std	Y+41, r26	; 0x29
    2a0c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a0e:	6f a1       	ldd	r22, Y+39	; 0x27
    2a10:	78 a5       	ldd	r23, Y+40	; 0x28
    2a12:	89 a5       	ldd	r24, Y+41	; 0x29
    2a14:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a16:	20 e0       	ldi	r18, 0x00	; 0
    2a18:	30 e0       	ldi	r19, 0x00	; 0
    2a1a:	4a e7       	ldi	r20, 0x7A	; 122
    2a1c:	55 e4       	ldi	r21, 0x45	; 69
    2a1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a22:	dc 01       	movw	r26, r24
    2a24:	cb 01       	movw	r24, r22
    2a26:	8b a3       	std	Y+35, r24	; 0x23
    2a28:	9c a3       	std	Y+36, r25	; 0x24
    2a2a:	ad a3       	std	Y+37, r26	; 0x25
    2a2c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a2e:	6b a1       	ldd	r22, Y+35	; 0x23
    2a30:	7c a1       	ldd	r23, Y+36	; 0x24
    2a32:	8d a1       	ldd	r24, Y+37	; 0x25
    2a34:	9e a1       	ldd	r25, Y+38	; 0x26
    2a36:	20 e0       	ldi	r18, 0x00	; 0
    2a38:	30 e0       	ldi	r19, 0x00	; 0
    2a3a:	40 e8       	ldi	r20, 0x80	; 128
    2a3c:	5f e3       	ldi	r21, 0x3F	; 63
    2a3e:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2a42:	88 23       	and	r24, r24
    2a44:	2c f4       	brge	.+10     	; 0x2a50 <HAL_LCD_Void_Send_Char+0x1c0>
		__ticks = 1;
    2a46:	81 e0       	ldi	r24, 0x01	; 1
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	9a a3       	std	Y+34, r25	; 0x22
    2a4c:	89 a3       	std	Y+33, r24	; 0x21
    2a4e:	3f c0       	rjmp	.+126    	; 0x2ace <HAL_LCD_Void_Send_Char+0x23e>
	else if (__tmp > 65535)
    2a50:	6b a1       	ldd	r22, Y+35	; 0x23
    2a52:	7c a1       	ldd	r23, Y+36	; 0x24
    2a54:	8d a1       	ldd	r24, Y+37	; 0x25
    2a56:	9e a1       	ldd	r25, Y+38	; 0x26
    2a58:	20 e0       	ldi	r18, 0x00	; 0
    2a5a:	3f ef       	ldi	r19, 0xFF	; 255
    2a5c:	4f e7       	ldi	r20, 0x7F	; 127
    2a5e:	57 e4       	ldi	r21, 0x47	; 71
    2a60:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2a64:	18 16       	cp	r1, r24
    2a66:	4c f5       	brge	.+82     	; 0x2aba <HAL_LCD_Void_Send_Char+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a68:	6f a1       	ldd	r22, Y+39	; 0x27
    2a6a:	78 a5       	ldd	r23, Y+40	; 0x28
    2a6c:	89 a5       	ldd	r24, Y+41	; 0x29
    2a6e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a70:	20 e0       	ldi	r18, 0x00	; 0
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	40 e2       	ldi	r20, 0x20	; 32
    2a76:	51 e4       	ldi	r21, 0x41	; 65
    2a78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a7c:	dc 01       	movw	r26, r24
    2a7e:	cb 01       	movw	r24, r22
    2a80:	bc 01       	movw	r22, r24
    2a82:	cd 01       	movw	r24, r26
    2a84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a88:	dc 01       	movw	r26, r24
    2a8a:	cb 01       	movw	r24, r22
    2a8c:	9a a3       	std	Y+34, r25	; 0x22
    2a8e:	89 a3       	std	Y+33, r24	; 0x21
    2a90:	0f c0       	rjmp	.+30     	; 0x2ab0 <HAL_LCD_Void_Send_Char+0x220>
    2a92:	80 e9       	ldi	r24, 0x90	; 144
    2a94:	91 e0       	ldi	r25, 0x01	; 1
    2a96:	98 a3       	std	Y+32, r25	; 0x20
    2a98:	8f 8f       	std	Y+31, r24	; 0x1f
    2a9a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2a9c:	98 a1       	ldd	r25, Y+32	; 0x20
    2a9e:	01 97       	sbiw	r24, 0x01	; 1
    2aa0:	f1 f7       	brne	.-4      	; 0x2a9e <HAL_LCD_Void_Send_Char+0x20e>
    2aa2:	98 a3       	std	Y+32, r25	; 0x20
    2aa4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2aa6:	89 a1       	ldd	r24, Y+33	; 0x21
    2aa8:	9a a1       	ldd	r25, Y+34	; 0x22
    2aaa:	01 97       	sbiw	r24, 0x01	; 1
    2aac:	9a a3       	std	Y+34, r25	; 0x22
    2aae:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ab0:	89 a1       	ldd	r24, Y+33	; 0x21
    2ab2:	9a a1       	ldd	r25, Y+34	; 0x22
    2ab4:	00 97       	sbiw	r24, 0x00	; 0
    2ab6:	69 f7       	brne	.-38     	; 0x2a92 <HAL_LCD_Void_Send_Char+0x202>
    2ab8:	14 c0       	rjmp	.+40     	; 0x2ae2 <HAL_LCD_Void_Send_Char+0x252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2aba:	6b a1       	ldd	r22, Y+35	; 0x23
    2abc:	7c a1       	ldd	r23, Y+36	; 0x24
    2abe:	8d a1       	ldd	r24, Y+37	; 0x25
    2ac0:	9e a1       	ldd	r25, Y+38	; 0x26
    2ac2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ac6:	dc 01       	movw	r26, r24
    2ac8:	cb 01       	movw	r24, r22
    2aca:	9a a3       	std	Y+34, r25	; 0x22
    2acc:	89 a3       	std	Y+33, r24	; 0x21
    2ace:	89 a1       	ldd	r24, Y+33	; 0x21
    2ad0:	9a a1       	ldd	r25, Y+34	; 0x22
    2ad2:	9e 8f       	std	Y+30, r25	; 0x1e
    2ad4:	8d 8f       	std	Y+29, r24	; 0x1d
    2ad6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ad8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2ada:	01 97       	sbiw	r24, 0x01	; 1
    2adc:	f1 f7       	brne	.-4      	; 0x2ada <HAL_LCD_Void_Send_Char+0x24a>
    2ade:	9e 8f       	std	Y+30, r25	; 0x1e
    2ae0:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(3);
	
	MCAL_DIO_u8_Set_Pin_Value(LCD_D7_PORT , LCD_D7_PIN , GET_BIT(u8_Data ,3));
    2ae2:	89 ad       	ldd	r24, Y+57	; 0x39
    2ae4:	86 95       	lsr	r24
    2ae6:	86 95       	lsr	r24
    2ae8:	86 95       	lsr	r24
    2aea:	98 2f       	mov	r25, r24
    2aec:	91 70       	andi	r25, 0x01	; 1
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	64 e0       	ldi	r22, 0x04	; 4
    2af2:	49 2f       	mov	r20, r25
    2af4:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D6_PORT , LCD_D6_PIN , GET_BIT(u8_Data ,2));
    2af8:	89 ad       	ldd	r24, Y+57	; 0x39
    2afa:	86 95       	lsr	r24
    2afc:	86 95       	lsr	r24
    2afe:	98 2f       	mov	r25, r24
    2b00:	91 70       	andi	r25, 0x01	; 1
    2b02:	81 e0       	ldi	r24, 0x01	; 1
    2b04:	62 e0       	ldi	r22, 0x02	; 2
    2b06:	49 2f       	mov	r20, r25
    2b08:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D5_PORT , LCD_D5_PIN , GET_BIT(u8_Data ,1));
    2b0c:	89 ad       	ldd	r24, Y+57	; 0x39
    2b0e:	86 95       	lsr	r24
    2b10:	98 2f       	mov	r25, r24
    2b12:	91 70       	andi	r25, 0x01	; 1
    2b14:	81 e0       	ldi	r24, 0x01	; 1
    2b16:	61 e0       	ldi	r22, 0x01	; 1
    2b18:	49 2f       	mov	r20, r25
    2b1a:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_D4_PORT , LCD_D4_PIN , GET_BIT(u8_Data ,0));
    2b1e:	89 ad       	ldd	r24, Y+57	; 0x39
    2b20:	98 2f       	mov	r25, r24
    2b22:	91 70       	andi	r25, 0x01	; 1
    2b24:	81 e0       	ldi	r24, 0x01	; 1
    2b26:	60 e0       	ldi	r22, 0x00	; 0
    2b28:	49 2f       	mov	r20, r25
    2b2a:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_RS_PORT , LCD_RS_PIN , High);
    2b2e:	80 e0       	ldi	r24, 0x00	; 0
    2b30:	63 e0       	ldi	r22, 0x03	; 3
    2b32:	41 e0       	ldi	r20, 0x01	; 1
    2b34:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , High);
    2b38:	80 e0       	ldi	r24, 0x00	; 0
    2b3a:	62 e0       	ldi	r22, 0x02	; 2
    2b3c:	41 e0       	ldi	r20, 0x01	; 1
    2b3e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    2b42:	80 e0       	ldi	r24, 0x00	; 0
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	a0 e8       	ldi	r26, 0x80	; 128
    2b48:	bf e3       	ldi	r27, 0x3F	; 63
    2b4a:	89 8f       	std	Y+25, r24	; 0x19
    2b4c:	9a 8f       	std	Y+26, r25	; 0x1a
    2b4e:	ab 8f       	std	Y+27, r26	; 0x1b
    2b50:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b52:	69 8d       	ldd	r22, Y+25	; 0x19
    2b54:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b56:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b58:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	4a e7       	ldi	r20, 0x7A	; 122
    2b60:	55 e4       	ldi	r21, 0x45	; 69
    2b62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b66:	dc 01       	movw	r26, r24
    2b68:	cb 01       	movw	r24, r22
    2b6a:	8d 8b       	std	Y+21, r24	; 0x15
    2b6c:	9e 8b       	std	Y+22, r25	; 0x16
    2b6e:	af 8b       	std	Y+23, r26	; 0x17
    2b70:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b72:	6d 89       	ldd	r22, Y+21	; 0x15
    2b74:	7e 89       	ldd	r23, Y+22	; 0x16
    2b76:	8f 89       	ldd	r24, Y+23	; 0x17
    2b78:	98 8d       	ldd	r25, Y+24	; 0x18
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	40 e8       	ldi	r20, 0x80	; 128
    2b80:	5f e3       	ldi	r21, 0x3F	; 63
    2b82:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2b86:	88 23       	and	r24, r24
    2b88:	2c f4       	brge	.+10     	; 0x2b94 <HAL_LCD_Void_Send_Char+0x304>
		__ticks = 1;
    2b8a:	81 e0       	ldi	r24, 0x01	; 1
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	9c 8b       	std	Y+20, r25	; 0x14
    2b90:	8b 8b       	std	Y+19, r24	; 0x13
    2b92:	3f c0       	rjmp	.+126    	; 0x2c12 <HAL_LCD_Void_Send_Char+0x382>
	else if (__tmp > 65535)
    2b94:	6d 89       	ldd	r22, Y+21	; 0x15
    2b96:	7e 89       	ldd	r23, Y+22	; 0x16
    2b98:	8f 89       	ldd	r24, Y+23	; 0x17
    2b9a:	98 8d       	ldd	r25, Y+24	; 0x18
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	3f ef       	ldi	r19, 0xFF	; 255
    2ba0:	4f e7       	ldi	r20, 0x7F	; 127
    2ba2:	57 e4       	ldi	r21, 0x47	; 71
    2ba4:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2ba8:	18 16       	cp	r1, r24
    2baa:	4c f5       	brge	.+82     	; 0x2bfe <HAL_LCD_Void_Send_Char+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bac:	69 8d       	ldd	r22, Y+25	; 0x19
    2bae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2bb0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bb2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bb4:	20 e0       	ldi	r18, 0x00	; 0
    2bb6:	30 e0       	ldi	r19, 0x00	; 0
    2bb8:	40 e2       	ldi	r20, 0x20	; 32
    2bba:	51 e4       	ldi	r21, 0x41	; 65
    2bbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bc0:	dc 01       	movw	r26, r24
    2bc2:	cb 01       	movw	r24, r22
    2bc4:	bc 01       	movw	r22, r24
    2bc6:	cd 01       	movw	r24, r26
    2bc8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bcc:	dc 01       	movw	r26, r24
    2bce:	cb 01       	movw	r24, r22
    2bd0:	9c 8b       	std	Y+20, r25	; 0x14
    2bd2:	8b 8b       	std	Y+19, r24	; 0x13
    2bd4:	0f c0       	rjmp	.+30     	; 0x2bf4 <HAL_LCD_Void_Send_Char+0x364>
    2bd6:	80 e9       	ldi	r24, 0x90	; 144
    2bd8:	91 e0       	ldi	r25, 0x01	; 1
    2bda:	9a 8b       	std	Y+18, r25	; 0x12
    2bdc:	89 8b       	std	Y+17, r24	; 0x11
    2bde:	89 89       	ldd	r24, Y+17	; 0x11
    2be0:	9a 89       	ldd	r25, Y+18	; 0x12
    2be2:	01 97       	sbiw	r24, 0x01	; 1
    2be4:	f1 f7       	brne	.-4      	; 0x2be2 <HAL_LCD_Void_Send_Char+0x352>
    2be6:	9a 8b       	std	Y+18, r25	; 0x12
    2be8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bea:	8b 89       	ldd	r24, Y+19	; 0x13
    2bec:	9c 89       	ldd	r25, Y+20	; 0x14
    2bee:	01 97       	sbiw	r24, 0x01	; 1
    2bf0:	9c 8b       	std	Y+20, r25	; 0x14
    2bf2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bf4:	8b 89       	ldd	r24, Y+19	; 0x13
    2bf6:	9c 89       	ldd	r25, Y+20	; 0x14
    2bf8:	00 97       	sbiw	r24, 0x00	; 0
    2bfa:	69 f7       	brne	.-38     	; 0x2bd6 <HAL_LCD_Void_Send_Char+0x346>
    2bfc:	14 c0       	rjmp	.+40     	; 0x2c26 <HAL_LCD_Void_Send_Char+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bfe:	6d 89       	ldd	r22, Y+21	; 0x15
    2c00:	7e 89       	ldd	r23, Y+22	; 0x16
    2c02:	8f 89       	ldd	r24, Y+23	; 0x17
    2c04:	98 8d       	ldd	r25, Y+24	; 0x18
    2c06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c0a:	dc 01       	movw	r26, r24
    2c0c:	cb 01       	movw	r24, r22
    2c0e:	9c 8b       	std	Y+20, r25	; 0x14
    2c10:	8b 8b       	std	Y+19, r24	; 0x13
    2c12:	8b 89       	ldd	r24, Y+19	; 0x13
    2c14:	9c 89       	ldd	r25, Y+20	; 0x14
    2c16:	98 8b       	std	Y+16, r25	; 0x10
    2c18:	8f 87       	std	Y+15, r24	; 0x0f
    2c1a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c1c:	98 89       	ldd	r25, Y+16	; 0x10
    2c1e:	01 97       	sbiw	r24, 0x01	; 1
    2c20:	f1 f7       	brne	.-4      	; 0x2c1e <HAL_LCD_Void_Send_Char+0x38e>
    2c22:	98 8b       	std	Y+16, r25	; 0x10
    2c24:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MCAL_DIO_u8_Set_Pin_Value(LCD_EN_PORT , LCD_EN_PIN , Low);
    2c26:	80 e0       	ldi	r24, 0x00	; 0
    2c28:	62 e0       	ldi	r22, 0x02	; 2
    2c2a:	40 e0       	ldi	r20, 0x00	; 0
    2c2c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
    2c30:	80 e0       	ldi	r24, 0x00	; 0
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	a0 e4       	ldi	r26, 0x40	; 64
    2c36:	b0 e4       	ldi	r27, 0x40	; 64
    2c38:	8b 87       	std	Y+11, r24	; 0x0b
    2c3a:	9c 87       	std	Y+12, r25	; 0x0c
    2c3c:	ad 87       	std	Y+13, r26	; 0x0d
    2c3e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c40:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c42:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c44:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c46:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	30 e0       	ldi	r19, 0x00	; 0
    2c4c:	4a e7       	ldi	r20, 0x7A	; 122
    2c4e:	55 e4       	ldi	r21, 0x45	; 69
    2c50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c54:	dc 01       	movw	r26, r24
    2c56:	cb 01       	movw	r24, r22
    2c58:	8f 83       	std	Y+7, r24	; 0x07
    2c5a:	98 87       	std	Y+8, r25	; 0x08
    2c5c:	a9 87       	std	Y+9, r26	; 0x09
    2c5e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c60:	6f 81       	ldd	r22, Y+7	; 0x07
    2c62:	78 85       	ldd	r23, Y+8	; 0x08
    2c64:	89 85       	ldd	r24, Y+9	; 0x09
    2c66:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c68:	20 e0       	ldi	r18, 0x00	; 0
    2c6a:	30 e0       	ldi	r19, 0x00	; 0
    2c6c:	40 e8       	ldi	r20, 0x80	; 128
    2c6e:	5f e3       	ldi	r21, 0x3F	; 63
    2c70:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2c74:	88 23       	and	r24, r24
    2c76:	2c f4       	brge	.+10     	; 0x2c82 <HAL_LCD_Void_Send_Char+0x3f2>
		__ticks = 1;
    2c78:	81 e0       	ldi	r24, 0x01	; 1
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	9e 83       	std	Y+6, r25	; 0x06
    2c7e:	8d 83       	std	Y+5, r24	; 0x05
    2c80:	3f c0       	rjmp	.+126    	; 0x2d00 <HAL_LCD_Void_Send_Char+0x470>
	else if (__tmp > 65535)
    2c82:	6f 81       	ldd	r22, Y+7	; 0x07
    2c84:	78 85       	ldd	r23, Y+8	; 0x08
    2c86:	89 85       	ldd	r24, Y+9	; 0x09
    2c88:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c8a:	20 e0       	ldi	r18, 0x00	; 0
    2c8c:	3f ef       	ldi	r19, 0xFF	; 255
    2c8e:	4f e7       	ldi	r20, 0x7F	; 127
    2c90:	57 e4       	ldi	r21, 0x47	; 71
    2c92:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2c96:	18 16       	cp	r1, r24
    2c98:	4c f5       	brge	.+82     	; 0x2cec <HAL_LCD_Void_Send_Char+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ca0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	40 e2       	ldi	r20, 0x20	; 32
    2ca8:	51 e4       	ldi	r21, 0x41	; 65
    2caa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cae:	dc 01       	movw	r26, r24
    2cb0:	cb 01       	movw	r24, r22
    2cb2:	bc 01       	movw	r22, r24
    2cb4:	cd 01       	movw	r24, r26
    2cb6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cba:	dc 01       	movw	r26, r24
    2cbc:	cb 01       	movw	r24, r22
    2cbe:	9e 83       	std	Y+6, r25	; 0x06
    2cc0:	8d 83       	std	Y+5, r24	; 0x05
    2cc2:	0f c0       	rjmp	.+30     	; 0x2ce2 <HAL_LCD_Void_Send_Char+0x452>
    2cc4:	80 e9       	ldi	r24, 0x90	; 144
    2cc6:	91 e0       	ldi	r25, 0x01	; 1
    2cc8:	9c 83       	std	Y+4, r25	; 0x04
    2cca:	8b 83       	std	Y+3, r24	; 0x03
    2ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    2cce:	9c 81       	ldd	r25, Y+4	; 0x04
    2cd0:	01 97       	sbiw	r24, 0x01	; 1
    2cd2:	f1 f7       	brne	.-4      	; 0x2cd0 <HAL_LCD_Void_Send_Char+0x440>
    2cd4:	9c 83       	std	Y+4, r25	; 0x04
    2cd6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cd8:	8d 81       	ldd	r24, Y+5	; 0x05
    2cda:	9e 81       	ldd	r25, Y+6	; 0x06
    2cdc:	01 97       	sbiw	r24, 0x01	; 1
    2cde:	9e 83       	std	Y+6, r25	; 0x06
    2ce0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ce2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ce4:	9e 81       	ldd	r25, Y+6	; 0x06
    2ce6:	00 97       	sbiw	r24, 0x00	; 0
    2ce8:	69 f7       	brne	.-38     	; 0x2cc4 <HAL_LCD_Void_Send_Char+0x434>
    2cea:	14 c0       	rjmp	.+40     	; 0x2d14 <HAL_LCD_Void_Send_Char+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cec:	6f 81       	ldd	r22, Y+7	; 0x07
    2cee:	78 85       	ldd	r23, Y+8	; 0x08
    2cf0:	89 85       	ldd	r24, Y+9	; 0x09
    2cf2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cf4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cf8:	dc 01       	movw	r26, r24
    2cfa:	cb 01       	movw	r24, r22
    2cfc:	9e 83       	std	Y+6, r25	; 0x06
    2cfe:	8d 83       	std	Y+5, r24	; 0x05
    2d00:	8d 81       	ldd	r24, Y+5	; 0x05
    2d02:	9e 81       	ldd	r25, Y+6	; 0x06
    2d04:	9a 83       	std	Y+2, r25	; 0x02
    2d06:	89 83       	std	Y+1, r24	; 0x01
    2d08:	89 81       	ldd	r24, Y+1	; 0x01
    2d0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d0c:	01 97       	sbiw	r24, 0x01	; 1
    2d0e:	f1 f7       	brne	.-4      	; 0x2d0c <HAL_LCD_Void_Send_Char+0x47c>
    2d10:	9a 83       	std	Y+2, r25	; 0x02
    2d12:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(3);	
	
}
    2d14:	e9 96       	adiw	r28, 0x39	; 57
    2d16:	0f b6       	in	r0, 0x3f	; 63
    2d18:	f8 94       	cli
    2d1a:	de bf       	out	0x3e, r29	; 62
    2d1c:	0f be       	out	0x3f, r0	; 63
    2d1e:	cd bf       	out	0x3d, r28	; 61
    2d20:	cf 91       	pop	r28
    2d22:	df 91       	pop	r29
    2d24:	08 95       	ret

00002d26 <HAL_LCD_Void_Send_String>:

void HAL_LCD_Void_Send_String(u8_t* u8_Data){
    2d26:	df 93       	push	r29
    2d28:	cf 93       	push	r28
    2d2a:	cd b7       	in	r28, 0x3d	; 61
    2d2c:	de b7       	in	r29, 0x3e	; 62
    2d2e:	62 97       	sbiw	r28, 0x12	; 18
    2d30:	0f b6       	in	r0, 0x3f	; 63
    2d32:	f8 94       	cli
    2d34:	de bf       	out	0x3e, r29	; 62
    2d36:	0f be       	out	0x3f, r0	; 63
    2d38:	cd bf       	out	0x3d, r28	; 61
    2d3a:	9a 8b       	std	Y+18, r25	; 0x12
    2d3c:	89 8b       	std	Y+17, r24	; 0x11
	for (int i = 0; u8_Data[i] != 0; i++)
    2d3e:	18 8a       	std	Y+16, r1	; 0x10
    2d40:	1f 86       	std	Y+15, r1	; 0x0f
    2d42:	81 c0       	rjmp	.+258    	; 0x2e46 <HAL_LCD_Void_Send_String+0x120>
	{
		HAL_LCD_Void_Send_Char(u8_Data[i]);
    2d44:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d46:	38 89       	ldd	r19, Y+16	; 0x10
    2d48:	89 89       	ldd	r24, Y+17	; 0x11
    2d4a:	9a 89       	ldd	r25, Y+18	; 0x12
    2d4c:	fc 01       	movw	r30, r24
    2d4e:	e2 0f       	add	r30, r18
    2d50:	f3 1f       	adc	r31, r19
    2d52:	80 81       	ld	r24, Z
    2d54:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    2d58:	80 e0       	ldi	r24, 0x00	; 0
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	aa e7       	ldi	r26, 0x7A	; 122
    2d5e:	b3 e4       	ldi	r27, 0x43	; 67
    2d60:	8b 87       	std	Y+11, r24	; 0x0b
    2d62:	9c 87       	std	Y+12, r25	; 0x0c
    2d64:	ad 87       	std	Y+13, r26	; 0x0d
    2d66:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d68:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d6a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d6c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d6e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d70:	20 e0       	ldi	r18, 0x00	; 0
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	4a e7       	ldi	r20, 0x7A	; 122
    2d76:	55 e4       	ldi	r21, 0x45	; 69
    2d78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d7c:	dc 01       	movw	r26, r24
    2d7e:	cb 01       	movw	r24, r22
    2d80:	8f 83       	std	Y+7, r24	; 0x07
    2d82:	98 87       	std	Y+8, r25	; 0x08
    2d84:	a9 87       	std	Y+9, r26	; 0x09
    2d86:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2d88:	6f 81       	ldd	r22, Y+7	; 0x07
    2d8a:	78 85       	ldd	r23, Y+8	; 0x08
    2d8c:	89 85       	ldd	r24, Y+9	; 0x09
    2d8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	40 e8       	ldi	r20, 0x80	; 128
    2d96:	5f e3       	ldi	r21, 0x3F	; 63
    2d98:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2d9c:	88 23       	and	r24, r24
    2d9e:	2c f4       	brge	.+10     	; 0x2daa <HAL_LCD_Void_Send_String+0x84>
		__ticks = 1;
    2da0:	81 e0       	ldi	r24, 0x01	; 1
    2da2:	90 e0       	ldi	r25, 0x00	; 0
    2da4:	9e 83       	std	Y+6, r25	; 0x06
    2da6:	8d 83       	std	Y+5, r24	; 0x05
    2da8:	3f c0       	rjmp	.+126    	; 0x2e28 <HAL_LCD_Void_Send_String+0x102>
	else if (__tmp > 65535)
    2daa:	6f 81       	ldd	r22, Y+7	; 0x07
    2dac:	78 85       	ldd	r23, Y+8	; 0x08
    2dae:	89 85       	ldd	r24, Y+9	; 0x09
    2db0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2db2:	20 e0       	ldi	r18, 0x00	; 0
    2db4:	3f ef       	ldi	r19, 0xFF	; 255
    2db6:	4f e7       	ldi	r20, 0x7F	; 127
    2db8:	57 e4       	ldi	r21, 0x47	; 71
    2dba:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2dbe:	18 16       	cp	r1, r24
    2dc0:	4c f5       	brge	.+82     	; 0x2e14 <HAL_LCD_Void_Send_String+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dc2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2dc4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2dc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dc8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	30 e0       	ldi	r19, 0x00	; 0
    2dce:	40 e2       	ldi	r20, 0x20	; 32
    2dd0:	51 e4       	ldi	r21, 0x41	; 65
    2dd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dd6:	dc 01       	movw	r26, r24
    2dd8:	cb 01       	movw	r24, r22
    2dda:	bc 01       	movw	r22, r24
    2ddc:	cd 01       	movw	r24, r26
    2dde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2de2:	dc 01       	movw	r26, r24
    2de4:	cb 01       	movw	r24, r22
    2de6:	9e 83       	std	Y+6, r25	; 0x06
    2de8:	8d 83       	std	Y+5, r24	; 0x05
    2dea:	0f c0       	rjmp	.+30     	; 0x2e0a <HAL_LCD_Void_Send_String+0xe4>
    2dec:	80 e9       	ldi	r24, 0x90	; 144
    2dee:	91 e0       	ldi	r25, 0x01	; 1
    2df0:	9c 83       	std	Y+4, r25	; 0x04
    2df2:	8b 83       	std	Y+3, r24	; 0x03
    2df4:	8b 81       	ldd	r24, Y+3	; 0x03
    2df6:	9c 81       	ldd	r25, Y+4	; 0x04
    2df8:	01 97       	sbiw	r24, 0x01	; 1
    2dfa:	f1 f7       	brne	.-4      	; 0x2df8 <HAL_LCD_Void_Send_String+0xd2>
    2dfc:	9c 83       	std	Y+4, r25	; 0x04
    2dfe:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e00:	8d 81       	ldd	r24, Y+5	; 0x05
    2e02:	9e 81       	ldd	r25, Y+6	; 0x06
    2e04:	01 97       	sbiw	r24, 0x01	; 1
    2e06:	9e 83       	std	Y+6, r25	; 0x06
    2e08:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e0a:	8d 81       	ldd	r24, Y+5	; 0x05
    2e0c:	9e 81       	ldd	r25, Y+6	; 0x06
    2e0e:	00 97       	sbiw	r24, 0x00	; 0
    2e10:	69 f7       	brne	.-38     	; 0x2dec <HAL_LCD_Void_Send_String+0xc6>
    2e12:	14 c0       	rjmp	.+40     	; 0x2e3c <HAL_LCD_Void_Send_String+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e14:	6f 81       	ldd	r22, Y+7	; 0x07
    2e16:	78 85       	ldd	r23, Y+8	; 0x08
    2e18:	89 85       	ldd	r24, Y+9	; 0x09
    2e1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e20:	dc 01       	movw	r26, r24
    2e22:	cb 01       	movw	r24, r22
    2e24:	9e 83       	std	Y+6, r25	; 0x06
    2e26:	8d 83       	std	Y+5, r24	; 0x05
    2e28:	8d 81       	ldd	r24, Y+5	; 0x05
    2e2a:	9e 81       	ldd	r25, Y+6	; 0x06
    2e2c:	9a 83       	std	Y+2, r25	; 0x02
    2e2e:	89 83       	std	Y+1, r24	; 0x01
    2e30:	89 81       	ldd	r24, Y+1	; 0x01
    2e32:	9a 81       	ldd	r25, Y+2	; 0x02
    2e34:	01 97       	sbiw	r24, 0x01	; 1
    2e36:	f1 f7       	brne	.-4      	; 0x2e34 <HAL_LCD_Void_Send_String+0x10e>
    2e38:	9a 83       	std	Y+2, r25	; 0x02
    2e3a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(3);	
	
}

void HAL_LCD_Void_Send_String(u8_t* u8_Data){
	for (int i = 0; u8_Data[i] != 0; i++)
    2e3c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2e3e:	98 89       	ldd	r25, Y+16	; 0x10
    2e40:	01 96       	adiw	r24, 0x01	; 1
    2e42:	98 8b       	std	Y+16, r25	; 0x10
    2e44:	8f 87       	std	Y+15, r24	; 0x0f
    2e46:	2f 85       	ldd	r18, Y+15	; 0x0f
    2e48:	38 89       	ldd	r19, Y+16	; 0x10
    2e4a:	89 89       	ldd	r24, Y+17	; 0x11
    2e4c:	9a 89       	ldd	r25, Y+18	; 0x12
    2e4e:	fc 01       	movw	r30, r24
    2e50:	e2 0f       	add	r30, r18
    2e52:	f3 1f       	adc	r31, r19
    2e54:	80 81       	ld	r24, Z
    2e56:	88 23       	and	r24, r24
    2e58:	09 f0       	breq	.+2      	; 0x2e5c <HAL_LCD_Void_Send_String+0x136>
    2e5a:	74 cf       	rjmp	.-280    	; 0x2d44 <HAL_LCD_Void_Send_String+0x1e>
	{
		HAL_LCD_Void_Send_Char(u8_Data[i]);
		_delay_ms(250);
	}
}
    2e5c:	62 96       	adiw	r28, 0x12	; 18
    2e5e:	0f b6       	in	r0, 0x3f	; 63
    2e60:	f8 94       	cli
    2e62:	de bf       	out	0x3e, r29	; 62
    2e64:	0f be       	out	0x3f, r0	; 63
    2e66:	cd bf       	out	0x3d, r28	; 61
    2e68:	cf 91       	pop	r28
    2e6a:	df 91       	pop	r29
    2e6c:	08 95       	ret

00002e6e <HAL_LCD_Void_Send_Integer>:

void HAL_LCD_Void_Send_Integer(s32_t s32_Data){
    2e6e:	df 93       	push	r29
    2e70:	cf 93       	push	r28
    2e72:	cd b7       	in	r28, 0x3d	; 61
    2e74:	de b7       	in	r29, 0x3e	; 62
    2e76:	a6 97       	sbiw	r28, 0x26	; 38
    2e78:	0f b6       	in	r0, 0x3f	; 63
    2e7a:	f8 94       	cli
    2e7c:	de bf       	out	0x3e, r29	; 62
    2e7e:	0f be       	out	0x3f, r0	; 63
    2e80:	cd bf       	out	0x3d, r28	; 61
    2e82:	6b a3       	std	Y+35, r22	; 0x23
    2e84:	7c a3       	std	Y+36, r23	; 0x24
    2e86:	8d a3       	std	Y+37, r24	; 0x25
    2e88:	9e a3       	std	Y+38, r25	; 0x26
	u8_t u8_Local_Array[16] ,  u8_Local_Reminder = 0 ,  u8_Local_Temporary = 0;
    2e8a:	1a 8a       	std	Y+18, r1	; 0x12
    2e8c:	19 8a       	std	Y+17, r1	; 0x11
	if(s32_Data == 0){HAL_LCD_Void_Send_Char('0'); return;}
    2e8e:	8b a1       	ldd	r24, Y+35	; 0x23
    2e90:	9c a1       	ldd	r25, Y+36	; 0x24
    2e92:	ad a1       	ldd	r26, Y+37	; 0x25
    2e94:	be a1       	ldd	r27, Y+38	; 0x26
    2e96:	00 97       	sbiw	r24, 0x00	; 0
    2e98:	a1 05       	cpc	r26, r1
    2e9a:	b1 05       	cpc	r27, r1
    2e9c:	21 f4       	brne	.+8      	; 0x2ea6 <HAL_LCD_Void_Send_Integer+0x38>
    2e9e:	80 e3       	ldi	r24, 0x30	; 48
    2ea0:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    2ea4:	e0 c0       	rjmp	.+448    	; 0x3066 <HAL_LCD_Void_Send_Integer+0x1f8>
	if(s32_Data < 0){
    2ea6:	8b a1       	ldd	r24, Y+35	; 0x23
    2ea8:	9c a1       	ldd	r25, Y+36	; 0x24
    2eaa:	ad a1       	ldd	r26, Y+37	; 0x25
    2eac:	be a1       	ldd	r27, Y+38	; 0x26
    2eae:	bb 23       	and	r27, r27
    2eb0:	0c f0       	brlt	.+2      	; 0x2eb4 <HAL_LCD_Void_Send_Integer+0x46>
    2eb2:	44 c0       	rjmp	.+136    	; 0x2f3c <HAL_LCD_Void_Send_Integer+0xce>
		s32_Data = s32_Data * -1;
    2eb4:	8b a1       	ldd	r24, Y+35	; 0x23
    2eb6:	9c a1       	ldd	r25, Y+36	; 0x24
    2eb8:	ad a1       	ldd	r26, Y+37	; 0x25
    2eba:	be a1       	ldd	r27, Y+38	; 0x26
    2ebc:	b0 95       	com	r27
    2ebe:	a0 95       	com	r26
    2ec0:	90 95       	com	r25
    2ec2:	81 95       	neg	r24
    2ec4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec6:	af 4f       	sbci	r26, 0xFF	; 255
    2ec8:	bf 4f       	sbci	r27, 0xFF	; 255
    2eca:	8b a3       	std	Y+35, r24	; 0x23
    2ecc:	9c a3       	std	Y+36, r25	; 0x24
    2ece:	ad a3       	std	Y+37, r26	; 0x25
    2ed0:	be a3       	std	Y+38, r27	; 0x26
		HAL_LCD_Void_Send_Char('-');
    2ed2:	8d e2       	ldi	r24, 0x2D	; 45
    2ed4:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    2ed8:	31 c0       	rjmp	.+98     	; 0x2f3c <HAL_LCD_Void_Send_Integer+0xce>
	}
	while(s32_Data){
		u8_Local_Reminder = s32_Data % 10;
    2eda:	8b a1       	ldd	r24, Y+35	; 0x23
    2edc:	9c a1       	ldd	r25, Y+36	; 0x24
    2ede:	ad a1       	ldd	r26, Y+37	; 0x25
    2ee0:	be a1       	ldd	r27, Y+38	; 0x26
    2ee2:	2a e0       	ldi	r18, 0x0A	; 10
    2ee4:	30 e0       	ldi	r19, 0x00	; 0
    2ee6:	40 e0       	ldi	r20, 0x00	; 0
    2ee8:	50 e0       	ldi	r21, 0x00	; 0
    2eea:	bc 01       	movw	r22, r24
    2eec:	cd 01       	movw	r24, r26
    2eee:	0e 94 24 1d 	call	0x3a48	; 0x3a48 <__divmodsi4>
    2ef2:	dc 01       	movw	r26, r24
    2ef4:	cb 01       	movw	r24, r22
    2ef6:	8a 8b       	std	Y+18, r24	; 0x12
		u8_Local_Reminder = u8_Local_Reminder + '0';
    2ef8:	8a 89       	ldd	r24, Y+18	; 0x12
    2efa:	80 5d       	subi	r24, 0xD0	; 208
    2efc:	8a 8b       	std	Y+18, r24	; 0x12
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
    2efe:	89 89       	ldd	r24, Y+17	; 0x11
    2f00:	28 2f       	mov	r18, r24
    2f02:	30 e0       	ldi	r19, 0x00	; 0
    2f04:	ce 01       	movw	r24, r28
    2f06:	43 96       	adiw	r24, 0x13	; 19
    2f08:	fc 01       	movw	r30, r24
    2f0a:	e2 0f       	add	r30, r18
    2f0c:	f3 1f       	adc	r31, r19
    2f0e:	8a 89       	ldd	r24, Y+18	; 0x12
    2f10:	80 83       	st	Z, r24
		u8_Local_Temporary++;
    2f12:	89 89       	ldd	r24, Y+17	; 0x11
    2f14:	8f 5f       	subi	r24, 0xFF	; 255
    2f16:	89 8b       	std	Y+17, r24	; 0x11
		s32_Data = s32_Data /10;
    2f18:	8b a1       	ldd	r24, Y+35	; 0x23
    2f1a:	9c a1       	ldd	r25, Y+36	; 0x24
    2f1c:	ad a1       	ldd	r26, Y+37	; 0x25
    2f1e:	be a1       	ldd	r27, Y+38	; 0x26
    2f20:	2a e0       	ldi	r18, 0x0A	; 10
    2f22:	30 e0       	ldi	r19, 0x00	; 0
    2f24:	40 e0       	ldi	r20, 0x00	; 0
    2f26:	50 e0       	ldi	r21, 0x00	; 0
    2f28:	bc 01       	movw	r22, r24
    2f2a:	cd 01       	movw	r24, r26
    2f2c:	0e 94 24 1d 	call	0x3a48	; 0x3a48 <__divmodsi4>
    2f30:	da 01       	movw	r26, r20
    2f32:	c9 01       	movw	r24, r18
    2f34:	8b a3       	std	Y+35, r24	; 0x23
    2f36:	9c a3       	std	Y+36, r25	; 0x24
    2f38:	ad a3       	std	Y+37, r26	; 0x25
    2f3a:	be a3       	std	Y+38, r27	; 0x26
	if(s32_Data == 0){HAL_LCD_Void_Send_Char('0'); return;}
	if(s32_Data < 0){
		s32_Data = s32_Data * -1;
		HAL_LCD_Void_Send_Char('-');
	}
	while(s32_Data){
    2f3c:	8b a1       	ldd	r24, Y+35	; 0x23
    2f3e:	9c a1       	ldd	r25, Y+36	; 0x24
    2f40:	ad a1       	ldd	r26, Y+37	; 0x25
    2f42:	be a1       	ldd	r27, Y+38	; 0x26
    2f44:	00 97       	sbiw	r24, 0x00	; 0
    2f46:	a1 05       	cpc	r26, r1
    2f48:	b1 05       	cpc	r27, r1
    2f4a:	39 f6       	brne	.-114    	; 0x2eda <HAL_LCD_Void_Send_Integer+0x6c>
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
		u8_Local_Temporary++;
		s32_Data = s32_Data /10;
		
	}	
	for (int i = u8_Local_Temporary-1; i >= 0; i--)
    2f4c:	89 89       	ldd	r24, Y+17	; 0x11
    2f4e:	88 2f       	mov	r24, r24
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	98 8b       	std	Y+16, r25	; 0x10
    2f56:	8f 87       	std	Y+15, r24	; 0x0f
    2f58:	81 c0       	rjmp	.+258    	; 0x305c <HAL_LCD_Void_Send_Integer+0x1ee>
	{
		HAL_LCD_Void_Send_Char(u8_Local_Array[i]);
    2f5a:	2f 85       	ldd	r18, Y+15	; 0x0f
    2f5c:	38 89       	ldd	r19, Y+16	; 0x10
    2f5e:	ce 01       	movw	r24, r28
    2f60:	43 96       	adiw	r24, 0x13	; 19
    2f62:	fc 01       	movw	r30, r24
    2f64:	e2 0f       	add	r30, r18
    2f66:	f3 1f       	adc	r31, r19
    2f68:	80 81       	ld	r24, Z
    2f6a:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    2f6e:	80 e0       	ldi	r24, 0x00	; 0
    2f70:	90 e0       	ldi	r25, 0x00	; 0
    2f72:	aa e7       	ldi	r26, 0x7A	; 122
    2f74:	b3 e4       	ldi	r27, 0x43	; 67
    2f76:	8b 87       	std	Y+11, r24	; 0x0b
    2f78:	9c 87       	std	Y+12, r25	; 0x0c
    2f7a:	ad 87       	std	Y+13, r26	; 0x0d
    2f7c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f80:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f82:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f84:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f86:	20 e0       	ldi	r18, 0x00	; 0
    2f88:	30 e0       	ldi	r19, 0x00	; 0
    2f8a:	4a e7       	ldi	r20, 0x7A	; 122
    2f8c:	55 e4       	ldi	r21, 0x45	; 69
    2f8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f92:	dc 01       	movw	r26, r24
    2f94:	cb 01       	movw	r24, r22
    2f96:	8f 83       	std	Y+7, r24	; 0x07
    2f98:	98 87       	std	Y+8, r25	; 0x08
    2f9a:	a9 87       	std	Y+9, r26	; 0x09
    2f9c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f9e:	6f 81       	ldd	r22, Y+7	; 0x07
    2fa0:	78 85       	ldd	r23, Y+8	; 0x08
    2fa2:	89 85       	ldd	r24, Y+9	; 0x09
    2fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	40 e8       	ldi	r20, 0x80	; 128
    2fac:	5f e3       	ldi	r21, 0x3F	; 63
    2fae:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    2fb2:	88 23       	and	r24, r24
    2fb4:	2c f4       	brge	.+10     	; 0x2fc0 <HAL_LCD_Void_Send_Integer+0x152>
		__ticks = 1;
    2fb6:	81 e0       	ldi	r24, 0x01	; 1
    2fb8:	90 e0       	ldi	r25, 0x00	; 0
    2fba:	9e 83       	std	Y+6, r25	; 0x06
    2fbc:	8d 83       	std	Y+5, r24	; 0x05
    2fbe:	3f c0       	rjmp	.+126    	; 0x303e <HAL_LCD_Void_Send_Integer+0x1d0>
	else if (__tmp > 65535)
    2fc0:	6f 81       	ldd	r22, Y+7	; 0x07
    2fc2:	78 85       	ldd	r23, Y+8	; 0x08
    2fc4:	89 85       	ldd	r24, Y+9	; 0x09
    2fc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fc8:	20 e0       	ldi	r18, 0x00	; 0
    2fca:	3f ef       	ldi	r19, 0xFF	; 255
    2fcc:	4f e7       	ldi	r20, 0x7F	; 127
    2fce:	57 e4       	ldi	r21, 0x47	; 71
    2fd0:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    2fd4:	18 16       	cp	r1, r24
    2fd6:	4c f5       	brge	.+82     	; 0x302a <HAL_LCD_Void_Send_Integer+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fd8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fda:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fdc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fde:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fe0:	20 e0       	ldi	r18, 0x00	; 0
    2fe2:	30 e0       	ldi	r19, 0x00	; 0
    2fe4:	40 e2       	ldi	r20, 0x20	; 32
    2fe6:	51 e4       	ldi	r21, 0x41	; 65
    2fe8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fec:	dc 01       	movw	r26, r24
    2fee:	cb 01       	movw	r24, r22
    2ff0:	bc 01       	movw	r22, r24
    2ff2:	cd 01       	movw	r24, r26
    2ff4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ff8:	dc 01       	movw	r26, r24
    2ffa:	cb 01       	movw	r24, r22
    2ffc:	9e 83       	std	Y+6, r25	; 0x06
    2ffe:	8d 83       	std	Y+5, r24	; 0x05
    3000:	0f c0       	rjmp	.+30     	; 0x3020 <HAL_LCD_Void_Send_Integer+0x1b2>
    3002:	80 e9       	ldi	r24, 0x90	; 144
    3004:	91 e0       	ldi	r25, 0x01	; 1
    3006:	9c 83       	std	Y+4, r25	; 0x04
    3008:	8b 83       	std	Y+3, r24	; 0x03
    300a:	8b 81       	ldd	r24, Y+3	; 0x03
    300c:	9c 81       	ldd	r25, Y+4	; 0x04
    300e:	01 97       	sbiw	r24, 0x01	; 1
    3010:	f1 f7       	brne	.-4      	; 0x300e <HAL_LCD_Void_Send_Integer+0x1a0>
    3012:	9c 83       	std	Y+4, r25	; 0x04
    3014:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3016:	8d 81       	ldd	r24, Y+5	; 0x05
    3018:	9e 81       	ldd	r25, Y+6	; 0x06
    301a:	01 97       	sbiw	r24, 0x01	; 1
    301c:	9e 83       	std	Y+6, r25	; 0x06
    301e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3020:	8d 81       	ldd	r24, Y+5	; 0x05
    3022:	9e 81       	ldd	r25, Y+6	; 0x06
    3024:	00 97       	sbiw	r24, 0x00	; 0
    3026:	69 f7       	brne	.-38     	; 0x3002 <HAL_LCD_Void_Send_Integer+0x194>
    3028:	14 c0       	rjmp	.+40     	; 0x3052 <HAL_LCD_Void_Send_Integer+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    302a:	6f 81       	ldd	r22, Y+7	; 0x07
    302c:	78 85       	ldd	r23, Y+8	; 0x08
    302e:	89 85       	ldd	r24, Y+9	; 0x09
    3030:	9a 85       	ldd	r25, Y+10	; 0x0a
    3032:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3036:	dc 01       	movw	r26, r24
    3038:	cb 01       	movw	r24, r22
    303a:	9e 83       	std	Y+6, r25	; 0x06
    303c:	8d 83       	std	Y+5, r24	; 0x05
    303e:	8d 81       	ldd	r24, Y+5	; 0x05
    3040:	9e 81       	ldd	r25, Y+6	; 0x06
    3042:	9a 83       	std	Y+2, r25	; 0x02
    3044:	89 83       	std	Y+1, r24	; 0x01
    3046:	89 81       	ldd	r24, Y+1	; 0x01
    3048:	9a 81       	ldd	r25, Y+2	; 0x02
    304a:	01 97       	sbiw	r24, 0x01	; 1
    304c:	f1 f7       	brne	.-4      	; 0x304a <HAL_LCD_Void_Send_Integer+0x1dc>
    304e:	9a 83       	std	Y+2, r25	; 0x02
    3050:	89 83       	std	Y+1, r24	; 0x01
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
		u8_Local_Temporary++;
		s32_Data = s32_Data /10;
		
	}	
	for (int i = u8_Local_Temporary-1; i >= 0; i--)
    3052:	8f 85       	ldd	r24, Y+15	; 0x0f
    3054:	98 89       	ldd	r25, Y+16	; 0x10
    3056:	01 97       	sbiw	r24, 0x01	; 1
    3058:	98 8b       	std	Y+16, r25	; 0x10
    305a:	8f 87       	std	Y+15, r24	; 0x0f
    305c:	8f 85       	ldd	r24, Y+15	; 0x0f
    305e:	98 89       	ldd	r25, Y+16	; 0x10
    3060:	99 23       	and	r25, r25
    3062:	0c f0       	brlt	.+2      	; 0x3066 <HAL_LCD_Void_Send_Integer+0x1f8>
    3064:	7a cf       	rjmp	.-268    	; 0x2f5a <HAL_LCD_Void_Send_Integer+0xec>
	{
		HAL_LCD_Void_Send_Char(u8_Local_Array[i]);
		_delay_ms(250);
	}

}
    3066:	a6 96       	adiw	r28, 0x26	; 38
    3068:	0f b6       	in	r0, 0x3f	; 63
    306a:	f8 94       	cli
    306c:	de bf       	out	0x3e, r29	; 62
    306e:	0f be       	out	0x3f, r0	; 63
    3070:	cd bf       	out	0x3d, r28	; 61
    3072:	cf 91       	pop	r28
    3074:	df 91       	pop	r29
    3076:	08 95       	ret

00003078 <HAL_LCD_Void_Send_Float>:

void HAL_LCD_Void_Send_Float(f32_t f32_Data){
    3078:	df 93       	push	r29
    307a:	cf 93       	push	r28
    307c:	cd b7       	in	r28, 0x3d	; 61
    307e:	de b7       	in	r29, 0x3e	; 62
    3080:	a7 97       	sbiw	r28, 0x27	; 39
    3082:	0f b6       	in	r0, 0x3f	; 63
    3084:	f8 94       	cli
    3086:	de bf       	out	0x3e, r29	; 62
    3088:	0f be       	out	0x3f, r0	; 63
    308a:	cd bf       	out	0x3d, r28	; 61
    308c:	6c a3       	std	Y+36, r22	; 0x24
    308e:	7d a3       	std	Y+37, r23	; 0x25
    3090:	8e a3       	std	Y+38, r24	; 0x26
    3092:	9f a3       	std	Y+39, r25	; 0x27
	u8_t u8_Local_Array[16] ,  u8_Local_Reminder = 0 ,  u8_Local_Temporary = 0 , u8_Local_Decimal = 0;
    3094:	1b 8a       	std	Y+19, r1	; 0x13
    3096:	1a 8a       	std	Y+18, r1	; 0x12
    3098:	19 8a       	std	Y+17, r1	; 0x11
	u8_Local_Decimal = (f32_Data - (u32_t)f32_Data) * 10;
    309a:	6c a1       	ldd	r22, Y+36	; 0x24
    309c:	7d a1       	ldd	r23, Y+37	; 0x25
    309e:	8e a1       	ldd	r24, Y+38	; 0x26
    30a0:	9f a1       	ldd	r25, Y+39	; 0x27
    30a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30a6:	dc 01       	movw	r26, r24
    30a8:	cb 01       	movw	r24, r22
    30aa:	cc 01       	movw	r24, r24
    30ac:	a0 e0       	ldi	r26, 0x00	; 0
    30ae:	b0 e0       	ldi	r27, 0x00	; 0
    30b0:	bc 01       	movw	r22, r24
    30b2:	cd 01       	movw	r24, r26
    30b4:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    30b8:	9b 01       	movw	r18, r22
    30ba:	ac 01       	movw	r20, r24
    30bc:	6c a1       	ldd	r22, Y+36	; 0x24
    30be:	7d a1       	ldd	r23, Y+37	; 0x25
    30c0:	8e a1       	ldd	r24, Y+38	; 0x26
    30c2:	9f a1       	ldd	r25, Y+39	; 0x27
    30c4:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    30c8:	dc 01       	movw	r26, r24
    30ca:	cb 01       	movw	r24, r22
    30cc:	bc 01       	movw	r22, r24
    30ce:	cd 01       	movw	r24, r26
    30d0:	20 e0       	ldi	r18, 0x00	; 0
    30d2:	30 e0       	ldi	r19, 0x00	; 0
    30d4:	40 e2       	ldi	r20, 0x20	; 32
    30d6:	51 e4       	ldi	r21, 0x41	; 65
    30d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30dc:	dc 01       	movw	r26, r24
    30de:	cb 01       	movw	r24, r22
    30e0:	bc 01       	movw	r22, r24
    30e2:	cd 01       	movw	r24, r26
    30e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e8:	dc 01       	movw	r26, r24
    30ea:	cb 01       	movw	r24, r22
    30ec:	89 8b       	std	Y+17, r24	; 0x11
	if(f32_Data == 0){HAL_LCD_Void_Send_Char('0'); return;}
    30ee:	6c a1       	ldd	r22, Y+36	; 0x24
    30f0:	7d a1       	ldd	r23, Y+37	; 0x25
    30f2:	8e a1       	ldd	r24, Y+38	; 0x26
    30f4:	9f a1       	ldd	r25, Y+39	; 0x27
    30f6:	20 e0       	ldi	r18, 0x00	; 0
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	40 e0       	ldi	r20, 0x00	; 0
    30fc:	50 e0       	ldi	r21, 0x00	; 0
    30fe:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    3102:	88 23       	and	r24, r24
    3104:	21 f4       	brne	.+8      	; 0x310e <HAL_LCD_Void_Send_Float+0x96>
    3106:	80 e3       	ldi	r24, 0x30	; 48
    3108:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    310c:	f7 c0       	rjmp	.+494    	; 0x32fc <HAL_LCD_Void_Send_Float+0x284>
	if(f32_Data < 0){
    310e:	6c a1       	ldd	r22, Y+36	; 0x24
    3110:	7d a1       	ldd	r23, Y+37	; 0x25
    3112:	8e a1       	ldd	r24, Y+38	; 0x26
    3114:	9f a1       	ldd	r25, Y+39	; 0x27
    3116:	20 e0       	ldi	r18, 0x00	; 0
    3118:	30 e0       	ldi	r19, 0x00	; 0
    311a:	40 e0       	ldi	r20, 0x00	; 0
    311c:	50 e0       	ldi	r21, 0x00	; 0
    311e:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    3122:	88 23       	and	r24, r24
    3124:	0c f0       	brlt	.+2      	; 0x3128 <HAL_LCD_Void_Send_Float+0xb0>
    3126:	46 c0       	rjmp	.+140    	; 0x31b4 <HAL_LCD_Void_Send_Float+0x13c>
		f32_Data = f32_Data * -1;
    3128:	8c a1       	ldd	r24, Y+36	; 0x24
    312a:	9d a1       	ldd	r25, Y+37	; 0x25
    312c:	ae a1       	ldd	r26, Y+38	; 0x26
    312e:	bf a1       	ldd	r27, Y+39	; 0x27
    3130:	b0 58       	subi	r27, 0x80	; 128
    3132:	8c a3       	std	Y+36, r24	; 0x24
    3134:	9d a3       	std	Y+37, r25	; 0x25
    3136:	ae a3       	std	Y+38, r26	; 0x26
    3138:	bf a3       	std	Y+39, r27	; 0x27
		HAL_LCD_Void_Send_Char('-');
    313a:	8d e2       	ldi	r24, 0x2D	; 45
    313c:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    3140:	39 c0       	rjmp	.+114    	; 0x31b4 <HAL_LCD_Void_Send_Float+0x13c>
	}
	while((u32_t)f32_Data){
		u8_Local_Reminder = (u32_t)f32_Data % 10;
    3142:	6c a1       	ldd	r22, Y+36	; 0x24
    3144:	7d a1       	ldd	r23, Y+37	; 0x25
    3146:	8e a1       	ldd	r24, Y+38	; 0x26
    3148:	9f a1       	ldd	r25, Y+39	; 0x27
    314a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    314e:	dc 01       	movw	r26, r24
    3150:	cb 01       	movw	r24, r22
    3152:	2a e0       	ldi	r18, 0x0A	; 10
    3154:	30 e0       	ldi	r19, 0x00	; 0
    3156:	b9 01       	movw	r22, r18
    3158:	0e 94 10 1d 	call	0x3a20	; 0x3a20 <__udivmodhi4>
    315c:	8b 8b       	std	Y+19, r24	; 0x13
		u8_Local_Reminder = u8_Local_Reminder + '0';
    315e:	8b 89       	ldd	r24, Y+19	; 0x13
    3160:	80 5d       	subi	r24, 0xD0	; 208
    3162:	8b 8b       	std	Y+19, r24	; 0x13
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
    3164:	8a 89       	ldd	r24, Y+18	; 0x12
    3166:	28 2f       	mov	r18, r24
    3168:	30 e0       	ldi	r19, 0x00	; 0
    316a:	ce 01       	movw	r24, r28
    316c:	44 96       	adiw	r24, 0x14	; 20
    316e:	fc 01       	movw	r30, r24
    3170:	e2 0f       	add	r30, r18
    3172:	f3 1f       	adc	r31, r19
    3174:	8b 89       	ldd	r24, Y+19	; 0x13
    3176:	80 83       	st	Z, r24
		u8_Local_Temporary++;
    3178:	8a 89       	ldd	r24, Y+18	; 0x12
    317a:	8f 5f       	subi	r24, 0xFF	; 255
    317c:	8a 8b       	std	Y+18, r24	; 0x12
		f32_Data = (u32_t)f32_Data /10;
    317e:	6c a1       	ldd	r22, Y+36	; 0x24
    3180:	7d a1       	ldd	r23, Y+37	; 0x25
    3182:	8e a1       	ldd	r24, Y+38	; 0x26
    3184:	9f a1       	ldd	r25, Y+39	; 0x27
    3186:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    318a:	dc 01       	movw	r26, r24
    318c:	cb 01       	movw	r24, r22
    318e:	2a e0       	ldi	r18, 0x0A	; 10
    3190:	30 e0       	ldi	r19, 0x00	; 0
    3192:	b9 01       	movw	r22, r18
    3194:	0e 94 10 1d 	call	0x3a20	; 0x3a20 <__udivmodhi4>
    3198:	cb 01       	movw	r24, r22
    319a:	cc 01       	movw	r24, r24
    319c:	a0 e0       	ldi	r26, 0x00	; 0
    319e:	b0 e0       	ldi	r27, 0x00	; 0
    31a0:	bc 01       	movw	r22, r24
    31a2:	cd 01       	movw	r24, r26
    31a4:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    31a8:	dc 01       	movw	r26, r24
    31aa:	cb 01       	movw	r24, r22
    31ac:	8c a3       	std	Y+36, r24	; 0x24
    31ae:	9d a3       	std	Y+37, r25	; 0x25
    31b0:	ae a3       	std	Y+38, r26	; 0x26
    31b2:	bf a3       	std	Y+39, r27	; 0x27
	if(f32_Data == 0){HAL_LCD_Void_Send_Char('0'); return;}
	if(f32_Data < 0){
		f32_Data = f32_Data * -1;
		HAL_LCD_Void_Send_Char('-');
	}
	while((u32_t)f32_Data){
    31b4:	6c a1       	ldd	r22, Y+36	; 0x24
    31b6:	7d a1       	ldd	r23, Y+37	; 0x25
    31b8:	8e a1       	ldd	r24, Y+38	; 0x26
    31ba:	9f a1       	ldd	r25, Y+39	; 0x27
    31bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31c0:	dc 01       	movw	r26, r24
    31c2:	cb 01       	movw	r24, r22
    31c4:	00 97       	sbiw	r24, 0x00	; 0
    31c6:	09 f0       	breq	.+2      	; 0x31ca <HAL_LCD_Void_Send_Float+0x152>
    31c8:	bc cf       	rjmp	.-136    	; 0x3142 <HAL_LCD_Void_Send_Float+0xca>
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
		u8_Local_Temporary++;
		f32_Data = (u32_t)f32_Data /10;

	}
	for (int i = u8_Local_Temporary-1; i >= 0; i--)
    31ca:	8a 89       	ldd	r24, Y+18	; 0x12
    31cc:	88 2f       	mov	r24, r24
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	01 97       	sbiw	r24, 0x01	; 1
    31d2:	98 8b       	std	Y+16, r25	; 0x10
    31d4:	8f 87       	std	Y+15, r24	; 0x0f
    31d6:	81 c0       	rjmp	.+258    	; 0x32da <HAL_LCD_Void_Send_Float+0x262>
	{
		HAL_LCD_Void_Send_Char(u8_Local_Array[i]);
    31d8:	2f 85       	ldd	r18, Y+15	; 0x0f
    31da:	38 89       	ldd	r19, Y+16	; 0x10
    31dc:	ce 01       	movw	r24, r28
    31de:	44 96       	adiw	r24, 0x14	; 20
    31e0:	fc 01       	movw	r30, r24
    31e2:	e2 0f       	add	r30, r18
    31e4:	f3 1f       	adc	r31, r19
    31e6:	80 81       	ld	r24, Z
    31e8:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
    31ec:	80 e0       	ldi	r24, 0x00	; 0
    31ee:	90 e0       	ldi	r25, 0x00	; 0
    31f0:	aa e7       	ldi	r26, 0x7A	; 122
    31f2:	b3 e4       	ldi	r27, 0x43	; 67
    31f4:	8b 87       	std	Y+11, r24	; 0x0b
    31f6:	9c 87       	std	Y+12, r25	; 0x0c
    31f8:	ad 87       	std	Y+13, r26	; 0x0d
    31fa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    31fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    3200:	8d 85       	ldd	r24, Y+13	; 0x0d
    3202:	9e 85       	ldd	r25, Y+14	; 0x0e
    3204:	20 e0       	ldi	r18, 0x00	; 0
    3206:	30 e0       	ldi	r19, 0x00	; 0
    3208:	4a e7       	ldi	r20, 0x7A	; 122
    320a:	55 e4       	ldi	r21, 0x45	; 69
    320c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3210:	dc 01       	movw	r26, r24
    3212:	cb 01       	movw	r24, r22
    3214:	8f 83       	std	Y+7, r24	; 0x07
    3216:	98 87       	std	Y+8, r25	; 0x08
    3218:	a9 87       	std	Y+9, r26	; 0x09
    321a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    321c:	6f 81       	ldd	r22, Y+7	; 0x07
    321e:	78 85       	ldd	r23, Y+8	; 0x08
    3220:	89 85       	ldd	r24, Y+9	; 0x09
    3222:	9a 85       	ldd	r25, Y+10	; 0x0a
    3224:	20 e0       	ldi	r18, 0x00	; 0
    3226:	30 e0       	ldi	r19, 0x00	; 0
    3228:	40 e8       	ldi	r20, 0x80	; 128
    322a:	5f e3       	ldi	r21, 0x3F	; 63
    322c:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    3230:	88 23       	and	r24, r24
    3232:	2c f4       	brge	.+10     	; 0x323e <HAL_LCD_Void_Send_Float+0x1c6>
		__ticks = 1;
    3234:	81 e0       	ldi	r24, 0x01	; 1
    3236:	90 e0       	ldi	r25, 0x00	; 0
    3238:	9e 83       	std	Y+6, r25	; 0x06
    323a:	8d 83       	std	Y+5, r24	; 0x05
    323c:	3f c0       	rjmp	.+126    	; 0x32bc <HAL_LCD_Void_Send_Float+0x244>
	else if (__tmp > 65535)
    323e:	6f 81       	ldd	r22, Y+7	; 0x07
    3240:	78 85       	ldd	r23, Y+8	; 0x08
    3242:	89 85       	ldd	r24, Y+9	; 0x09
    3244:	9a 85       	ldd	r25, Y+10	; 0x0a
    3246:	20 e0       	ldi	r18, 0x00	; 0
    3248:	3f ef       	ldi	r19, 0xFF	; 255
    324a:	4f e7       	ldi	r20, 0x7F	; 127
    324c:	57 e4       	ldi	r21, 0x47	; 71
    324e:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    3252:	18 16       	cp	r1, r24
    3254:	4c f5       	brge	.+82     	; 0x32a8 <HAL_LCD_Void_Send_Float+0x230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3256:	6b 85       	ldd	r22, Y+11	; 0x0b
    3258:	7c 85       	ldd	r23, Y+12	; 0x0c
    325a:	8d 85       	ldd	r24, Y+13	; 0x0d
    325c:	9e 85       	ldd	r25, Y+14	; 0x0e
    325e:	20 e0       	ldi	r18, 0x00	; 0
    3260:	30 e0       	ldi	r19, 0x00	; 0
    3262:	40 e2       	ldi	r20, 0x20	; 32
    3264:	51 e4       	ldi	r21, 0x41	; 65
    3266:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    326a:	dc 01       	movw	r26, r24
    326c:	cb 01       	movw	r24, r22
    326e:	bc 01       	movw	r22, r24
    3270:	cd 01       	movw	r24, r26
    3272:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3276:	dc 01       	movw	r26, r24
    3278:	cb 01       	movw	r24, r22
    327a:	9e 83       	std	Y+6, r25	; 0x06
    327c:	8d 83       	std	Y+5, r24	; 0x05
    327e:	0f c0       	rjmp	.+30     	; 0x329e <HAL_LCD_Void_Send_Float+0x226>
    3280:	80 e9       	ldi	r24, 0x90	; 144
    3282:	91 e0       	ldi	r25, 0x01	; 1
    3284:	9c 83       	std	Y+4, r25	; 0x04
    3286:	8b 83       	std	Y+3, r24	; 0x03
    3288:	8b 81       	ldd	r24, Y+3	; 0x03
    328a:	9c 81       	ldd	r25, Y+4	; 0x04
    328c:	01 97       	sbiw	r24, 0x01	; 1
    328e:	f1 f7       	brne	.-4      	; 0x328c <HAL_LCD_Void_Send_Float+0x214>
    3290:	9c 83       	std	Y+4, r25	; 0x04
    3292:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3294:	8d 81       	ldd	r24, Y+5	; 0x05
    3296:	9e 81       	ldd	r25, Y+6	; 0x06
    3298:	01 97       	sbiw	r24, 0x01	; 1
    329a:	9e 83       	std	Y+6, r25	; 0x06
    329c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    329e:	8d 81       	ldd	r24, Y+5	; 0x05
    32a0:	9e 81       	ldd	r25, Y+6	; 0x06
    32a2:	00 97       	sbiw	r24, 0x00	; 0
    32a4:	69 f7       	brne	.-38     	; 0x3280 <HAL_LCD_Void_Send_Float+0x208>
    32a6:	14 c0       	rjmp	.+40     	; 0x32d0 <HAL_LCD_Void_Send_Float+0x258>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32a8:	6f 81       	ldd	r22, Y+7	; 0x07
    32aa:	78 85       	ldd	r23, Y+8	; 0x08
    32ac:	89 85       	ldd	r24, Y+9	; 0x09
    32ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    32b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32b4:	dc 01       	movw	r26, r24
    32b6:	cb 01       	movw	r24, r22
    32b8:	9e 83       	std	Y+6, r25	; 0x06
    32ba:	8d 83       	std	Y+5, r24	; 0x05
    32bc:	8d 81       	ldd	r24, Y+5	; 0x05
    32be:	9e 81       	ldd	r25, Y+6	; 0x06
    32c0:	9a 83       	std	Y+2, r25	; 0x02
    32c2:	89 83       	std	Y+1, r24	; 0x01
    32c4:	89 81       	ldd	r24, Y+1	; 0x01
    32c6:	9a 81       	ldd	r25, Y+2	; 0x02
    32c8:	01 97       	sbiw	r24, 0x01	; 1
    32ca:	f1 f7       	brne	.-4      	; 0x32c8 <HAL_LCD_Void_Send_Float+0x250>
    32cc:	9a 83       	std	Y+2, r25	; 0x02
    32ce:	89 83       	std	Y+1, r24	; 0x01
		u8_Local_Array[u8_Local_Temporary] = u8_Local_Reminder ;
		u8_Local_Temporary++;
		f32_Data = (u32_t)f32_Data /10;

	}
	for (int i = u8_Local_Temporary-1; i >= 0; i--)
    32d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    32d2:	98 89       	ldd	r25, Y+16	; 0x10
    32d4:	01 97       	sbiw	r24, 0x01	; 1
    32d6:	98 8b       	std	Y+16, r25	; 0x10
    32d8:	8f 87       	std	Y+15, r24	; 0x0f
    32da:	8f 85       	ldd	r24, Y+15	; 0x0f
    32dc:	98 89       	ldd	r25, Y+16	; 0x10
    32de:	99 23       	and	r25, r25
    32e0:	0c f0       	brlt	.+2      	; 0x32e4 <HAL_LCD_Void_Send_Float+0x26c>
    32e2:	7a cf       	rjmp	.-268    	; 0x31d8 <HAL_LCD_Void_Send_Float+0x160>
	{
		HAL_LCD_Void_Send_Char(u8_Local_Array[i]);
		_delay_ms(250);
	}
	HAL_LCD_Void_Send_Char('.');
    32e4:	8e e2       	ldi	r24, 0x2E	; 46
    32e6:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
	HAL_LCD_Void_Send_Integer(u8_Local_Decimal);
    32ea:	89 89       	ldd	r24, Y+17	; 0x11
    32ec:	88 2f       	mov	r24, r24
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	a0 e0       	ldi	r26, 0x00	; 0
    32f2:	b0 e0       	ldi	r27, 0x00	; 0
    32f4:	bc 01       	movw	r22, r24
    32f6:	cd 01       	movw	r24, r26
    32f8:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <HAL_LCD_Void_Send_Integer>

}
    32fc:	a7 96       	adiw	r28, 0x27	; 39
    32fe:	0f b6       	in	r0, 0x3f	; 63
    3300:	f8 94       	cli
    3302:	de bf       	out	0x3e, r29	; 62
    3304:	0f be       	out	0x3f, r0	; 63
    3306:	cd bf       	out	0x3d, r28	; 61
    3308:	cf 91       	pop	r28
    330a:	df 91       	pop	r29
    330c:	08 95       	ret

0000330e <HAL_LCD_void_CursorPos>:

void HAL_LCD_void_CursorPos(u8_t u8_Row , u8_t u8_Column){
    330e:	df 93       	push	r29
    3310:	cf 93       	push	r28
    3312:	00 d0       	rcall	.+0      	; 0x3314 <HAL_LCD_void_CursorPos+0x6>
    3314:	0f 92       	push	r0
    3316:	cd b7       	in	r28, 0x3d	; 61
    3318:	de b7       	in	r29, 0x3e	; 62
    331a:	8a 83       	std	Y+2, r24	; 0x02
    331c:	6b 83       	std	Y+3, r22	; 0x03
	u8_t u8_Local_The_Address = 0;
    331e:	19 82       	std	Y+1, r1	; 0x01
	if (u8_Row == 0 ){u8_Local_The_Address = LCD_First_Line;}
    3320:	8a 81       	ldd	r24, Y+2	; 0x02
    3322:	88 23       	and	r24, r24
    3324:	19 f4       	brne	.+6      	; 0x332c <HAL_LCD_void_CursorPos+0x1e>
    3326:	80 e8       	ldi	r24, 0x80	; 128
    3328:	89 83       	std	Y+1, r24	; 0x01
    332a:	0e c0       	rjmp	.+28     	; 0x3348 <HAL_LCD_void_CursorPos+0x3a>
	else if (u8_Row == 1) {u8_Local_The_Address = LCD_Secound_Line;}
    332c:	8a 81       	ldd	r24, Y+2	; 0x02
    332e:	81 30       	cpi	r24, 0x01	; 1
    3330:	19 f4       	brne	.+6      	; 0x3338 <HAL_LCD_void_CursorPos+0x2a>
    3332:	80 ec       	ldi	r24, 0xC0	; 192
    3334:	89 83       	std	Y+1, r24	; 0x01
    3336:	08 c0       	rjmp	.+16     	; 0x3348 <HAL_LCD_void_CursorPos+0x3a>
	else if (u8_Row == 2) {u8_Local_The_Address = LCD_Third_Line;}
    3338:	8a 81       	ldd	r24, Y+2	; 0x02
    333a:	82 30       	cpi	r24, 0x02	; 2
    333c:	19 f4       	brne	.+6      	; 0x3344 <HAL_LCD_void_CursorPos+0x36>
    333e:	84 e9       	ldi	r24, 0x94	; 148
    3340:	89 83       	std	Y+1, r24	; 0x01
    3342:	02 c0       	rjmp	.+4      	; 0x3348 <HAL_LCD_void_CursorPos+0x3a>
	else{u8_Local_The_Address = LCD_Fourth_Line;}		
    3344:	80 ed       	ldi	r24, 0xD0	; 208
    3346:	89 83       	std	Y+1, r24	; 0x01
	if(u8_Column <= 19){u8_Local_The_Address += u8_Column;}
    3348:	8b 81       	ldd	r24, Y+3	; 0x03
    334a:	84 31       	cpi	r24, 0x14	; 20
    334c:	20 f4       	brcc	.+8      	; 0x3356 <HAL_LCD_void_CursorPos+0x48>
    334e:	89 81       	ldd	r24, Y+1	; 0x01
    3350:	9b 81       	ldd	r25, Y+3	; 0x03
    3352:	89 0f       	add	r24, r25
    3354:	89 83       	std	Y+1, r24	; 0x01
	HAL_LCD_Void_Send_Command(u8_Local_The_Address);
    3356:	89 81       	ldd	r24, Y+1	; 0x01
    3358:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
}
    335c:	0f 90       	pop	r0
    335e:	0f 90       	pop	r0
    3360:	0f 90       	pop	r0
    3362:	cf 91       	pop	r28
    3364:	df 91       	pop	r29
    3366:	08 95       	ret

00003368 <HAL_KEYPAD_Void_Init>:
#include "KEYPAD_Private.h"
#include "KEYPAD_Interface.h"
#include "../../Common/Bit_Math.h"
#include <util/delay.h>

void HAL_KEYPAD_Void_Init(){
    3368:	df 93       	push	r29
    336a:	cf 93       	push	r28
    336c:	cd b7       	in	r28, 0x3d	; 61
    336e:	de b7       	in	r29, 0x3e	; 62
	// Columns Output
	MCAL_DIO_u8_Init_Direction(KeyPad_Column1_Port , KeyPad_Column1_Pin , Output);
    3370:	83 e0       	ldi	r24, 0x03	; 3
    3372:	67 e0       	ldi	r22, 0x07	; 7
    3374:	41 e0       	ldi	r20, 0x01	; 1
    3376:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Column2_Port , KeyPad_Column2_Pin , Output);
    337a:	83 e0       	ldi	r24, 0x03	; 3
    337c:	66 e0       	ldi	r22, 0x06	; 6
    337e:	41 e0       	ldi	r20, 0x01	; 1
    3380:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Column3_Port , KeyPad_Column3_Pin , Output);
    3384:	83 e0       	ldi	r24, 0x03	; 3
    3386:	65 e0       	ldi	r22, 0x05	; 5
    3388:	41 e0       	ldi	r20, 0x01	; 1
    338a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Column4_Port , KeyPad_Column4_Pin , Output);
    338e:	83 e0       	ldi	r24, 0x03	; 3
    3390:	63 e0       	ldi	r22, 0x03	; 3
    3392:	41 e0       	ldi	r20, 0x01	; 1
    3394:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	// Cloumns High
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Column1_Port , KeyPad_Column1_Pin , High);
    3398:	83 e0       	ldi	r24, 0x03	; 3
    339a:	67 e0       	ldi	r22, 0x07	; 7
    339c:	41 e0       	ldi	r20, 0x01	; 1
    339e:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Column2_Port , KeyPad_Column2_Pin , High);
    33a2:	83 e0       	ldi	r24, 0x03	; 3
    33a4:	66 e0       	ldi	r22, 0x06	; 6
    33a6:	41 e0       	ldi	r20, 0x01	; 1
    33a8:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Column3_Port , KeyPad_Column3_Pin , High);
    33ac:	83 e0       	ldi	r24, 0x03	; 3
    33ae:	65 e0       	ldi	r22, 0x05	; 5
    33b0:	41 e0       	ldi	r20, 0x01	; 1
    33b2:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Column4_Port , KeyPad_Column4_Pin , High);
    33b6:	83 e0       	ldi	r24, 0x03	; 3
    33b8:	63 e0       	ldi	r22, 0x03	; 3
    33ba:	41 e0       	ldi	r20, 0x01	; 1
    33bc:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	// Rows Input
	MCAL_DIO_u8_Init_Direction(KeyPad_Row1_Port , KeyPad_Row1_Pin , Input);
    33c0:	82 e0       	ldi	r24, 0x02	; 2
    33c2:	65 e0       	ldi	r22, 0x05	; 5
    33c4:	40 e0       	ldi	r20, 0x00	; 0
    33c6:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Row2_Port , KeyPad_Row2_Pin , Input);
    33ca:	82 e0       	ldi	r24, 0x02	; 2
    33cc:	64 e0       	ldi	r22, 0x04	; 4
    33ce:	40 e0       	ldi	r20, 0x00	; 0
    33d0:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Row3_Port , KeyPad_Row3_Pin , Input);
    33d4:	82 e0       	ldi	r24, 0x02	; 2
    33d6:	63 e0       	ldi	r22, 0x03	; 3
    33d8:	40 e0       	ldi	r20, 0x00	; 0
    33da:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	MCAL_DIO_u8_Init_Direction(KeyPad_Row4_Port , KeyPad_Row4_Pin , Input);
    33de:	82 e0       	ldi	r24, 0x02	; 2
    33e0:	62 e0       	ldi	r22, 0x02	; 2
    33e2:	40 e0       	ldi	r20, 0x00	; 0
    33e4:	0e 94 9d 07 	call	0xf3a	; 0xf3a <MCAL_DIO_u8_Init_Direction>
	// Pull-up Resistance for Input
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Row1_Port , KeyPad_Row1_Pin , High);
    33e8:	82 e0       	ldi	r24, 0x02	; 2
    33ea:	65 e0       	ldi	r22, 0x05	; 5
    33ec:	41 e0       	ldi	r20, 0x01	; 1
    33ee:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Row2_Port , KeyPad_Row2_Pin , High);
    33f2:	82 e0       	ldi	r24, 0x02	; 2
    33f4:	64 e0       	ldi	r22, 0x04	; 4
    33f6:	41 e0       	ldi	r20, 0x01	; 1
    33f8:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Row3_Port , KeyPad_Row3_Pin , High);
    33fc:	82 e0       	ldi	r24, 0x02	; 2
    33fe:	63 e0       	ldi	r22, 0x03	; 3
    3400:	41 e0       	ldi	r20, 0x01	; 1
    3402:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	MCAL_DIO_u8_Set_Pin_Value(KeyPad_Row4_Port , KeyPad_Row4_Pin , High);
    3406:	82 e0       	ldi	r24, 0x02	; 2
    3408:	62 e0       	ldi	r22, 0x02	; 2
    340a:	41 e0       	ldi	r20, 0x01	; 1
    340c:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
}
    3410:	cf 91       	pop	r28
    3412:	df 91       	pop	r29
    3414:	08 95       	ret

00003416 <HAL_KEYPAD_u8_Get_Pressed_Key>:
u8_t HAL_KEYPAD_u8_Get_Pressed_Key(){
    3416:	df 93       	push	r29
    3418:	cf 93       	push	r28
    341a:	cd b7       	in	r28, 0x3d	; 61
    341c:	de b7       	in	r29, 0x3e	; 62
    341e:	a3 97       	sbiw	r28, 0x23	; 35
    3420:	0f b6       	in	r0, 0x3f	; 63
    3422:	f8 94       	cli
    3424:	de bf       	out	0x3e, r29	; 62
    3426:	0f be       	out	0x3f, r0	; 63
    3428:	cd bf       	out	0x3d, r28	; 61
	u8_t u8_Local_Pressed_Key = 'k';
    342a:	8b e6       	ldi	r24, 0x6B	; 107
    342c:	89 8b       	std	Y+17, r24	; 0x11
	u8_t u8_Local_If_Pressed = 1;
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	8a 8b       	std	Y+18, r24	; 0x12

	u8_t u8_Local_Rows_Pins_Array[] = {KeyPad_Row1_Pin , KeyPad_Row2_Pin , KeyPad_Row3_Pin , KeyPad_Row4_Pin};
    3432:	85 e0       	ldi	r24, 0x05	; 5
    3434:	8b 8b       	std	Y+19, r24	; 0x13
    3436:	84 e0       	ldi	r24, 0x04	; 4
    3438:	8c 8b       	std	Y+20, r24	; 0x14
    343a:	83 e0       	ldi	r24, 0x03	; 3
    343c:	8d 8b       	std	Y+21, r24	; 0x15
    343e:	82 e0       	ldi	r24, 0x02	; 2
    3440:	8e 8b       	std	Y+22, r24	; 0x16
	u8_t u8_Local_Rows_Ports_Array[] = {KeyPad_Row1_Port , KeyPad_Row2_Port , KeyPad_Row3_Port , KeyPad_Row4_Port};
    3442:	82 e0       	ldi	r24, 0x02	; 2
    3444:	8f 8b       	std	Y+23, r24	; 0x17
    3446:	82 e0       	ldi	r24, 0x02	; 2
    3448:	88 8f       	std	Y+24, r24	; 0x18
    344a:	82 e0       	ldi	r24, 0x02	; 2
    344c:	89 8f       	std	Y+25, r24	; 0x19
    344e:	82 e0       	ldi	r24, 0x02	; 2
    3450:	8a 8f       	std	Y+26, r24	; 0x1a
	u8_t u8_Local_Columns_Pins_Array[] = {KeyPad_Column1_Pin , KeyPad_Column2_Pin , KeyPad_Column3_Pin , KeyPad_Column4_Pin};
    3452:	87 e0       	ldi	r24, 0x07	; 7
    3454:	8b 8f       	std	Y+27, r24	; 0x1b
    3456:	86 e0       	ldi	r24, 0x06	; 6
    3458:	8c 8f       	std	Y+28, r24	; 0x1c
    345a:	85 e0       	ldi	r24, 0x05	; 5
    345c:	8d 8f       	std	Y+29, r24	; 0x1d
    345e:	83 e0       	ldi	r24, 0x03	; 3
    3460:	8e 8f       	std	Y+30, r24	; 0x1e
	u8_t u8_Local_Columns_Ports_Array[] = {KeyPad_Column1_Port , KeyPad_Column2_Port , KeyPad_Column3_Port , KeyPad_Column4_Port};
    3462:	83 e0       	ldi	r24, 0x03	; 3
    3464:	8f 8f       	std	Y+31, r24	; 0x1f
    3466:	83 e0       	ldi	r24, 0x03	; 3
    3468:	88 a3       	std	Y+32, r24	; 0x20
    346a:	83 e0       	ldi	r24, 0x03	; 3
    346c:	89 a3       	std	Y+33, r24	; 0x21
    346e:	83 e0       	ldi	r24, 0x03	; 3
    3470:	8a a3       	std	Y+34, r24	; 0x22

	for (u8_t i = 0; i <= 3 ; i++ ){
    3472:	18 8a       	std	Y+16, r1	; 0x10
    3474:	df c0       	rjmp	.+446    	; 0x3634 <HAL_KEYPAD_u8_Get_Pressed_Key+0x21e>
		MCAL_DIO_u8_Set_Pin_Value(u8_Local_Columns_Ports_Array[i] , u8_Local_Columns_Pins_Array[i] , Low);
    3476:	88 89       	ldd	r24, Y+16	; 0x10
    3478:	28 2f       	mov	r18, r24
    347a:	30 e0       	ldi	r19, 0x00	; 0
    347c:	ce 01       	movw	r24, r28
    347e:	4f 96       	adiw	r24, 0x1f	; 31
    3480:	fc 01       	movw	r30, r24
    3482:	e2 0f       	add	r30, r18
    3484:	f3 1f       	adc	r31, r19
    3486:	40 81       	ld	r20, Z
    3488:	88 89       	ldd	r24, Y+16	; 0x10
    348a:	28 2f       	mov	r18, r24
    348c:	30 e0       	ldi	r19, 0x00	; 0
    348e:	ce 01       	movw	r24, r28
    3490:	4b 96       	adiw	r24, 0x1b	; 27
    3492:	fc 01       	movw	r30, r24
    3494:	e2 0f       	add	r30, r18
    3496:	f3 1f       	adc	r31, r19
    3498:	90 81       	ld	r25, Z
    349a:	84 2f       	mov	r24, r20
    349c:	69 2f       	mov	r22, r25
    349e:	40 e0       	ldi	r20, 0x00	; 0
    34a0:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
		for (u8_t j = 0; j <= 3 ; j++ ){
    34a4:	1f 86       	std	Y+15, r1	; 0x0f
    34a6:	a8 c0       	rjmp	.+336    	; 0x35f8 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1e2>
			MCAL_DIO_u8_Read_Pin_Value(u8_Local_Rows_Ports_Array[j] , u8_Local_Rows_Pins_Array[j] ,&u8_Local_If_Pressed);
    34a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    34aa:	28 2f       	mov	r18, r24
    34ac:	30 e0       	ldi	r19, 0x00	; 0
    34ae:	ce 01       	movw	r24, r28
    34b0:	47 96       	adiw	r24, 0x17	; 23
    34b2:	fc 01       	movw	r30, r24
    34b4:	e2 0f       	add	r30, r18
    34b6:	f3 1f       	adc	r31, r19
    34b8:	40 81       	ld	r20, Z
    34ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    34bc:	28 2f       	mov	r18, r24
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	ce 01       	movw	r24, r28
    34c2:	43 96       	adiw	r24, 0x13	; 19
    34c4:	fc 01       	movw	r30, r24
    34c6:	e2 0f       	add	r30, r18
    34c8:	f3 1f       	adc	r31, r19
    34ca:	90 81       	ld	r25, Z
    34cc:	9e 01       	movw	r18, r28
    34ce:	2e 5e       	subi	r18, 0xEE	; 238
    34d0:	3f 4f       	sbci	r19, 0xFF	; 255
    34d2:	84 2f       	mov	r24, r20
    34d4:	69 2f       	mov	r22, r25
    34d6:	a9 01       	movw	r20, r18
    34d8:	0e 94 bd 09 	call	0x137a	; 0x137a <MCAL_DIO_u8_Read_Pin_Value>
			if (u8_Local_If_Pressed == Low){
    34dc:	8a 89       	ldd	r24, Y+18	; 0x12
    34de:	88 23       	and	r24, r24
    34e0:	09 f0       	breq	.+2      	; 0x34e4 <HAL_KEYPAD_u8_Get_Pressed_Key+0xce>
    34e2:	87 c0       	rjmp	.+270    	; 0x35f2 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1dc>
				u8_Local_Pressed_Key = u8_KeyPadButtons[j][i];
    34e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    34e6:	48 2f       	mov	r20, r24
    34e8:	50 e0       	ldi	r21, 0x00	; 0
    34ea:	88 89       	ldd	r24, Y+16	; 0x10
    34ec:	28 2f       	mov	r18, r24
    34ee:	30 e0       	ldi	r19, 0x00	; 0
    34f0:	ca 01       	movw	r24, r20
    34f2:	88 0f       	add	r24, r24
    34f4:	99 1f       	adc	r25, r25
    34f6:	88 0f       	add	r24, r24
    34f8:	99 1f       	adc	r25, r25
    34fa:	82 0f       	add	r24, r18
    34fc:	93 1f       	adc	r25, r19
    34fe:	fc 01       	movw	r30, r24
    3500:	e9 57       	subi	r30, 0x79	; 121
    3502:	fe 4f       	sbci	r31, 0xFE	; 254
    3504:	80 81       	ld	r24, Z
    3506:	89 8b       	std	Y+17, r24	; 0x11
    3508:	80 e0       	ldi	r24, 0x00	; 0
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	aa ef       	ldi	r26, 0xFA	; 250
    350e:	b3 e4       	ldi	r27, 0x43	; 67
    3510:	8b 87       	std	Y+11, r24	; 0x0b
    3512:	9c 87       	std	Y+12, r25	; 0x0c
    3514:	ad 87       	std	Y+13, r26	; 0x0d
    3516:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3518:	6b 85       	ldd	r22, Y+11	; 0x0b
    351a:	7c 85       	ldd	r23, Y+12	; 0x0c
    351c:	8d 85       	ldd	r24, Y+13	; 0x0d
    351e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3520:	20 e0       	ldi	r18, 0x00	; 0
    3522:	30 e0       	ldi	r19, 0x00	; 0
    3524:	4a e7       	ldi	r20, 0x7A	; 122
    3526:	55 e4       	ldi	r21, 0x45	; 69
    3528:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    352c:	dc 01       	movw	r26, r24
    352e:	cb 01       	movw	r24, r22
    3530:	8f 83       	std	Y+7, r24	; 0x07
    3532:	98 87       	std	Y+8, r25	; 0x08
    3534:	a9 87       	std	Y+9, r26	; 0x09
    3536:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3538:	6f 81       	ldd	r22, Y+7	; 0x07
    353a:	78 85       	ldd	r23, Y+8	; 0x08
    353c:	89 85       	ldd	r24, Y+9	; 0x09
    353e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3540:	20 e0       	ldi	r18, 0x00	; 0
    3542:	30 e0       	ldi	r19, 0x00	; 0
    3544:	40 e8       	ldi	r20, 0x80	; 128
    3546:	5f e3       	ldi	r21, 0x3F	; 63
    3548:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    354c:	88 23       	and	r24, r24
    354e:	2c f4       	brge	.+10     	; 0x355a <HAL_KEYPAD_u8_Get_Pressed_Key+0x144>
		__ticks = 1;
    3550:	81 e0       	ldi	r24, 0x01	; 1
    3552:	90 e0       	ldi	r25, 0x00	; 0
    3554:	9e 83       	std	Y+6, r25	; 0x06
    3556:	8d 83       	std	Y+5, r24	; 0x05
    3558:	3f c0       	rjmp	.+126    	; 0x35d8 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1c2>
	else if (__tmp > 65535)
    355a:	6f 81       	ldd	r22, Y+7	; 0x07
    355c:	78 85       	ldd	r23, Y+8	; 0x08
    355e:	89 85       	ldd	r24, Y+9	; 0x09
    3560:	9a 85       	ldd	r25, Y+10	; 0x0a
    3562:	20 e0       	ldi	r18, 0x00	; 0
    3564:	3f ef       	ldi	r19, 0xFF	; 255
    3566:	4f e7       	ldi	r20, 0x7F	; 127
    3568:	57 e4       	ldi	r21, 0x47	; 71
    356a:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    356e:	18 16       	cp	r1, r24
    3570:	4c f5       	brge	.+82     	; 0x35c4 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3572:	6b 85       	ldd	r22, Y+11	; 0x0b
    3574:	7c 85       	ldd	r23, Y+12	; 0x0c
    3576:	8d 85       	ldd	r24, Y+13	; 0x0d
    3578:	9e 85       	ldd	r25, Y+14	; 0x0e
    357a:	20 e0       	ldi	r18, 0x00	; 0
    357c:	30 e0       	ldi	r19, 0x00	; 0
    357e:	40 e2       	ldi	r20, 0x20	; 32
    3580:	51 e4       	ldi	r21, 0x41	; 65
    3582:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3586:	dc 01       	movw	r26, r24
    3588:	cb 01       	movw	r24, r22
    358a:	bc 01       	movw	r22, r24
    358c:	cd 01       	movw	r24, r26
    358e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3592:	dc 01       	movw	r26, r24
    3594:	cb 01       	movw	r24, r22
    3596:	9e 83       	std	Y+6, r25	; 0x06
    3598:	8d 83       	std	Y+5, r24	; 0x05
    359a:	0f c0       	rjmp	.+30     	; 0x35ba <HAL_KEYPAD_u8_Get_Pressed_Key+0x1a4>
    359c:	80 e9       	ldi	r24, 0x90	; 144
    359e:	91 e0       	ldi	r25, 0x01	; 1
    35a0:	9c 83       	std	Y+4, r25	; 0x04
    35a2:	8b 83       	std	Y+3, r24	; 0x03
    35a4:	8b 81       	ldd	r24, Y+3	; 0x03
    35a6:	9c 81       	ldd	r25, Y+4	; 0x04
    35a8:	01 97       	sbiw	r24, 0x01	; 1
    35aa:	f1 f7       	brne	.-4      	; 0x35a8 <HAL_KEYPAD_u8_Get_Pressed_Key+0x192>
    35ac:	9c 83       	std	Y+4, r25	; 0x04
    35ae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35b0:	8d 81       	ldd	r24, Y+5	; 0x05
    35b2:	9e 81       	ldd	r25, Y+6	; 0x06
    35b4:	01 97       	sbiw	r24, 0x01	; 1
    35b6:	9e 83       	std	Y+6, r25	; 0x06
    35b8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35ba:	8d 81       	ldd	r24, Y+5	; 0x05
    35bc:	9e 81       	ldd	r25, Y+6	; 0x06
    35be:	00 97       	sbiw	r24, 0x00	; 0
    35c0:	69 f7       	brne	.-38     	; 0x359c <HAL_KEYPAD_u8_Get_Pressed_Key+0x186>
    35c2:	14 c0       	rjmp	.+40     	; 0x35ec <HAL_KEYPAD_u8_Get_Pressed_Key+0x1d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35c4:	6f 81       	ldd	r22, Y+7	; 0x07
    35c6:	78 85       	ldd	r23, Y+8	; 0x08
    35c8:	89 85       	ldd	r24, Y+9	; 0x09
    35ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    35cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d0:	dc 01       	movw	r26, r24
    35d2:	cb 01       	movw	r24, r22
    35d4:	9e 83       	std	Y+6, r25	; 0x06
    35d6:	8d 83       	std	Y+5, r24	; 0x05
    35d8:	8d 81       	ldd	r24, Y+5	; 0x05
    35da:	9e 81       	ldd	r25, Y+6	; 0x06
    35dc:	9a 83       	std	Y+2, r25	; 0x02
    35de:	89 83       	std	Y+1, r24	; 0x01
    35e0:	89 81       	ldd	r24, Y+1	; 0x01
    35e2:	9a 81       	ldd	r25, Y+2	; 0x02
    35e4:	01 97       	sbiw	r24, 0x01	; 1
    35e6:	f1 f7       	brne	.-4      	; 0x35e4 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1ce>
    35e8:	9a 83       	std	Y+2, r25	; 0x02
    35ea:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(500);
				return u8_Local_Pressed_Key;
    35ec:	89 89       	ldd	r24, Y+17	; 0x11
    35ee:	8b a3       	std	Y+35, r24	; 0x23
    35f0:	27 c0       	rjmp	.+78     	; 0x3640 <HAL_KEYPAD_u8_Get_Pressed_Key+0x22a>
	u8_t u8_Local_Columns_Pins_Array[] = {KeyPad_Column1_Pin , KeyPad_Column2_Pin , KeyPad_Column3_Pin , KeyPad_Column4_Pin};
	u8_t u8_Local_Columns_Ports_Array[] = {KeyPad_Column1_Port , KeyPad_Column2_Port , KeyPad_Column3_Port , KeyPad_Column4_Port};

	for (u8_t i = 0; i <= 3 ; i++ ){
		MCAL_DIO_u8_Set_Pin_Value(u8_Local_Columns_Ports_Array[i] , u8_Local_Columns_Pins_Array[i] , Low);
		for (u8_t j = 0; j <= 3 ; j++ ){
    35f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    35f4:	8f 5f       	subi	r24, 0xFF	; 255
    35f6:	8f 87       	std	Y+15, r24	; 0x0f
    35f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    35fa:	84 30       	cpi	r24, 0x04	; 4
    35fc:	08 f4       	brcc	.+2      	; 0x3600 <HAL_KEYPAD_u8_Get_Pressed_Key+0x1ea>
    35fe:	54 cf       	rjmp	.-344    	; 0x34a8 <HAL_KEYPAD_u8_Get_Pressed_Key+0x92>
				u8_Local_Pressed_Key = u8_KeyPadButtons[j][i];
				_delay_ms(500);
				return u8_Local_Pressed_Key;
			}
		}
		MCAL_DIO_u8_Set_Pin_Value(u8_Local_Columns_Ports_Array[i] , u8_Local_Columns_Pins_Array[i] , High);
    3600:	88 89       	ldd	r24, Y+16	; 0x10
    3602:	28 2f       	mov	r18, r24
    3604:	30 e0       	ldi	r19, 0x00	; 0
    3606:	ce 01       	movw	r24, r28
    3608:	4f 96       	adiw	r24, 0x1f	; 31
    360a:	fc 01       	movw	r30, r24
    360c:	e2 0f       	add	r30, r18
    360e:	f3 1f       	adc	r31, r19
    3610:	40 81       	ld	r20, Z
    3612:	88 89       	ldd	r24, Y+16	; 0x10
    3614:	28 2f       	mov	r18, r24
    3616:	30 e0       	ldi	r19, 0x00	; 0
    3618:	ce 01       	movw	r24, r28
    361a:	4b 96       	adiw	r24, 0x1b	; 27
    361c:	fc 01       	movw	r30, r24
    361e:	e2 0f       	add	r30, r18
    3620:	f3 1f       	adc	r31, r19
    3622:	90 81       	ld	r25, Z
    3624:	84 2f       	mov	r24, r20
    3626:	69 2f       	mov	r22, r25
    3628:	41 e0       	ldi	r20, 0x01	; 1
    362a:	0e 94 ad 08 	call	0x115a	; 0x115a <MCAL_DIO_u8_Set_Pin_Value>
	u8_t u8_Local_Rows_Pins_Array[] = {KeyPad_Row1_Pin , KeyPad_Row2_Pin , KeyPad_Row3_Pin , KeyPad_Row4_Pin};
	u8_t u8_Local_Rows_Ports_Array[] = {KeyPad_Row1_Port , KeyPad_Row2_Port , KeyPad_Row3_Port , KeyPad_Row4_Port};
	u8_t u8_Local_Columns_Pins_Array[] = {KeyPad_Column1_Pin , KeyPad_Column2_Pin , KeyPad_Column3_Pin , KeyPad_Column4_Pin};
	u8_t u8_Local_Columns_Ports_Array[] = {KeyPad_Column1_Port , KeyPad_Column2_Port , KeyPad_Column3_Port , KeyPad_Column4_Port};

	for (u8_t i = 0; i <= 3 ; i++ ){
    362e:	88 89       	ldd	r24, Y+16	; 0x10
    3630:	8f 5f       	subi	r24, 0xFF	; 255
    3632:	88 8b       	std	Y+16, r24	; 0x10
    3634:	88 89       	ldd	r24, Y+16	; 0x10
    3636:	84 30       	cpi	r24, 0x04	; 4
    3638:	08 f4       	brcc	.+2      	; 0x363c <HAL_KEYPAD_u8_Get_Pressed_Key+0x226>
    363a:	1d cf       	rjmp	.-454    	; 0x3476 <HAL_KEYPAD_u8_Get_Pressed_Key+0x60>
				return u8_Local_Pressed_Key;
			}
		}
		MCAL_DIO_u8_Set_Pin_Value(u8_Local_Columns_Ports_Array[i] , u8_Local_Columns_Pins_Array[i] , High);
	}
	return u8_Local_Pressed_Key;
    363c:	89 89       	ldd	r24, Y+17	; 0x11
    363e:	8b a3       	std	Y+35, r24	; 0x23
    3640:	8b a1       	ldd	r24, Y+35	; 0x23
}
    3642:	a3 96       	adiw	r28, 0x23	; 35
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	f8 94       	cli
    3648:	de bf       	out	0x3e, r29	; 62
    364a:	0f be       	out	0x3f, r0	; 63
    364c:	cd bf       	out	0x3d, r28	; 61
    364e:	cf 91       	pop	r28
    3650:	df 91       	pop	r29
    3652:	08 95       	ret

00003654 <main>:
#include "../MCAL/DIO_Driver/DIO_Interface.h"
#include "../HAL/LCD_Driver/LCD_Interface.h"
#include "../HAL/KEYPAD_Driver/KEYPAD_Interface.h"


int main(){
    3654:	ef 92       	push	r14
    3656:	ff 92       	push	r15
    3658:	0f 93       	push	r16
    365a:	1f 93       	push	r17
    365c:	df 93       	push	r29
    365e:	cf 93       	push	r28
    3660:	cd b7       	in	r28, 0x3d	; 61
    3662:	de b7       	in	r29, 0x3e	; 62
    3664:	ee 97       	sbiw	r28, 0x3e	; 62
    3666:	0f b6       	in	r0, 0x3f	; 63
    3668:	f8 94       	cli
    366a:	de bf       	out	0x3e, r29	; 62
    366c:	0f be       	out	0x3f, r0	; 63
    366e:	cd bf       	out	0x3d, r28	; 61

	HAL_KEYPAD_Void_Init();
    3670:	0e 94 b4 19 	call	0x3368	; 0x3368 <HAL_KEYPAD_Void_Init>
	HAL_LCD_Void_Init();
    3674:	0e 94 5d 0e 	call	0x1cba	; 0x1cba <HAL_LCD_Void_Init>


	u8_t u8_Local_String1[] = "Calculator";
    3678:	9e 01       	movw	r18, r28
    367a:	2e 5e       	subi	r18, 0xEE	; 238
    367c:	3f 4f       	sbci	r19, 0xFF	; 255
    367e:	3e ab       	std	Y+54, r19	; 0x36
    3680:	2d ab       	std	Y+53, r18	; 0x35
    3682:	40 e6       	ldi	r20, 0x60	; 96
    3684:	50 e0       	ldi	r21, 0x00	; 0
    3686:	58 af       	std	Y+56, r21	; 0x38
    3688:	4f ab       	std	Y+55, r20	; 0x37
    368a:	5b e0       	ldi	r21, 0x0B	; 11
    368c:	59 af       	std	Y+57, r21	; 0x39
    368e:	ef a9       	ldd	r30, Y+55	; 0x37
    3690:	f8 ad       	ldd	r31, Y+56	; 0x38
    3692:	00 80       	ld	r0, Z
    3694:	2f a9       	ldd	r18, Y+55	; 0x37
    3696:	38 ad       	ldd	r19, Y+56	; 0x38
    3698:	2f 5f       	subi	r18, 0xFF	; 255
    369a:	3f 4f       	sbci	r19, 0xFF	; 255
    369c:	38 af       	std	Y+56, r19	; 0x38
    369e:	2f ab       	std	Y+55, r18	; 0x37
    36a0:	ed a9       	ldd	r30, Y+53	; 0x35
    36a2:	fe a9       	ldd	r31, Y+54	; 0x36
    36a4:	00 82       	st	Z, r0
    36a6:	2d a9       	ldd	r18, Y+53	; 0x35
    36a8:	3e a9       	ldd	r19, Y+54	; 0x36
    36aa:	2f 5f       	subi	r18, 0xFF	; 255
    36ac:	3f 4f       	sbci	r19, 0xFF	; 255
    36ae:	3e ab       	std	Y+54, r19	; 0x36
    36b0:	2d ab       	std	Y+53, r18	; 0x35
    36b2:	39 ad       	ldd	r19, Y+57	; 0x39
    36b4:	31 50       	subi	r19, 0x01	; 1
    36b6:	39 af       	std	Y+57, r19	; 0x39
    36b8:	49 ad       	ldd	r20, Y+57	; 0x39
    36ba:	44 23       	and	r20, r20
    36bc:	41 f7       	brne	.-48     	; 0x368e <main+0x3a>
	u8_t u8_Local_Error_Stirng[] = "Cant divide by Zero";
    36be:	ce 01       	movw	r24, r28
    36c0:	4d 96       	adiw	r24, 0x1d	; 29
    36c2:	9b af       	std	Y+59, r25	; 0x3b
    36c4:	8a af       	std	Y+58, r24	; 0x3a
    36c6:	eb e6       	ldi	r30, 0x6B	; 107
    36c8:	f0 e0       	ldi	r31, 0x00	; 0
    36ca:	fd af       	std	Y+61, r31	; 0x3d
    36cc:	ec af       	std	Y+60, r30	; 0x3c
    36ce:	f4 e1       	ldi	r31, 0x14	; 20
    36d0:	fe af       	std	Y+62, r31	; 0x3e
    36d2:	ec ad       	ldd	r30, Y+60	; 0x3c
    36d4:	fd ad       	ldd	r31, Y+61	; 0x3d
    36d6:	00 80       	ld	r0, Z
    36d8:	2c ad       	ldd	r18, Y+60	; 0x3c
    36da:	3d ad       	ldd	r19, Y+61	; 0x3d
    36dc:	2f 5f       	subi	r18, 0xFF	; 255
    36de:	3f 4f       	sbci	r19, 0xFF	; 255
    36e0:	3d af       	std	Y+61, r19	; 0x3d
    36e2:	2c af       	std	Y+60, r18	; 0x3c
    36e4:	ea ad       	ldd	r30, Y+58	; 0x3a
    36e6:	fb ad       	ldd	r31, Y+59	; 0x3b
    36e8:	00 82       	st	Z, r0
    36ea:	2a ad       	ldd	r18, Y+58	; 0x3a
    36ec:	3b ad       	ldd	r19, Y+59	; 0x3b
    36ee:	2f 5f       	subi	r18, 0xFF	; 255
    36f0:	3f 4f       	sbci	r19, 0xFF	; 255
    36f2:	3b af       	std	Y+59, r19	; 0x3b
    36f4:	2a af       	std	Y+58, r18	; 0x3a
    36f6:	3e ad       	ldd	r19, Y+62	; 0x3e
    36f8:	31 50       	subi	r19, 0x01	; 1
    36fa:	3e af       	std	Y+62, r19	; 0x3e
    36fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    36fe:	44 23       	and	r20, r20
    3700:	41 f7       	brne	.-48     	; 0x36d2 <main+0x7e>

	HAL_LCD_void_CursorPos(0 , 5);
    3702:	80 e0       	ldi	r24, 0x00	; 0
    3704:	65 e0       	ldi	r22, 0x05	; 5
    3706:	0e 94 87 19 	call	0x330e	; 0x330e <HAL_LCD_void_CursorPos>
	HAL_LCD_Void_Send_String(&u8_Local_String1);
    370a:	ce 01       	movw	r24, r28
    370c:	42 96       	adiw	r24, 0x12	; 18
    370e:	0e 94 93 16 	call	0x2d26	; 0x2d26 <HAL_LCD_Void_Send_String>
	HAL_LCD_void_CursorPos(1 , 0);
    3712:	81 e0       	ldi	r24, 0x01	; 1
    3714:	60 e0       	ldi	r22, 0x00	; 0
    3716:	0e 94 87 19 	call	0x330e	; 0x330e <HAL_LCD_void_CursorPos>

	u32_t u32_Local_Number1 = 0;
    371a:	19 8a       	std	Y+17, r1	; 0x11
    371c:	18 8a       	std	Y+16, r1	; 0x10
	u32_t u32_Local_Number2 = 0;
    371e:	1f 86       	std	Y+15, r1	; 0x0f
    3720:	1e 86       	std	Y+14, r1	; 0x0e
	u32_t u32_Local_Temp_Keypad_Return = 0;
    3722:	1d 86       	std	Y+13, r1	; 0x0d
    3724:	1c 86       	std	Y+12, r1	; 0x0c
	s32_t s32_Local_Neg_Result = 0;
    3726:	18 86       	std	Y+8, r1	; 0x08
    3728:	19 86       	std	Y+9, r1	; 0x09
    372a:	1a 86       	std	Y+10, r1	; 0x0a
    372c:	1b 86       	std	Y+11, r1	; 0x0b
	u8_t u8_Local_Operation_Flag = 5;
    372e:	85 e0       	ldi	r24, 0x05	; 5
    3730:	8f 83       	std	Y+7, r24	; 0x07
	f32_t f32_Local_Result = 0;
    3732:	80 e0       	ldi	r24, 0x00	; 0
    3734:	90 e0       	ldi	r25, 0x00	; 0
    3736:	a0 e0       	ldi	r26, 0x00	; 0
    3738:	b0 e0       	ldi	r27, 0x00	; 0
    373a:	8b 83       	std	Y+3, r24	; 0x03
    373c:	9c 83       	std	Y+4, r25	; 0x04
    373e:	ad 83       	std	Y+5, r26	; 0x05
    3740:	be 83       	std	Y+6, r27	; 0x06
	u8_t u8_Local_Counter = 1;
    3742:	81 e0       	ldi	r24, 0x01	; 1
    3744:	8a 83       	std	Y+2, r24	; 0x02

	while(1){
		u8_t u8_Local_Keypad_Return = HAL_KEYPAD_u8_Get_Pressed_Key();
    3746:	0e 94 0b 1a 	call	0x3416	; 0x3416 <HAL_KEYPAD_u8_Get_Pressed_Key>
    374a:	89 83       	std	Y+1, r24	; 0x01
		if(u8_Local_Keypad_Return != 'k'){
    374c:	89 81       	ldd	r24, Y+1	; 0x01
    374e:	8b 36       	cpi	r24, 0x6B	; 107
    3750:	d1 f3       	breq	.-12     	; 0x3746 <main+0xf2>
			switch(u8_Local_Keypad_Return){
    3752:	89 81       	ldd	r24, Y+1	; 0x01
    3754:	e8 2f       	mov	r30, r24
    3756:	f0 e0       	ldi	r31, 0x00	; 0
    3758:	fc ab       	std	Y+52, r31	; 0x34
    375a:	eb ab       	std	Y+51, r30	; 0x33
    375c:	2b a9       	ldd	r18, Y+51	; 0x33
    375e:	3c a9       	ldd	r19, Y+52	; 0x34
    3760:	2f 32       	cpi	r18, 0x2F	; 47
    3762:	31 05       	cpc	r19, r1
    3764:	19 f1       	breq	.+70     	; 0x37ac <main+0x158>
    3766:	4b a9       	ldd	r20, Y+51	; 0x33
    3768:	5c a9       	ldd	r21, Y+52	; 0x34
    376a:	40 33       	cpi	r20, 0x30	; 48
    376c:	51 05       	cpc	r21, r1
    376e:	8c f4       	brge	.+34     	; 0x3792 <main+0x13e>
    3770:	8b a9       	ldd	r24, Y+51	; 0x33
    3772:	9c a9       	ldd	r25, Y+52	; 0x34
    3774:	8b 32       	cpi	r24, 0x2B	; 43
    3776:	91 05       	cpc	r25, r1
    3778:	09 f4       	brne	.+2      	; 0x377c <main+0x128>
    377a:	41 c0       	rjmp	.+130    	; 0x37fe <main+0x1aa>
    377c:	eb a9       	ldd	r30, Y+51	; 0x33
    377e:	fc a9       	ldd	r31, Y+52	; 0x34
    3780:	ed 32       	cpi	r30, 0x2D	; 45
    3782:	f1 05       	cpc	r31, r1
    3784:	71 f1       	breq	.+92     	; 0x37e2 <main+0x18e>
    3786:	2b a9       	ldd	r18, Y+51	; 0x33
    3788:	3c a9       	ldd	r19, Y+52	; 0x34
    378a:	2a 32       	cpi	r18, 0x2A	; 42
    378c:	31 05       	cpc	r19, r1
    378e:	d9 f0       	breq	.+54     	; 0x37c6 <main+0x172>
    3790:	1c c1       	rjmp	.+568    	; 0x39ca <main+0x376>
    3792:	4b a9       	ldd	r20, Y+51	; 0x33
    3794:	5c a9       	ldd	r21, Y+52	; 0x34
    3796:	4d 33       	cpi	r20, 0x3D	; 61
    3798:	51 05       	cpc	r21, r1
    379a:	09 f4       	brne	.+2      	; 0x379e <main+0x14a>
    379c:	3e c0       	rjmp	.+124    	; 0x381a <main+0x1c6>
    379e:	8b a9       	ldd	r24, Y+51	; 0x33
    37a0:	9c a9       	ldd	r25, Y+52	; 0x34
    37a2:	83 36       	cpi	r24, 0x63	; 99
    37a4:	91 05       	cpc	r25, r1
    37a6:	09 f4       	brne	.+2      	; 0x37aa <main+0x156>
    37a8:	fa c0       	rjmp	.+500    	; 0x399e <main+0x34a>
    37aa:	0f c1       	rjmp	.+542    	; 0x39ca <main+0x376>
				case '/':
					u32_Local_Number2 = u32_Local_Number1;
    37ac:	88 89       	ldd	r24, Y+16	; 0x10
    37ae:	99 89       	ldd	r25, Y+17	; 0x11
    37b0:	9f 87       	std	Y+15, r25	; 0x0f
    37b2:	8e 87       	std	Y+14, r24	; 0x0e
					HAL_LCD_Void_Send_Char('/');
    37b4:	8f e2       	ldi	r24, 0x2F	; 47
    37b6:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
					u32_Local_Number1 = 0;
    37ba:	19 8a       	std	Y+17, r1	; 0x11
    37bc:	18 8a       	std	Y+16, r1	; 0x10
					u8_Local_Counter = 1;
    37be:	81 e0       	ldi	r24, 0x01	; 1
    37c0:	8a 83       	std	Y+2, r24	; 0x02
					u8_Local_Operation_Flag = 0;
    37c2:	1f 82       	std	Y+7, r1	; 0x07
    37c4:	c0 cf       	rjmp	.-128    	; 0x3746 <main+0xf2>
					break;
				case '*':
					u32_Local_Number2 = u32_Local_Number1;
    37c6:	88 89       	ldd	r24, Y+16	; 0x10
    37c8:	99 89       	ldd	r25, Y+17	; 0x11
    37ca:	9f 87       	std	Y+15, r25	; 0x0f
    37cc:	8e 87       	std	Y+14, r24	; 0x0e
					HAL_LCD_Void_Send_Char('*');
    37ce:	8a e2       	ldi	r24, 0x2A	; 42
    37d0:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
					u32_Local_Number1 = 0;
    37d4:	19 8a       	std	Y+17, r1	; 0x11
    37d6:	18 8a       	std	Y+16, r1	; 0x10
					u8_Local_Counter = 1;
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	8a 83       	std	Y+2, r24	; 0x02
					u8_Local_Operation_Flag = 1;
    37dc:	81 e0       	ldi	r24, 0x01	; 1
    37de:	8f 83       	std	Y+7, r24	; 0x07
    37e0:	b2 cf       	rjmp	.-156    	; 0x3746 <main+0xf2>
					break;
				case '-':
					u32_Local_Number2 = u32_Local_Number1;
    37e2:	88 89       	ldd	r24, Y+16	; 0x10
    37e4:	99 89       	ldd	r25, Y+17	; 0x11
    37e6:	9f 87       	std	Y+15, r25	; 0x0f
    37e8:	8e 87       	std	Y+14, r24	; 0x0e
					HAL_LCD_Void_Send_Char('-');
    37ea:	8d e2       	ldi	r24, 0x2D	; 45
    37ec:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
					u32_Local_Number1 = 0;
    37f0:	19 8a       	std	Y+17, r1	; 0x11
    37f2:	18 8a       	std	Y+16, r1	; 0x10
					u8_Local_Counter = 1;
    37f4:	81 e0       	ldi	r24, 0x01	; 1
    37f6:	8a 83       	std	Y+2, r24	; 0x02
					u8_Local_Operation_Flag = 2;
    37f8:	82 e0       	ldi	r24, 0x02	; 2
    37fa:	8f 83       	std	Y+7, r24	; 0x07
    37fc:	a4 cf       	rjmp	.-184    	; 0x3746 <main+0xf2>
					break;
				case '+':
					u32_Local_Number2 = u32_Local_Number1;
    37fe:	88 89       	ldd	r24, Y+16	; 0x10
    3800:	99 89       	ldd	r25, Y+17	; 0x11
    3802:	9f 87       	std	Y+15, r25	; 0x0f
    3804:	8e 87       	std	Y+14, r24	; 0x0e
					HAL_LCD_Void_Send_Char('+');
    3806:	8b e2       	ldi	r24, 0x2B	; 43
    3808:	0e 94 48 14 	call	0x2890	; 0x2890 <HAL_LCD_Void_Send_Char>
					u32_Local_Number1 = 0;
    380c:	19 8a       	std	Y+17, r1	; 0x11
    380e:	18 8a       	std	Y+16, r1	; 0x10
					u8_Local_Counter = 1;
    3810:	81 e0       	ldi	r24, 0x01	; 1
    3812:	8a 83       	std	Y+2, r24	; 0x02
					u8_Local_Operation_Flag = 3;
    3814:	83 e0       	ldi	r24, 0x03	; 3
    3816:	8f 83       	std	Y+7, r24	; 0x07
    3818:	96 cf       	rjmp	.-212    	; 0x3746 <main+0xf2>
					break;
				case '=':
					HAL_LCD_void_CursorPos(2 ,0);
    381a:	82 e0       	ldi	r24, 0x02	; 2
    381c:	60 e0       	ldi	r22, 0x00	; 0
    381e:	0e 94 87 19 	call	0x330e	; 0x330e <HAL_LCD_void_CursorPos>
					switch(u8_Local_Operation_Flag){
    3822:	8f 81       	ldd	r24, Y+7	; 0x07
    3824:	e8 2f       	mov	r30, r24
    3826:	f0 e0       	ldi	r31, 0x00	; 0
    3828:	fa ab       	std	Y+50, r31	; 0x32
    382a:	e9 ab       	std	Y+49, r30	; 0x31
    382c:	29 a9       	ldd	r18, Y+49	; 0x31
    382e:	3a a9       	ldd	r19, Y+50	; 0x32
    3830:	21 30       	cpi	r18, 0x01	; 1
    3832:	31 05       	cpc	r19, r1
    3834:	09 f4       	brne	.+2      	; 0x3838 <main+0x1e4>
    3836:	49 c0       	rjmp	.+146    	; 0x38ca <main+0x276>
    3838:	49 a9       	ldd	r20, Y+49	; 0x31
    383a:	5a a9       	ldd	r21, Y+50	; 0x32
    383c:	42 30       	cpi	r20, 0x02	; 2
    383e:	51 05       	cpc	r21, r1
    3840:	2c f4       	brge	.+10     	; 0x384c <main+0x1f8>
    3842:	89 a9       	ldd	r24, Y+49	; 0x31
    3844:	9a a9       	ldd	r25, Y+50	; 0x32
    3846:	00 97       	sbiw	r24, 0x00	; 0
    3848:	71 f0       	breq	.+28     	; 0x3866 <main+0x212>
    384a:	7d cf       	rjmp	.-262    	; 0x3746 <main+0xf2>
    384c:	e9 a9       	ldd	r30, Y+49	; 0x31
    384e:	fa a9       	ldd	r31, Y+50	; 0x32
    3850:	e2 30       	cpi	r30, 0x02	; 2
    3852:	f1 05       	cpc	r31, r1
    3854:	09 f4       	brne	.+2      	; 0x3858 <main+0x204>
    3856:	65 c0       	rjmp	.+202    	; 0x3922 <main+0x2ce>
    3858:	29 a9       	ldd	r18, Y+49	; 0x31
    385a:	3a a9       	ldd	r19, Y+50	; 0x32
    385c:	23 30       	cpi	r18, 0x03	; 3
    385e:	31 05       	cpc	r19, r1
    3860:	09 f4       	brne	.+2      	; 0x3864 <main+0x210>
    3862:	77 c0       	rjmp	.+238    	; 0x3952 <main+0x2fe>
    3864:	70 cf       	rjmp	.-288    	; 0x3746 <main+0xf2>
						case 0:
							if (u32_Local_Number1 == 0){HAL_LCD_Void_Send_String(&u8_Local_Error_Stirng);}
    3866:	88 89       	ldd	r24, Y+16	; 0x10
    3868:	99 89       	ldd	r25, Y+17	; 0x11
    386a:	00 97       	sbiw	r24, 0x00	; 0
    386c:	29 f4       	brne	.+10     	; 0x3878 <main+0x224>
    386e:	ce 01       	movw	r24, r28
    3870:	4d 96       	adiw	r24, 0x1d	; 29
    3872:	0e 94 93 16 	call	0x2d26	; 0x2d26 <HAL_LCD_Void_Send_String>
    3876:	67 cf       	rjmp	.-306    	; 0x3746 <main+0xf2>
							else{
								f32_Local_Result = (f32_t)u32_Local_Number2/u32_Local_Number1;
    3878:	8e 85       	ldd	r24, Y+14	; 0x0e
    387a:	9f 85       	ldd	r25, Y+15	; 0x0f
    387c:	cc 01       	movw	r24, r24
    387e:	a0 e0       	ldi	r26, 0x00	; 0
    3880:	b0 e0       	ldi	r27, 0x00	; 0
    3882:	bc 01       	movw	r22, r24
    3884:	cd 01       	movw	r24, r26
    3886:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    388a:	7b 01       	movw	r14, r22
    388c:	8c 01       	movw	r16, r24
    388e:	88 89       	ldd	r24, Y+16	; 0x10
    3890:	99 89       	ldd	r25, Y+17	; 0x11
    3892:	cc 01       	movw	r24, r24
    3894:	a0 e0       	ldi	r26, 0x00	; 0
    3896:	b0 e0       	ldi	r27, 0x00	; 0
    3898:	bc 01       	movw	r22, r24
    389a:	cd 01       	movw	r24, r26
    389c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    38a0:	9b 01       	movw	r18, r22
    38a2:	ac 01       	movw	r20, r24
    38a4:	c8 01       	movw	r24, r16
    38a6:	b7 01       	movw	r22, r14
    38a8:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    38ac:	dc 01       	movw	r26, r24
    38ae:	cb 01       	movw	r24, r22
    38b0:	8b 83       	std	Y+3, r24	; 0x03
    38b2:	9c 83       	std	Y+4, r25	; 0x04
    38b4:	ad 83       	std	Y+5, r26	; 0x05
    38b6:	be 83       	std	Y+6, r27	; 0x06
								HAL_LCD_Void_Send_Float(f32_Local_Result);
    38b8:	8b 81       	ldd	r24, Y+3	; 0x03
    38ba:	9c 81       	ldd	r25, Y+4	; 0x04
    38bc:	ad 81       	ldd	r26, Y+5	; 0x05
    38be:	be 81       	ldd	r27, Y+6	; 0x06
    38c0:	bc 01       	movw	r22, r24
    38c2:	cd 01       	movw	r24, r26
    38c4:	0e 94 3c 18 	call	0x3078	; 0x3078 <HAL_LCD_Void_Send_Float>
    38c8:	3e cf       	rjmp	.-388    	; 0x3746 <main+0xf2>
							}
							break;
						case 1:
							f32_Local_Result = u32_Local_Number2*u32_Local_Number1;
    38ca:	2e 85       	ldd	r18, Y+14	; 0x0e
    38cc:	3f 85       	ldd	r19, Y+15	; 0x0f
    38ce:	88 89       	ldd	r24, Y+16	; 0x10
    38d0:	99 89       	ldd	r25, Y+17	; 0x11
    38d2:	ac 01       	movw	r20, r24
    38d4:	24 9f       	mul	r18, r20
    38d6:	c0 01       	movw	r24, r0
    38d8:	25 9f       	mul	r18, r21
    38da:	90 0d       	add	r25, r0
    38dc:	34 9f       	mul	r19, r20
    38de:	90 0d       	add	r25, r0
    38e0:	11 24       	eor	r1, r1
    38e2:	cc 01       	movw	r24, r24
    38e4:	a0 e0       	ldi	r26, 0x00	; 0
    38e6:	b0 e0       	ldi	r27, 0x00	; 0
    38e8:	bc 01       	movw	r22, r24
    38ea:	cd 01       	movw	r24, r26
    38ec:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    38f0:	dc 01       	movw	r26, r24
    38f2:	cb 01       	movw	r24, r22
    38f4:	8b 83       	std	Y+3, r24	; 0x03
    38f6:	9c 83       	std	Y+4, r25	; 0x04
    38f8:	ad 83       	std	Y+5, r26	; 0x05
    38fa:	be 83       	std	Y+6, r27	; 0x06
							HAL_LCD_Void_Send_Float((s32_t)f32_Local_Result);
    38fc:	6b 81       	ldd	r22, Y+3	; 0x03
    38fe:	7c 81       	ldd	r23, Y+4	; 0x04
    3900:	8d 81       	ldd	r24, Y+5	; 0x05
    3902:	9e 81       	ldd	r25, Y+6	; 0x06
    3904:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
    3908:	dc 01       	movw	r26, r24
    390a:	cb 01       	movw	r24, r22
    390c:	bc 01       	movw	r22, r24
    390e:	cd 01       	movw	r24, r26
    3910:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    3914:	dc 01       	movw	r26, r24
    3916:	cb 01       	movw	r24, r22
    3918:	bc 01       	movw	r22, r24
    391a:	cd 01       	movw	r24, r26
    391c:	0e 94 3c 18 	call	0x3078	; 0x3078 <HAL_LCD_Void_Send_Float>
    3920:	12 cf       	rjmp	.-476    	; 0x3746 <main+0xf2>
							break;
						case 2:
							s32_Local_Neg_Result = u32_Local_Number2-u32_Local_Number1;
    3922:	2e 85       	ldd	r18, Y+14	; 0x0e
    3924:	3f 85       	ldd	r19, Y+15	; 0x0f
    3926:	88 89       	ldd	r24, Y+16	; 0x10
    3928:	99 89       	ldd	r25, Y+17	; 0x11
    392a:	f9 01       	movw	r30, r18
    392c:	e8 1b       	sub	r30, r24
    392e:	f9 0b       	sbc	r31, r25
    3930:	cf 01       	movw	r24, r30
    3932:	cc 01       	movw	r24, r24
    3934:	a0 e0       	ldi	r26, 0x00	; 0
    3936:	b0 e0       	ldi	r27, 0x00	; 0
    3938:	88 87       	std	Y+8, r24	; 0x08
    393a:	99 87       	std	Y+9, r25	; 0x09
    393c:	aa 87       	std	Y+10, r26	; 0x0a
    393e:	bb 87       	std	Y+11, r27	; 0x0b
							HAL_LCD_Void_Send_Integer(s32_Local_Neg_Result);
    3940:	88 85       	ldd	r24, Y+8	; 0x08
    3942:	99 85       	ldd	r25, Y+9	; 0x09
    3944:	aa 85       	ldd	r26, Y+10	; 0x0a
    3946:	bb 85       	ldd	r27, Y+11	; 0x0b
    3948:	bc 01       	movw	r22, r24
    394a:	cd 01       	movw	r24, r26
    394c:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <HAL_LCD_Void_Send_Integer>
    3950:	fa ce       	rjmp	.-524    	; 0x3746 <main+0xf2>
							break;
						case 3:
							f32_Local_Result = u32_Local_Number2+u32_Local_Number1;
    3952:	2e 85       	ldd	r18, Y+14	; 0x0e
    3954:	3f 85       	ldd	r19, Y+15	; 0x0f
    3956:	88 89       	ldd	r24, Y+16	; 0x10
    3958:	99 89       	ldd	r25, Y+17	; 0x11
    395a:	82 0f       	add	r24, r18
    395c:	93 1f       	adc	r25, r19
    395e:	cc 01       	movw	r24, r24
    3960:	a0 e0       	ldi	r26, 0x00	; 0
    3962:	b0 e0       	ldi	r27, 0x00	; 0
    3964:	bc 01       	movw	r22, r24
    3966:	cd 01       	movw	r24, r26
    3968:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__floatunsisf>
    396c:	dc 01       	movw	r26, r24
    396e:	cb 01       	movw	r24, r22
    3970:	8b 83       	std	Y+3, r24	; 0x03
    3972:	9c 83       	std	Y+4, r25	; 0x04
    3974:	ad 83       	std	Y+5, r26	; 0x05
    3976:	be 83       	std	Y+6, r27	; 0x06
							HAL_LCD_Void_Send_Float((s32_t)f32_Local_Result);
    3978:	6b 81       	ldd	r22, Y+3	; 0x03
    397a:	7c 81       	ldd	r23, Y+4	; 0x04
    397c:	8d 81       	ldd	r24, Y+5	; 0x05
    397e:	9e 81       	ldd	r25, Y+6	; 0x06
    3980:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fixsfsi>
    3984:	dc 01       	movw	r26, r24
    3986:	cb 01       	movw	r24, r22
    3988:	bc 01       	movw	r22, r24
    398a:	cd 01       	movw	r24, r26
    398c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__floatsisf>
    3990:	dc 01       	movw	r26, r24
    3992:	cb 01       	movw	r24, r22
    3994:	bc 01       	movw	r22, r24
    3996:	cd 01       	movw	r24, r26
    3998:	0e 94 3c 18 	call	0x3078	; 0x3078 <HAL_LCD_Void_Send_Float>
    399c:	d4 ce       	rjmp	.-600    	; 0x3746 <main+0xf2>
							break;
					}

					break;
				case 'c':
					u32_Local_Number1 = 0;
    399e:	19 8a       	std	Y+17, r1	; 0x11
    39a0:	18 8a       	std	Y+16, r1	; 0x10
					u32_Local_Number2 = 0;
    39a2:	1f 86       	std	Y+15, r1	; 0x0f
    39a4:	1e 86       	std	Y+14, r1	; 0x0e
					u8_Local_Counter = 1;
    39a6:	81 e0       	ldi	r24, 0x01	; 1
    39a8:	8a 83       	std	Y+2, r24	; 0x02
					HAL_LCD_Void_Send_Command(LCD_Clear);
    39aa:	81 e0       	ldi	r24, 0x01	; 1
    39ac:	0e 94 fd 11 	call	0x23fa	; 0x23fa <HAL_LCD_Void_Send_Command>
					HAL_LCD_void_CursorPos(0 , 5);
    39b0:	80 e0       	ldi	r24, 0x00	; 0
    39b2:	65 e0       	ldi	r22, 0x05	; 5
    39b4:	0e 94 87 19 	call	0x330e	; 0x330e <HAL_LCD_void_CursorPos>
					HAL_LCD_Void_Send_String(&u8_Local_String1);
    39b8:	ce 01       	movw	r24, r28
    39ba:	42 96       	adiw	r24, 0x12	; 18
    39bc:	0e 94 93 16 	call	0x2d26	; 0x2d26 <HAL_LCD_Void_Send_String>
					HAL_LCD_void_CursorPos(1 ,0);
    39c0:	81 e0       	ldi	r24, 0x01	; 1
    39c2:	60 e0       	ldi	r22, 0x00	; 0
    39c4:	0e 94 87 19 	call	0x330e	; 0x330e <HAL_LCD_void_CursorPos>
    39c8:	be ce       	rjmp	.-644    	; 0x3746 <main+0xf2>
					break;
				default:
					u32_Local_Temp_Keypad_Return = u8_Local_Keypad_Return;
    39ca:	89 81       	ldd	r24, Y+1	; 0x01
    39cc:	88 2f       	mov	r24, r24
    39ce:	90 e0       	ldi	r25, 0x00	; 0
    39d0:	9d 87       	std	Y+13, r25	; 0x0d
    39d2:	8c 87       	std	Y+12, r24	; 0x0c
					if(u8_Local_Counter > 1){u32_Local_Number1 *= 10;}
    39d4:	8a 81       	ldd	r24, Y+2	; 0x02
    39d6:	82 30       	cpi	r24, 0x02	; 2
    39d8:	70 f0       	brcs	.+28     	; 0x39f6 <main+0x3a2>
    39da:	88 89       	ldd	r24, Y+16	; 0x10
    39dc:	99 89       	ldd	r25, Y+17	; 0x11
    39de:	9c 01       	movw	r18, r24
    39e0:	22 0f       	add	r18, r18
    39e2:	33 1f       	adc	r19, r19
    39e4:	c9 01       	movw	r24, r18
    39e6:	88 0f       	add	r24, r24
    39e8:	99 1f       	adc	r25, r25
    39ea:	88 0f       	add	r24, r24
    39ec:	99 1f       	adc	r25, r25
    39ee:	82 0f       	add	r24, r18
    39f0:	93 1f       	adc	r25, r19
    39f2:	99 8b       	std	Y+17, r25	; 0x11
    39f4:	88 8b       	std	Y+16, r24	; 0x10
					u8_Local_Counter++;
    39f6:	8a 81       	ldd	r24, Y+2	; 0x02
    39f8:	8f 5f       	subi	r24, 0xFF	; 255
    39fa:	8a 83       	std	Y+2, r24	; 0x02
					u32_Local_Number1 += u32_Local_Temp_Keypad_Return;
    39fc:	28 89       	ldd	r18, Y+16	; 0x10
    39fe:	39 89       	ldd	r19, Y+17	; 0x11
    3a00:	8c 85       	ldd	r24, Y+12	; 0x0c
    3a02:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a04:	82 0f       	add	r24, r18
    3a06:	93 1f       	adc	r25, r19
    3a08:	99 8b       	std	Y+17, r25	; 0x11
    3a0a:	88 8b       	std	Y+16, r24	; 0x10
					HAL_LCD_Void_Send_Integer(u32_Local_Temp_Keypad_Return);
    3a0c:	8c 85       	ldd	r24, Y+12	; 0x0c
    3a0e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a10:	cc 01       	movw	r24, r24
    3a12:	a0 e0       	ldi	r26, 0x00	; 0
    3a14:	b0 e0       	ldi	r27, 0x00	; 0
    3a16:	bc 01       	movw	r22, r24
    3a18:	cd 01       	movw	r24, r26
    3a1a:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <HAL_LCD_Void_Send_Integer>
    3a1e:	93 ce       	rjmp	.-730    	; 0x3746 <main+0xf2>

00003a20 <__udivmodhi4>:
    3a20:	aa 1b       	sub	r26, r26
    3a22:	bb 1b       	sub	r27, r27
    3a24:	51 e1       	ldi	r21, 0x11	; 17
    3a26:	07 c0       	rjmp	.+14     	; 0x3a36 <__udivmodhi4_ep>

00003a28 <__udivmodhi4_loop>:
    3a28:	aa 1f       	adc	r26, r26
    3a2a:	bb 1f       	adc	r27, r27
    3a2c:	a6 17       	cp	r26, r22
    3a2e:	b7 07       	cpc	r27, r23
    3a30:	10 f0       	brcs	.+4      	; 0x3a36 <__udivmodhi4_ep>
    3a32:	a6 1b       	sub	r26, r22
    3a34:	b7 0b       	sbc	r27, r23

00003a36 <__udivmodhi4_ep>:
    3a36:	88 1f       	adc	r24, r24
    3a38:	99 1f       	adc	r25, r25
    3a3a:	5a 95       	dec	r21
    3a3c:	a9 f7       	brne	.-22     	; 0x3a28 <__udivmodhi4_loop>
    3a3e:	80 95       	com	r24
    3a40:	90 95       	com	r25
    3a42:	bc 01       	movw	r22, r24
    3a44:	cd 01       	movw	r24, r26
    3a46:	08 95       	ret

00003a48 <__divmodsi4>:
    3a48:	97 fb       	bst	r25, 7
    3a4a:	09 2e       	mov	r0, r25
    3a4c:	05 26       	eor	r0, r21
    3a4e:	0e d0       	rcall	.+28     	; 0x3a6c <__divmodsi4_neg1>
    3a50:	57 fd       	sbrc	r21, 7
    3a52:	04 d0       	rcall	.+8      	; 0x3a5c <__divmodsi4_neg2>
    3a54:	14 d0       	rcall	.+40     	; 0x3a7e <__udivmodsi4>
    3a56:	0a d0       	rcall	.+20     	; 0x3a6c <__divmodsi4_neg1>
    3a58:	00 1c       	adc	r0, r0
    3a5a:	38 f4       	brcc	.+14     	; 0x3a6a <__divmodsi4_exit>

00003a5c <__divmodsi4_neg2>:
    3a5c:	50 95       	com	r21
    3a5e:	40 95       	com	r20
    3a60:	30 95       	com	r19
    3a62:	21 95       	neg	r18
    3a64:	3f 4f       	sbci	r19, 0xFF	; 255
    3a66:	4f 4f       	sbci	r20, 0xFF	; 255
    3a68:	5f 4f       	sbci	r21, 0xFF	; 255

00003a6a <__divmodsi4_exit>:
    3a6a:	08 95       	ret

00003a6c <__divmodsi4_neg1>:
    3a6c:	f6 f7       	brtc	.-4      	; 0x3a6a <__divmodsi4_exit>
    3a6e:	90 95       	com	r25
    3a70:	80 95       	com	r24
    3a72:	70 95       	com	r23
    3a74:	61 95       	neg	r22
    3a76:	7f 4f       	sbci	r23, 0xFF	; 255
    3a78:	8f 4f       	sbci	r24, 0xFF	; 255
    3a7a:	9f 4f       	sbci	r25, 0xFF	; 255
    3a7c:	08 95       	ret

00003a7e <__udivmodsi4>:
    3a7e:	a1 e2       	ldi	r26, 0x21	; 33
    3a80:	1a 2e       	mov	r1, r26
    3a82:	aa 1b       	sub	r26, r26
    3a84:	bb 1b       	sub	r27, r27
    3a86:	fd 01       	movw	r30, r26
    3a88:	0d c0       	rjmp	.+26     	; 0x3aa4 <__udivmodsi4_ep>

00003a8a <__udivmodsi4_loop>:
    3a8a:	aa 1f       	adc	r26, r26
    3a8c:	bb 1f       	adc	r27, r27
    3a8e:	ee 1f       	adc	r30, r30
    3a90:	ff 1f       	adc	r31, r31
    3a92:	a2 17       	cp	r26, r18
    3a94:	b3 07       	cpc	r27, r19
    3a96:	e4 07       	cpc	r30, r20
    3a98:	f5 07       	cpc	r31, r21
    3a9a:	20 f0       	brcs	.+8      	; 0x3aa4 <__udivmodsi4_ep>
    3a9c:	a2 1b       	sub	r26, r18
    3a9e:	b3 0b       	sbc	r27, r19
    3aa0:	e4 0b       	sbc	r30, r20
    3aa2:	f5 0b       	sbc	r31, r21

00003aa4 <__udivmodsi4_ep>:
    3aa4:	66 1f       	adc	r22, r22
    3aa6:	77 1f       	adc	r23, r23
    3aa8:	88 1f       	adc	r24, r24
    3aaa:	99 1f       	adc	r25, r25
    3aac:	1a 94       	dec	r1
    3aae:	69 f7       	brne	.-38     	; 0x3a8a <__udivmodsi4_loop>
    3ab0:	60 95       	com	r22
    3ab2:	70 95       	com	r23
    3ab4:	80 95       	com	r24
    3ab6:	90 95       	com	r25
    3ab8:	9b 01       	movw	r18, r22
    3aba:	ac 01       	movw	r20, r24
    3abc:	bd 01       	movw	r22, r26
    3abe:	cf 01       	movw	r24, r30
    3ac0:	08 95       	ret

00003ac2 <__prologue_saves__>:
    3ac2:	2f 92       	push	r2
    3ac4:	3f 92       	push	r3
    3ac6:	4f 92       	push	r4
    3ac8:	5f 92       	push	r5
    3aca:	6f 92       	push	r6
    3acc:	7f 92       	push	r7
    3ace:	8f 92       	push	r8
    3ad0:	9f 92       	push	r9
    3ad2:	af 92       	push	r10
    3ad4:	bf 92       	push	r11
    3ad6:	cf 92       	push	r12
    3ad8:	df 92       	push	r13
    3ada:	ef 92       	push	r14
    3adc:	ff 92       	push	r15
    3ade:	0f 93       	push	r16
    3ae0:	1f 93       	push	r17
    3ae2:	cf 93       	push	r28
    3ae4:	df 93       	push	r29
    3ae6:	cd b7       	in	r28, 0x3d	; 61
    3ae8:	de b7       	in	r29, 0x3e	; 62
    3aea:	ca 1b       	sub	r28, r26
    3aec:	db 0b       	sbc	r29, r27
    3aee:	0f b6       	in	r0, 0x3f	; 63
    3af0:	f8 94       	cli
    3af2:	de bf       	out	0x3e, r29	; 62
    3af4:	0f be       	out	0x3f, r0	; 63
    3af6:	cd bf       	out	0x3d, r28	; 61
    3af8:	09 94       	ijmp

00003afa <__epilogue_restores__>:
    3afa:	2a 88       	ldd	r2, Y+18	; 0x12
    3afc:	39 88       	ldd	r3, Y+17	; 0x11
    3afe:	48 88       	ldd	r4, Y+16	; 0x10
    3b00:	5f 84       	ldd	r5, Y+15	; 0x0f
    3b02:	6e 84       	ldd	r6, Y+14	; 0x0e
    3b04:	7d 84       	ldd	r7, Y+13	; 0x0d
    3b06:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b08:	9b 84       	ldd	r9, Y+11	; 0x0b
    3b0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b0c:	b9 84       	ldd	r11, Y+9	; 0x09
    3b0e:	c8 84       	ldd	r12, Y+8	; 0x08
    3b10:	df 80       	ldd	r13, Y+7	; 0x07
    3b12:	ee 80       	ldd	r14, Y+6	; 0x06
    3b14:	fd 80       	ldd	r15, Y+5	; 0x05
    3b16:	0c 81       	ldd	r16, Y+4	; 0x04
    3b18:	1b 81       	ldd	r17, Y+3	; 0x03
    3b1a:	aa 81       	ldd	r26, Y+2	; 0x02
    3b1c:	b9 81       	ldd	r27, Y+1	; 0x01
    3b1e:	ce 0f       	add	r28, r30
    3b20:	d1 1d       	adc	r29, r1
    3b22:	0f b6       	in	r0, 0x3f	; 63
    3b24:	f8 94       	cli
    3b26:	de bf       	out	0x3e, r29	; 62
    3b28:	0f be       	out	0x3f, r0	; 63
    3b2a:	cd bf       	out	0x3d, r28	; 61
    3b2c:	ed 01       	movw	r28, r26
    3b2e:	08 95       	ret

00003b30 <_exit>:
    3b30:	f8 94       	cli

00003b32 <__stop_program>:
    3b32:	ff cf       	rjmp	.-2      	; 0x3b32 <__stop_program>
